openapi: 3.0.0
info:
  title: 'Dataddo Headless BETA API'
  description: 'Dataddo Headless BETA API'
  version: 1.0.0-beta.1
servers:
  -
    url: 'https://headless.dataddo.com/customer-api/v1'
    description: 'Dataddo Headless BETA API'
  -
    url: 'http://localhost:8004/customer-api/v1'
    description: 'Dataddo Headless BETA API (localhost)'
paths:
  /connectors/amazon_ads/actions/authorization:
    get:
      tags:
        - connectors.amazonAds
      summary: 'List of authorization objects'
      operationId: amazonAdsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/amazon_ads/actions/profile:
    post:
      tags:
        - connectors.amazonAds
      summary: 'List of profile ids'
      operationId: amazonAdsControllerActionProfile
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  oAuthId: { type: string, example: '0' }
                type: object
      responses:
        '200':
          description: 'List of Amazon Ads profiles'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/reportType:
    post:
      tags:
        - connectors.amazonAds
      summary: 'List Amazon Ads report types'
      operationId: amazonAdsControllerActionReportType
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  adProduct: { type: string }
                type: object
                example:
                  adProduct: SPONSORED_PRODUCTS
      responses:
        '200':
          description: 'List of Amazon Ads report types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/adProduct:
    get:
      tags:
        - connectors.amazonAds
      summary: 'List Amazon Ads report category/ad product'
      operationId: amazonAdsControllerActionAdProduct
      responses:
        '200':
          description: 'List of report categories (ad products)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/groupBy:
    post:
      tags:
        - connectors.amazonAds
      summary: 'List Amazon Ads grouping parameters'
      operationId: amazonAdsControllerActionGroupBy
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  reportType: { type: string }
                type: object
                example:
                  reportType: spCampaigns
      responses:
        '200':
          description: 'List of Amazon Ads grouping options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/timeUnit:
    get:
      tags:
        - connectors.amazonAds
      summary: 'List Amazon Ads time units'
      operationId: amazonAdsControllerActionTimeUnit
      responses:
        '200':
          description: 'List of available time units'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/column:
    post:
      tags:
        - connectors.amazonAds
      summary: 'List Amazon Ads columns'
      operationId: amazonAdsControllerActionColumn
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  reportType: { type: string }
                  timeUnit: { type: string }
                  groupBy: { type: array, items: {  } }
                type: object
      responses:
        '200':
          description: 'List of Amazon Ads columns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/actions/dateRange:
    get:
      tags:
        - connectors.amazonAds
      summary: 'Method for listing date range'
      operationId: amazonAdsControllerActionDateRange
      responses:
        '200':
          description: 'List of Amazon Ads date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_ads/preview:
    post:
      tags:
        - connectors.amazonAds
      summary: 'Preview the data'
      operationId: amazonAdsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAdsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/amazon_ads/create-source:
    post:
      tags:
        - connectors.amazonAds
      summary: 'Create Amazon Ads source'
      operationId: amazonAdsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAdsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/amazon_ads_data_extractor/preview:
    post:
      tags:
        - connectors.amazonAdsDataExtractor
      summary: 'Preview the data'
      operationId: amazonAdsDataExtractorControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAdsDataExtractorConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/amazon_ads_data_extractor/create-source:
    post:
      tags:
        - connectors.amazonAdsDataExtractor
      summary: 'Create Amazon Ads Data Extractor source'
      operationId: amazonAdsDataExtractorControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAdsDataExtractorConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/black_diamond_batch/actions/authorization:
    get:
      tags:
        - connectors.blackDiamondBatch
      summary: 'List of authorization objects'
      operationId: blackDiamondBatchControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/blackDiamondBatch/actions/object:
    post:
      tags:
        - connectors.blackDiamondBatch
      summary: 'List of objects'
      operationId: blackDiamondBatchControllerActionObject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of all available objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/blackDiamondBatch/actions/metrics:
    post:
      tags:
        - connectors.blackDiamondBatch
      summary: 'List Black Diamond metrics'
      operationId: blackDiamondBatchControllerActionMetrics
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  object: { type: string }
                type: object
      responses:
        '200':
          description: 'List of Black Diamond metrics'
  /connectors/black_diamond_batch/preview:
    post:
      tags:
        - connectors.blackDiamondBatch
      summary: 'Preview the data'
      operationId: blackDiamondBatchControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackDiamondBatchConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/black_diamond_batch/create-source:
    post:
      tags:
        - connectors.blackDiamondBatch
      summary: 'Create Black Diamond Batch source'
      operationId: blackDiamondBatchControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackDiamondBatchConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/black_diamond_extractor/preview:
    post:
      tags:
        - connectors.blackDiamondExtractor
      summary: 'Preview the data'
      operationId: blackDiamondExtractorControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackDiamondExtractorConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/black_diamond_extractor/create-source:
    post:
      tags:
        - connectors.blackDiamondExtractor
      summary: 'Create Black Diamond Extractor source'
      operationId: blackDiamondExtractorControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackDiamondExtractorConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/everflow/actions/authorization:
    get:
      tags:
        - connectors.everflow
      summary: 'List of authorization objects'
      operationId: everflowControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/everflow/actions/reportType:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all report types'
      operationId: everflowControllerActionReportType
      responses:
        '200':
          description: 'List of report types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/column:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all columns'
      operationId: everflowControllerActionColumn
      responses:
        '200':
          description: 'List of column objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/timeColumn:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all time columns'
      operationId: everflowControllerActionTimeColumn
      responses:
        '200':
          description: 'List of time column objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/timezoneId:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all timezones'
      operationId: everflowControllerActionTimezoneId
      responses:
        '200':
          description: 'List of timezone objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/currency:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all currencies'
      operationId: everflowControllerActionCurrency
      responses:
        '200':
          description: 'List of currency objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/metric:
    post:
      tags:
        - connectors.everflow
      summary: 'List of all metrics'
      operationId: everflowControllerActionMetric
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: aggregated_data
              type: object
      responses:
        '200':
          description: 'List of Everflow metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/actions/dateRange:
    get:
      tags:
        - connectors.everflow
      summary: 'List of all date ranges'
      operationId: everflowControllerActionDateRange
      responses:
        '200':
          description: 'List of Everflow date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/everflow/preview:
    post:
      tags:
        - connectors.everflow
      summary: 'Preview the data'
      operationId: everflowControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EverflowConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/everflow/create-source:
    post:
      tags:
        - connectors.everflow
      summary: 'Create Everflow source'
      operationId: everflowControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EverflowConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_graph/actions/authorization:
    get:
      tags:
        - connectors.facebookGraph
      summary: 'List of authorization objects'
      operationId: facebookGraphControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_graph/actions/page:
    post:
      tags:
        - connectors.facebookGraph
      summary: 'List of pages'
      description: 'Method for Facebook Page'
      operationId: facebookGraphControllerActionPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_graph/actions/instagramUser:
    post:
      tags:
        - connectors.facebookGraph
      summary: 'List of pages'
      description: 'Prints all Instagram Accounts'
      operationId: facebookGraphControllerActionInstagramUser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_graph/actions/account:
    post:
      tags:
        - connectors.facebookGraph
      summary: 'List of Ad accounts'
      description: "Gets all AdAccounts ID.\nData is displayed in connector form"
      operationId: facebookGraphControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Ad accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_graph/preview:
    post:
      tags:
        - connectors.facebookGraph
      summary: 'Preview the data'
      operationId: facebookGraphControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookGraphConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_graph/create-source:
    post:
      tags:
        - connectors.facebookGraph
      summary: 'Create Facebook Graph source'
      operationId: facebookGraphControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookGraphConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_graph/templates:
    get:
      tags:
        - connectors.facebookGraph
      summary: 'List all Facebook Graph dataset templates'
      operationId: facebookGraphControllerActionTemplates
      responses:
        '200':
          description: 'List all Facebook Graph dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/facebook_graph/templates/{id}':
    get:
      tags:
        - connectors.facebookGraph
      summary: 'List details of dataset template'
      operationId: facebookGraphControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/facebook_leads/actions/authorization:
    get:
      tags:
        - connectors.facebookLeads
      summary: 'List of authorization objects'
      operationId: facebookLeadsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_leads/actions/attribute:
    get:
      tags:
        - connectors.facebookLeads
      summary: 'List of attributes'
      description: 'List all data labels'
      operationId: facebookLeadsControllerActionAttribute
      responses:
        '200':
          description: 'List of attributes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_leads/actions/page:
    post:
      tags:
        - connectors.facebookLeads
      summary: 'List of pages'
      description: 'Prints all Facebook pages'
      operationId: facebookLeadsControllerActionPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_leads/actions/form:
    post:
      tags:
        - connectors.facebookLeads
      summary: 'List of lead forms'
      description: 'Prints all Facebook lead-collection forms associated with a particular page'
      operationId: facebookLeadsControllerActionForm
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                pageId:
                  type: string
                  example: '12345678910'
              type: object
      responses:
        '200':
          description: 'List of lead forms'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_leads/actions/limit:
    get:
      tags:
        - connectors.facebookLeads
      summary: 'List of lead limit options'
      description: 'List all post limit options'
      operationId: facebookLeadsControllerActionLimit
      responses:
        '200':
          description: 'List of lead limit options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_leads/actions/dateRange:
    get:
      tags:
        - connectors.facebookLeads
      summary: 'Method for listing date range'
      description: 'Method for listing date range'
      operationId: facebookLeadsControllerActionDateRange
      responses:
        '200':
          description: 'List of Facebook Leads date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_leads/preview:
    post:
      tags:
        - connectors.facebookLeads
      summary: 'Preview the data'
      operationId: facebookLeadsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookLeadsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_leads/create-source:
    post:
      tags:
        - connectors.facebookLeads
      summary: 'Create Facebook Leads source'
      operationId: facebookLeadsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookLeadsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_page/actions/authorization:
    get:
      tags:
        - connectors.facebookPage
      summary: 'List of authorization objects'
      operationId: facebookPageControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_page/actions/page:
    post:
      tags:
        - connectors.facebookPage
      summary: 'List all available Facebook Pages'
      operationId: facebookPageControllerActionPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Facebook pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/actions/metric:
    get:
      tags:
        - connectors.facebookPage
      summary: 'List Facebook Page metrics'
      operationId: facebookPageControllerActionMetric
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/actions/defaultMetric:
    get:
      tags:
        - connectors.facebookPage
      summary: 'List all default metrics'
      operationId: facebookPageControllerActionDefaultMetric
      responses:
        '200':
          description: 'List of default metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/actions/defaultDataLabel:
    get:
      tags:
        - connectors.facebookPage
      summary: 'List all default data labels'
      operationId: facebookPageControllerActionDefaultDataLabel
      responses:
        '200':
          description: 'List of default data labels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/actions/dataLabel:
    get:
      tags:
        - connectors.facebookPage
      summary: 'List all Facebook Page data labels'
      operationId: facebookPageControllerActionDataLabel
      responses:
        '200':
          description: 'List of data label objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/actions/dateRange:
    get:
      tags:
        - connectors.facebookPage
      summary: 'Method for listing date range'
      description: 'Method for listing date range'
      operationId: facebookPageControllerActionDateRange
      responses:
        '200':
          description: 'List of Facebook Page date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_page/preview:
    post:
      tags:
        - connectors.facebookPage
      summary: 'Preview the data'
      description: 'Preview the data'
      operationId: facebookPageControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookPageConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_page/create-source:
    post:
      tags:
        - connectors.facebookPage
      summary: 'Create Facebook Page source'
      operationId: facebookPageControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookPageConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_post/actions/authorization:
    get:
      tags:
        - connectors.facebookPost
      summary: 'List of authorization objects'
      operationId: facebookPostControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_post/actions/page:
    post:
      tags:
        - connectors.facebookPost
      summary: 'List of all Facebook pages'
      operationId: facebookPostControllerActionPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
            example:
              oAuthId: 0
      responses:
        '200':
          description: 'List of all Facebook pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_post/actions/metric:
    get:
      tags:
        - connectors.facebookPost
      summary: 'List of all metrics'
      operationId: facebookPostControllerActionMetric
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { label: { type: string }, value: { type: string }, category: { type: string } }
                  type: object
  /connectors/facebook_post/actions/dataLabel:
    get:
      tags:
        - connectors.facebookPost
      summary: 'List of all data labels'
      operationId: facebookPostControllerActionDataLabel
      responses:
        '200':
          description: 'List of data label objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_post/actions/defaultDataLabel:
    get:
      tags:
        - connectors.facebookPost
      summary: 'List of all default data labels'
      operationId: facebookPostControllerActionDefaultDataLabel
      responses:
        '200':
          description: 'List of default data label objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_post/actions/limit:
    get:
      tags:
        - connectors.facebookPost
      summary: 'List of all limits'
      description: 'List all post limit options'
      operationId: facebookPostControllerActionLimit
      responses:
        '200':
          description: 'List of all limits'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_post/preview:
    post:
      tags:
        - connectors.facebookPost
      summary: 'Preview the data'
      operationId: facebookPostControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookPostConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_post/create-source:
    post:
      tags:
        - connectors.facebookPost
      summary: 'Create FacebookPost source'
      operationId: facebookPostControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookPostConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_video/actions/authorization:
    get:
      tags:
        - connectors.facebookVideo
      summary: 'List of authorization objects'
      operationId: facebookVideoControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_video/actions/page:
    post:
      tags:
        - connectors.facebookVideo
      summary: 'List of facebook pages'
      operationId: facebookVideoControllerActionPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of facebook pages'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_video/actions/metric:
    get:
      tags:
        - connectors.facebookVideo
      summary: 'List of metrics'
      operationId: facebookVideoControllerActionMetric
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { label: { type: string }, value: { type: string }, category: { type: string } }
                  type: object
  /connectors/facebook_video/actions/dataLabel:
    get:
      tags:
        - connectors.facebookVideo
      summary: 'List of data label objects'
      operationId: facebookVideoControllerActionDataLabel
      responses:
        '200':
          description: 'List of data label objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_video/actions/limit:
    get:
      tags:
        - connectors.facebookVideo
      summary: 'List all post limit options'
      operationId: facebookVideoControllerActionLimit
      responses:
        '200':
          description: 'List all post limit options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_video/preview:
    post:
      tags:
        - connectors.facebookVideo
      summary: 'Preview the data'
      operationId: facebookVideoControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookVideoConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_video/create-source:
    post:
      tags:
        - connectors.facebookVideo
      summary: 'Create Facebook Video source'
      operationId: facebookVideoControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookVideoConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/google_ads/actions/authorization:
    get:
      tags:
        - connectors.googleAds
      summary: 'List of authorization objects'
      operationId: googleAdsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/google_ads/actions/metric:
    post:
      tags:
        - connectors.googleAds
      summary: 'List of metric objects'
      operationId: googleAdsControllerActionMetric
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/actions/attribute:
    post:
      tags:
        - connectors.googleAds
      summary: 'List of all attributes'
      operationId: googleAdsControllerActionAttribute
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of attribute objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/actions/segment:
    post:
      tags:
        - connectors.googleAds
      summary: 'List of all segments'
      operationId: googleAdsControllerActionSegment
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of all segments'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/actions/reportType:
    get:
      tags:
        - connectors.googleAds
      summary: 'List of all report types'
      operationId: googleAdsControllerActionReportType
      responses:
        '200':
          description: 'List of report types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/actions/customer:
    post:
      tags:
        - connectors.googleAds
      summary: 'List of customers'
      operationId: googleAdsControllerActionCustomer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of customers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/actions/customerClient:
    post:
      tags:
        - connectors.googleAds
      summary: 'List of clients'
      operationId: googleAdsControllerActionCustomerClient
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: ''
                googleCustomerId:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of clients'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_ads/preview:
    post:
      tags:
        - connectors.googleAds
      summary: 'Preview the data'
      operationId: googleAdsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAdsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/google_ads/create-source:
    post:
      tags:
        - connectors.googleAds
      summary: 'Create GoogleAds source'
      operationId: googleAdsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAdsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/google_analytics4/actions/authorization:
    get:
      tags:
        - connectors.googleAnalytics4
      summary: 'List of authorization objects'
      operationId: googleAnalytics4ControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/google_analytics4/actions/account:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'List of accounts'
      operationId: googleAnalytics4ControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_analytics4/actions/property:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'List of properties'
      operationId: googleAnalytics4ControllerActionProperty
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                accountId:
                  type: integer
                  example: 0
              type: object
      responses:
        '200':
          description: 'List of properties'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_analytics4/actions/metric:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'List of metrics'
      operationId: googleAnalytics4ControllerActionMetric
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  oAuthId: { type: string }
                  propertyId: { type: string }
                type: object
                example:
                  oAuthId: 0
                  propertyId: '123456789'
      responses:
        '200':
          description: 'List of metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_analytics4/actions/dimension:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'Get Google Analytics dimensions'
      operationId: googleAnalytics4ControllerActionDimension
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                propertyId:
                  type: string
                  example: properties/123456789
              type: object
      responses:
        '200':
          description: 'List of dimensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_analytics4/preview:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'Preview the data'
      operationId: googleAnalytics4ControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAnalytics4ConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/google_analytics4/create-source:
    post:
      tags:
        - connectors.googleAnalytics4
      summary: 'Create Google Analytics 4 source'
      operationId: googleAnalytics4ControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAnalytics4ConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/google_analytics/actions/authorization:
    get:
      tags:
        - connectors.googleAnalytics
      summary: 'List of authorization objects'
      operationId: googleAnalyticsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/google_analytics/actions/account:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'List of accounts'
      operationId: googleAnalyticsControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /connectors/google_analytics/actions/property:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'List of properties'
      operationId: googleAnalyticsControllerActionProperty
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                accountId:
                  type: integer
                  example: 0
              type: object
      responses:
        '200':
          description: 'List of properties'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /connectors/google_analytics/actions/view:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'List of views'
      operationId: googleAnalyticsControllerActionView
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                accountId:
                  type: integer
                  example: 0
                propertyId:
                  type: string
                  example: UA-000000-0
              type: object
      responses:
        '200':
          description: 'List of views'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /connectors/google_analytics/actions/metric:
    get:
      tags:
        - connectors.googleAnalytics
      summary: 'List of metric objects'
      operationId: googleAnalyticsControllerActionMetric
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { label: { type: string }, value: { type: string }, category: { type: string } }
                  type: object
  /connectors/google_analytics/actions/dimension:
    get:
      tags:
        - connectors.googleAnalytics
      summary: 'List of dimension objects'
      operationId: googleAnalyticsControllerActionDimension
      responses:
        '200':
          description: 'List of dimension objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { label: { type: string }, value: { type: string }, category: { type: string } }
                  type: object
  /connectors/google_analytics/actions/dataLabel:
    get:
      tags:
        - connectors.googleAnalytics
      summary: 'List of data label objects'
      operationId: googleAnalyticsControllerActionDataLabel
      responses:
        '200':
          description: 'List of data label objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { label: { type: string }, value: { type: string }, category: { type: string } }
                  type: object
  /connectors/google_analytics/actions/segment:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'List of saved segments'
      operationId: googleAnalyticsControllerActionSegment
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of saved segments'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_analytics/preview:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'Preview the data'
      operationId: googleAnalyticsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAnalyticsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/google_analytics/create-source:
    post:
      tags:
        - connectors.googleAnalytics
      summary: 'Create Google Analytics source'
      operationId: googleAnalyticsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAnalyticsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/google_campaign_manager/actions/authorization:
    get:
      tags:
        - connectors.GoogleCampaignManager
      summary: 'List of authorization objects'
      operationId: googleCampaignManagerControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/google_campaign_manager/actions/profile:
    post:
      tags:
        - connectors.GoogleCampaignManager
      summary: 'List of profile ids'
      operationId: googleCampaignManagerControllerActionProfile
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  oAuthId: { type: string, example: '0' }
                type: object
      responses:
        '200':
          description: 'List of Google Campaign Manager profiles'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_campaign_manager/actions/reportType:
    post:
      tags:
        - connectors.GoogleCampaignManager
      summary: 'List Google Campaign Manager report types'
      operationId: googleCampaignManagerControllerActionReportType
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                properties:
                  adProduct: { type: string }
                type: object
                example:
                  adProduct: SPONSORED_PRODUCTS
      responses:
        '200':
          description: 'List of Google Campaign Manager report types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_campaign_manager/preview:
    post:
      tags:
        - connectors.GoogleCampaignManager
      summary: 'Preview the data'
      operationId: googleCampaignManagerControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCampaignManagerConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/google_campaign_manager/create-source:
    post:
      tags:
        - connectors.GoogleCampaignManager
      summary: 'Create Google Campaign Manager source'
      operationId: googleCampaignManagerControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCampaignManagerConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/gorgias/actions/authorization:
    get:
      tags:
        - connectors.gorgias
      summary: 'List of authorization objects'
      operationId: gorgiasControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/gorgias/actions/subdomain:
    post:
      tags:
        - connectors.gorgias
      summary: 'List of all subdomains'
      description: 'Method for listing Gorgias subdomain'
      operationId: gorgiasControllerActionSubdomain
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of subdomains'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/gorgias/preview:
    post:
      tags:
        - connectors.gorgias
      summary: 'Preview the data'
      operationId: gorgiasControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GorgiasConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/gorgias/create-source:
    post:
      tags:
        - connectors.gorgias
      summary: 'Create Gorgias  source'
      operationId: gorgiasControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GorgiasConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/gorgias/templates:
    get:
      tags:
        - connectors.gorgias
      summary: 'List all Gorgias dataset templates'
      operationId: gorgiasControllerActionTemplates
      responses:
        '200':
          description: 'List all Gorgias dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/gorgias/templates/{id}':
    get:
      tags:
        - connectors.gorgias
      summary: 'List details of dataset template'
      operationId: gorgiasControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/hubspot/actions/authorization:
    get:
      tags:
        - connectors.hubspot
      summary: 'List of authorization objects'
      operationId: hubspotControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/hubspot/actions/object:
    post:
      tags:
        - connectors.hubspot
      summary: 'List of objects'
      description: 'List all available objects'
      operationId: hubspotControllerActionObject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'List of all available objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/hubspot/actions/properties:
    post:
      tags:
        - connectors.hubspot
      summary: 'List of properties'
      description: 'List available properties'
      operationId: hubspotControllerActionProperty
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: ''
                object:
                  type: string
                  example: companies
              type: object
      responses:
        '200':
          description: 'List of all available properties'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/hubspot/actions/dateRange:
    get:
      tags:
        - connectors.hubspot
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: hubspotControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/hubspot/preview:
    post:
      tags:
        - connectors.hubspot
      summary: 'Preview the data'
      operationId: hubspotControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubspotConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/hubspot/create-source:
    post:
      tags:
        - connectors.hubspot
      summary: 'Create a Hubspot source'
      operationId: hubspotControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubspotConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/instagram_media/actions/authorization:
    get:
      tags:
        - connectors.instagramMedia
      summary: 'List of authorization objects'
      operationId: instagramMediaControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/instagram_media/actions/account:
    post:
      tags:
        - connectors.instagramMedia
      summary: 'List of accounts'
      description: 'Prints all Instagram Media'
      operationId: instagramMediaControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/instagram_media/actions/attribute:
    get:
      tags:
        - connectors.instagramMedia
      summary: 'List of attributes'
      description: 'List all data labels'
      operationId: instagramMediaControllerActionAttribute
      responses:
        '200':
          description: 'List of attribute objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/instagram_media/preview:
    post:
      tags:
        - connectors.instagramMedia
      summary: 'Preview the data'
      operationId: instagramMediaControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstagramMediaConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/instagram_media/create-source:
    post:
      tags:
        - connectors.instagramMedia
      summary: 'Create Instagram Media source'
      operationId: instagramMediaControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstagramMediaConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/instagram_user/actions/authorization:
    get:
      tags:
        - connectors.instagramUser
      summary: 'List of authorization objects'
      operationId: instagramUserControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/instagram_user/actions/account:
    post:
      tags:
        - connectors.instagramUser
      summary: 'List of accounts'
      description: 'Prints all Instagram Media'
      operationId: instagramUserControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/instagram_user/actions/attribute:
    get:
      tags:
        - connectors.instagramUser
      summary: 'List of attributes'
      description: 'List all data labels'
      operationId: instagramUserControllerActionAttribute
      responses:
        '200':
          description: 'List of attribute objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/instagram_user/actions/dateRange:
    get:
      tags:
        - connectors.instagramUser
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: instagramUserControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/instagram_user/preview:
    post:
      tags:
        - connectors.instagramUser
      summary: 'Preview the data'
      operationId: instagramUserControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstagramUserConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/instagram_user/create-source:
    post:
      tags:
        - connectors.instagramUser
      summary: 'Create Instagram User source'
      operationId: instagramUserControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstagramUserConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/mailchimp/actions/authorization:
    get:
      tags:
        - connectors.mailchimp
      summary: 'List of authorization objects'
      operationId: mailchimpControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/mailchimp/actions/dc:
    post:
      tags:
        - connectors.mailchimp
      summary: 'List of data centers'
      operationId: mailchimpControllerActionDc
      responses:
        '200':
          description: 'List of data centers'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { key: { type: string }, value: { type: string } }
                  type: object
  /connectors/mailchimp/actions/list:
    post:
      tags:
        - connectors.mailchimp
      summary: 'List of contacts'
      operationId: mailchimpControllerActionList
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                dc:
                  type: string
                  example: us1
              type: object
      responses:
        '200':
          description: 'List of contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mailchimp/preview:
    post:
      tags:
        - connectors.mailchimp
      summary: 'Preview the data'
      operationId: mailchimpControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailchimpConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/mailchimp/create-source:
    post:
      tags:
        - connectors.mailchimp
      summary: 'Create Mailchimp User source'
      operationId: mailchimpControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailchimpConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/mailchimp/templates:
    get:
      tags:
        - connectors.mailchimp
      summary: 'List all Mailchimp dataset templates'
      operationId: mailchimpControllerActionTemplates
      responses:
        '200':
          description: 'List all Mailchimp dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/mailchimp/templates/{id}':
    get:
      tags:
        - connectors.mailchimp
      summary: 'List details of dataset template'
      operationId: mailchimpControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/matomo/actions/siteId:
    get:
      tags:
        - connectors.matomo
      summary: "List of Site Id's"
      description: 'Method for listing site id'
      operationId: matomoControllerActionSiteId
      responses:
        '200':
          description: "List of Site Id's"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/dateRange:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: pinterestControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/authorization:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of authorization objects'
      operationId: pinterestControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/pinterest/actions/advertiser:
    post:
      tags:
        - connectors.pinterest
      summary: 'List of ads accounts'
      description: "Gets all Advertisers ID.\nData is displayed in connector form\nIs truncating the value of the advertise_id at the moment"
      operationId: pinterestControllerActionAdvertiser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of ads accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/reportLevel:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of reporting levels'
      description: 'Reporting Level'
      operationId: pinterestControllerActionReportLevel
      responses:
        '200':
          description: 'List of reporting levels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/granularity:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of time breakdowns'
      description: Granularity.
      operationId: pinterestControllerActionGranularity
      responses:
        '200':
          description: 'List of time breakdowns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/clickWindowDays:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of click windows'
      description: 'View window days.'
      operationId: pinterestControllerActionClickWindowDays
      responses:
        '200':
          description: 'List of click windows'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/engagementWindowDays:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of engagement windows'
      description: 'View window days.'
      operationId: pinterestControllerActionEngagementWindowDays
      responses:
        '200':
          description: 'List of engagement windows'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/viewWindowDays:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of view windows'
      description: 'View window days.'
      operationId: pinterestControllerActionViewWindowDays
      responses:
        '200':
          description: 'List of view windows'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/conversionTime:
    get:
      tags:
        - connectors.pinterest
      summary: 'List of conversion times'
      description: 'Conversion report time.'
      operationId: pinterestControllerActionConversionTime
      responses:
        '200':
          description: 'List of conversion times'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/column:
    post:
      tags:
        - connectors.pinterest
      summary: 'List of columns'
      description: 'List all columns'
      operationId: pinterestControllerActionColumn
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportLevel:
                  type: string
                  example: ads
              type: object
      responses:
        '200':
          description: 'List of columns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/actions/dataLabel:
    post:
      tags:
        - connectors.pinterest
      summary: 'List of data labels'
      description: 'List all data labels'
      operationId: pinterestControllerActionDataLabel
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportLevel:
                  type: string
                  example: ads
              type: object
      responses:
        '200':
          description: 'List of data labels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pinterest/preview:
    post:
      tags:
        - connectors.pinterest
      summary: 'Preview the data'
      operationId: pinterestControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinterestConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/pinterest/create-source:
    post:
      tags:
        - connectors.pinterest
      summary: 'Create Pinterest source'
      operationId: pinterestControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinterestConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/salesforce/actions/authorization:
    get:
      tags:
        - connectors.salesforce
      summary: 'List of authorization objects'
      operationId: salesforceControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/salesforce/actions/instance:
    post:
      tags:
        - connectors.salesforce
      summary: "List all available instance\nIt is possible to use centralized authentication server (login.salesforce.com) even if custom domain is used"
      operationId: salesforceControllerActionInstance
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Salesforce instances'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/salesforce/actions/apiVersion:
    post:
      tags:
        - connectors.salesforce
      summary: 'List available API versions'
      operationId: salesforceControllerActionApiVersion
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                instance:
                  type: string
                  example: example.com
              type: object
      responses:
        '200':
          description: 'List of Salesforce API Versions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/salesforce/actions/object:
    post:
      tags:
        - connectors.salesforce
      summary: 'Gets all Marketing cloud data extensions'
      operationId: salesforceControllerActionObject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                instance:
                  type: string
                  example: example.my.salesforce.com
                apiVersion:
                  type: string
                  example: '31.0'
              type: object
      responses:
        '200':
          description: 'List of Salesforce objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/salesforce/actions/attribute:
    post:
      tags:
        - connectors.salesforce
      summary: 'Gets all available data extensions attributes'
      operationId: salesforceControllerActionAttribute
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                instance:
                  type: string
                  example: example.my.salesforce.com
                apiVersion:
                  type: string
                  example: '31.0'
                object:
                  type: string
                  example: Account
              type: object
      responses:
        '200':
          description: 'List of Salesforce attributes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/salesforce/preview:
    post:
      tags:
        - connectors.salesforce
      summary: 'Preview the data'
      operationId: salesforceControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesforceConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/salesforce/create-source:
    post:
      tags:
        - connectors.salesforce
      summary: 'Create Salesforce source'
      operationId: salesforceControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesforceConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/similarweb/actions/authorization:
    get:
      tags:
        - connectors.similarweb
      summary: 'List of authorization objects'
      operationId: similarwebControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/similarweb/actions/dateRange:
    get:
      tags:
        - connectors.similarweb
      summary: 'Method for listing date range'
      description: 'Method for listing date range'
      operationId: similarwebControllerActionDateRange
      responses:
        '200':
          description: 'List of Similarweb date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/similarweb/preview:
    post:
      tags:
        - connectors.similarweb
      summary: 'Preview the data'
      operationId: similarwebControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarwebConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/similarweb/create-source:
    post:
      tags:
        - connectors.similarweb
      summary: 'Create Similarweb source'
      operationId: similarwebControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarwebConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/similarweb/templates:
    get:
      tags:
        - connectors.similarweb
      summary: 'List all Similarweb dataset templates'
      operationId: similarwebControllerActionTemplates
      responses:
        '200':
          description: 'List all Similarweb dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/similarweb/templates/{id}':
    get:
      tags:
        - connectors.similarweb
      summary: 'List details of dataset template'
      operationId: similarwebControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/snapchat/actions/authorization:
    get:
      tags:
        - connectors.snapchat
      summary: 'List of authorization objects'
      operationId: snapchatControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/snapchat/actions/organization:
    post:
      tags:
        - connectors.snapchat
      summary: 'List of Snapchat organization IDs'
      operationId: snapchatControllerActionOrganization
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
              type: object
      responses:
        '200':
          description: 'List of Snapchat organization IDs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/account:
    post:
      tags:
        - connectors.snapchat
      summary: 'List of all Snapchat Ad account IDs'
      description: 'List all AdAccount IDs'
      operationId: snapchatControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
                organizationId:
                  type: string
                  example: 12abc3de-456f-78g9-h123-45i6j789kl12
              type: object
      responses:
        '200':
          description: 'List of all Snapchat Ad account IDs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/campaign:
    post:
      tags:
        - connectors.snapchat
      summary: 'List of all Snapchat campaign IDs'
      description: 'List all Campaign IDs'
      operationId: snapchatControllerActionCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
                accountId:
                  type: string
                  example: '12345'
              type: object
      responses:
        '200':
          description: 'List of all Snapchat Ad account IDs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/breakdown:
    get:
      tags:
        - connectors.snapchat
      summary: 'List of stats breakdowns'
      description: 'Method for listing stats breakdowns'
      operationId: snapchatControllerActionBreakdown
      responses:
        '200':
          description: 'List of stats breakdowns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/metric:
    get:
      tags:
        - connectors.snapchat
      summary: 'List of all metrics'
      description: 'List all metrics'
      operationId: snapchatControllerActionMetric
      responses:
        '200':
          description: 'List of all metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/labels:
    get:
      tags:
        - connectors.snapchat
      summary: 'List of all labels'
      description: 'List all labels'
      operationId: snapchatControllerActionLabels
      responses:
        '200':
          description: 'List of all labels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/actions/dateRange:
    get:
      tags:
        - connectors.snapchat
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: snapchatControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat/preview:
    post:
      tags:
        - connectors.snapchat
      summary: 'Preview the data'
      operationId: snapchatControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapchatConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/snapchat/create-source:
    post:
      tags:
        - connectors.snapchat
      summary: 'Create Snapchat source'
      operationId: snapchatControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapchatConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/snapchat_lookup/actions/authorization:
    get:
      tags:
        - connectors.snapchatLookup
      summary: 'List of authorization objects'
      operationId: snapchatLookupControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/snapchat_lookup/actions/organization:
    post:
      tags:
        - connectors.snapchatLookup
      summary: 'List of organizations'
      description: 'List all the Organization IDs'
      operationId: snapchatLookupControllerActionOrganization
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of organizations'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat_lookup/actions/account:
    post:
      tags:
        - connectors.snapchatLookup
      summary: 'List of accounts'
      description: 'List all AdAccount IDs'
      operationId: snapchatLookupControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                organizationId:
                  type: string
                  example: abc123
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat_lookup/actions/level:
    get:
      tags:
        - connectors.snapchatLookup
      summary: 'List of levels'
      description: 'Method for listing levels'
      operationId: snapchatLookupControllerActionLevel
      responses:
        '200':
          description: 'List of level objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat_lookup/actions/attribute:
    post:
      tags:
        - connectors.snapchatLookup
      summary: 'List of attributes'
      description: 'Method for listing attributes'
      operationId: snapchatLookupControllerActionAttribute
      requestBody:
        content:
          application/json:
            schema:
              properties:
                level:
                  type: string
                  example: CAMPAIGN
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snapchat_lookup/preview:
    post:
      tags:
        - connectors.snapchatLookup
      summary: 'Preview the data'
      operationId: snapchatLookupControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapchatLookupConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/snapchat_lookup/create-source:
    post:
      tags:
        - connectors.snapchatLookup
      summary: 'Create Snapchat Lookup source'
      operationId: snapchatLookupControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapchatLookupConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/tik_tok/actions/authorization:
    get:
      tags:
        - connectors.tikTok
      summary: 'List of authorization objects'
      operationId: tikTokControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/tik_tok/actions/advertiser:
    post:
      tags:
        - connectors.tikTok
      summary: 'List of advertisers'
      description: "Gets all Advertisers ID.\nData is displayed in connector form\nIs truncating the value of the advertise_id at the moment"
      operationId: tikTokControllerActionAdvertiser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of advertisers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/reportType:
    get:
      tags:
        - connectors.tikTok
      summary: 'List of report types'
      description: 'Reporting Type. Basic, Audience ...'
      operationId: tikTokControllerActionReportType
      responses:
        '200':
          description: 'List of report types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/dataLevel:
    post:
      tags:
        - connectors.tikTok
      summary: 'List of data levels'
      description: 'List all Data Levels'
      operationId: tikTokControllerActionDataLevel
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: BASIC
              type: object
      responses:
        '200':
          description: 'List of data levels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/idDimension:
    post:
      tags:
        - connectors.tikTok
      summary: 'List of all ID dimensions'
      description: 'List all ID dimensions'
      operationId: tikTokControllerActionIdDimension
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: Basic
                dataLevel:
                  type: string
                  example: 'Auction Ad'
              type: object
      responses:
        '200':
          description: 'List of all ID dimensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/timeDimension:
    post:
      tags:
        - connectors.tikTok
      summary: 'List of all time dimensions'
      description: 'List all Time dimensions'
      operationId: tikTokControllerActionTimeDimension
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: Basic
                dataLevel:
                  type: string
                  example: 'Auction Ad'
              type: object
      responses:
        '200':
          description: 'List of all time dimensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/audienceDimension:
    post:
      tags:
        - connectors.tikTok
      summary: 'List of all audience dimensions'
      description: 'List all Audience dimensionss'
      operationId: tikTokControllerActionAudienceDimension
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: Audience
                dataLevel:
                  type: string
                  example: 'Auction Ad'
              type: object
      responses:
        '200':
          description: 'List of all audience dimensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/metric:
    post:
      tags:
        - connectors.tikTok
      summary: 'List all metrics'
      description: 'List all metrics'
      operationId: tikTokControllerActionMetric
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: BASIC
              type: object
      responses:
        '200':
          description: 'List metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/dataLabel:
    post:
      tags:
        - connectors.tikTok
      summary: 'List all data labels'
      description: 'Data Label. Dimensions + labels ...'
      operationId: tikTokControllerActionDataLabel
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reportType:
                  type: string
                  example: BASIC
                idDimension:
                  type: string
                  example: ad_id
              type: object
      responses:
        '200':
          description: 'List data labels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/actions/dateRange:
    get:
      tags:
        - connectors.tikTok
      summary: 'Method for listing date range'
      description: 'Method for listing date range'
      operationId: tikTokControllerActionDateRange
      responses:
        '200':
          description: 'List of TikTok date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/tik_tok/preview:
    post:
      tags:
        - connectors.tikTok
      summary: 'Preview the data'
      operationId: tikTokControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TikTokConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/tik_tok/create-source:
    post:
      tags:
        - connectors.tikTok
      summary: 'Create TikTok source'
      operationId: tikTokControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TikTokConnectorForm'
      responses:
        '200':
          description: 'Create TikTok source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/twitter_ads/actions/authorization:
    get:
      tags:
        - connectors.twitterAds
      summary: 'List of authorization objects'
      operationId: twitterAdsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/twitter_ads/actions/account:
    post:
      tags:
        - connectors.twitterAds
      summary: 'List of all Twitter accounts'
      description: 'Method for listing Twitter accounts'
      operationId: twitterAdsControllerActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
              type: object
      responses:
        '200':
          description: 'List of all Twitter accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/twitter_ads/actions/campaign:
    post:
      tags:
        - connectors.twitterAds
      summary: 'List of all Twitter Ads campaign IDs'
      description: 'Method for listing Twitter campaigns'
      operationId: twitterAdsControllerActionCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
                accountId:
                  type: string
                  example: '12345'
              type: object
      responses:
        '200':
          description: 'List of all Twitter Ads campaign IDs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/twitter_ads/actions/dateRange:
    get:
      tags:
        - connectors.twitterAds
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: twitterAdsControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/twitter_ads/preview:
    post:
      tags:
        - connectors.twitterAds
      summary: 'Preview the data'
      operationId: twitterAdsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwitterAdsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/twitter_ads/create-source:
    post:
      tags:
        - connectors.twitterAds
      summary: 'Create Twitter Ads source'
      operationId: twitterAdsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwitterAdsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/twitter_ads/templates:
    get:
      tags:
        - connectors.twitterAds
      summary: 'List all Twitter Ads dataset templates'
      operationId: twitterAdsControllerActionTemplates
      responses:
        '200':
          description: 'List all Twitter Ads dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/twitter_ads/templates/{id}':
    get:
      tags:
        - connectors.twitterAds
      summary: 'List details of dataset template'
      operationId: twitterAdsControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/twitter_organic/actions/authorization:
    get:
      tags:
        - connectors.twitterOrganic
      summary: 'List of authorization objects'
      operationId: twitterOrganicControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/twitter_organic/actions/profile:
    post:
      tags:
        - connectors.twitterOrganic
      summary: 'List of all Twitter profiles'
      description: 'Method for listing Twitter profile'
      operationId: twitterOrganicControllerActionProfile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '12345'
              type: object
      responses:
        '200':
          description: 'List of all Twitter profiles'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/twitter_organic/actions/dateRange:
    get:
      tags:
        - connectors.twitterOrganic
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: twitterOrganicControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/twitter_organic/preview:
    post:
      tags:
        - connectors.twitterOrganic
      summary: 'Preview the data'
      operationId: twitterOrganicControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwitterAdsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/twitter_organic/create-source:
    post:
      tags:
        - connectors.twitterOrganic
      summary: 'Create Twitter Organic source'
      operationId: twitterOrganicControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwitterAdsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/twitter_organic/templates:
    get:
      tags:
        - connectors.twitterOrganic
      summary: 'List all Twitter Organic dataset templates'
      operationId: twitterOrganicControllerActionTemplates
      responses:
        '200':
          description: 'List all Twitter Organic dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/twitter_organic/templates/{id}':
    get:
      tags:
        - connectors.twitterOrganic
      summary: 'List details of dataset template'
      operationId: twitterOrganicControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/youtube_analytics/actions/authorization:
    get:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List of authorization objects'
      operationId: youtubeAnalyticsControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/youtube_analytics/actions/channel:
    post:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List of channels'
      description: 'Method for listing YT Channels'
      operationId: youtubeAnalyticsControllerActionChannel
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '1234'
              type: object
      responses:
        '200':
          description: 'List of channels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_analytics/actions/playlist:
    post:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List of playlists'
      operationId: youtubeAnalyticsControllerActionPlaylist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '1234'
                channelId:
                  type: string
                  example: UPI98uKUMDiRiDkZ9
              type: object
      responses:
        '200':
          description: 'List of playlists'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_analytics/actions/dateRange:
    get:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: youtubeAnalyticsControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_analytics/preview:
    post:
      tags:
        - connectors.youtubeAnalytics
      summary: 'Preview the data'
      operationId: youtubeAnalyticsControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YoutubeAnalyticsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/youtube_analytics/create-source:
    post:
      tags:
        - connectors.youtubeAnalytics
      summary: 'Create Youtube Analytics source'
      operationId: youtubeAnalyticsControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YoutubeAnalyticsConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/youtube_analytics/templates:
    get:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List all Youtube Analytics dataset templates'
      operationId: youtubeAnalyticsControllerActionTemplates
      responses:
        '200':
          description: 'List all Youtube Analytics dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/youtube_analytics/templates/{id}':
    get:
      tags:
        - connectors.youtubeAnalytics
      summary: 'List Youtube Analytics of dataset template'
      operationId: youtubeAnalyticsControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/youtube_video/actions/authorization:
    get:
      tags:
        - connectors.youtubeVideo
      summary: 'List of authorization objects'
      operationId: youtubeVideoControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/youtube_video/actions/channel:
    post:
      tags:
        - connectors.youtubeVideo
      summary: 'List of channels'
      description: 'Method for listing YT Channels'
      operationId: youtubeVideoControllerActionChannel
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '1234'
              type: object
      responses:
        '200':
          description: 'List of channels'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_video/actions/playlist:
    post:
      tags:
        - connectors.youtubeVideo
      summary: 'List of playlists'
      operationId: youtubeVideoControllerActionPlaylist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '1234'
                channelId:
                  type: string
                  example: UPI98uKUMDiRiDkZ9
              type: object
      responses:
        '200':
          description: 'List of playlists'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_video/actions/attribute:
    get:
      tags:
        - connectors.youtubeVideo
      summary: 'List of attributes'
      description: 'List all attributes'
      operationId: youtubeVideoControllerActionAttribute
      responses:
        '200':
          description: 'List of attribute objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_video/actions/defaultAttribute:
    get:
      tags:
        - connectors.youtubeVideo
      summary: 'List of attributes'
      description: 'List all attributes'
      operationId: youtubeVideoControllerActionDefaultAttribute
      responses:
        '200':
          description: 'List of default attribute objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_video/actions/dateRange:
    get:
      tags:
        - connectors.youtubeVideo
      summary: 'List of date ranges'
      description: 'Method for listing date range'
      operationId: youtubeVideoControllerActionDateRange
      responses:
        '200':
          description: 'List of date range objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/youtube_video/preview:
    post:
      tags:
        - connectors.youtubeVideo
      summary: 'Preview the data'
      operationId: youtubeVideoControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YoutubeVideoConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/youtube_video/create-source:
    post:
      tags:
        - connectors.youtubeVideo
      summary: 'Create Youtube Video source'
      operationId: youtubeVideoControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YoutubeVideoConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/zendesk/actions/authorization:
    get:
      tags:
        - connectors.zendesk
      summary: 'List of authorization objects'
      operationId: zendeskControllerActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/zendesk/templates:
    get:
      tags:
        - connectors.zendesk
      summary: 'List all Zendesk dataset templates'
      operationId: zendeskControllerActionTemplates
      responses:
        '200':
          description: 'List all Zendesk dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/zendesk/templates/{id}':
    get:
      tags:
        - connectors.zendesk
      summary: 'List details of dataset template'
      operationId: zendeskControllerActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/zendesk/preview:
    post:
      tags:
        - connectors.zendesk
      summary: 'Preview the data'
      operationId: zendeskControllerActionPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZendeskConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/zendesk/create-source:
    post:
      tags:
        - connectors.zendesk
      summary: 'Create Zendesk source'
      operationId: zendeskControllerActionLoad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZendeskConnectorForm'
      responses:
        '200':
          description: 'Create source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/zendesk/actions/dateRange:
    get:
      tags:
        - connectors.zendesk
      summary: 'Method for listing date range'
      operationId: zendeskControllerActionDateRange
      responses:
        '200':
          description: 'List of Zendesk date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/alloy_db/actions/tls:
    get:
      tags:
        - services.alloyDb
      summary: 'List of SSL options'
      operationId: appAuthorizerAlloyDbAlloyDbAuthorizerActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/alloy_db:
    post:
      tags:
        - services.alloyDb
      summary: 'Create service'
      operationId: appAuthorizerAlloyDbAlloyDbAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: alloy_db
                  example: alloy_db
                data:
                  $ref: '#/components/schemas/AlloyDbDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlloyDbUserAuth'
  /services/amazon_ads_custom/oauth-request-url:
    post:
      tags:
        - services.amazonAdsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerAmazonAdsCustomAmazonAdsCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/amazon_ads_custom/oauth-process-callback:
    post:
      tags:
        - services.amazonAdsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerAmazonAdsCustomAmazonAdsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/AmazonAdsCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonAdsCustomUserAuth'
  /services/amazon_selling_partner_custom/oauth-request-url:
    post:
      tags:
        - services.amazonSellingPartnerCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerAmazonSellingPartnerCustomAmazonSellingPartnerCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [appId, redirectUri]
                  properties: { appId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/amazon_selling_partner_custom/oauth-process-callback:
    post:
      tags:
        - services.amazonSellingPartnerCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerAmazonSellingPartnerCustomAmazonSellingPartnerCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/AmazonSellingPartnerCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonSellingPartnerCustomUserAuth'
  /services/amazon_vendor_partner/oauth-request-url:
    post:
      tags:
        - services.amazonVendorPartner
      summary: 'Builds redirect URL'
      operationId: appAuthorizerAmazonVendorPartnerAmazonVendorPartnerAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  properties: { region: { type: string }, store_name: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/aws_aurora/actions/tls:
    get:
      tags:
        - services.aws_aurora
      summary: 'List of TLS options'
      operationId: appAuthorizerAwsAuroraAwsAuroraAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/aws_aurora:
    post:
      tags:
        - services.aws_aurora
      summary: 'Create service'
      operationId: appAuthorizerAwsAuroraAwsAuroraAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_aurora
                  example: aws_aurora
                data:
                  $ref: '#/components/schemas/AwsAuroraDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAuroraUserAuth'
  /services/aws_aurora_pgsql/actions/tls:
    get:
      tags:
        - services.aws_aurora_pgsql
      summary: 'List of TLS options'
      operationId: appAuthorizerAwsAuroraPgsqlAwsAuroraPgsqlAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/aws_aurora_pgsql:
    post:
      tags:
        - services.aws_aurora_pgsql
      summary: 'Create service'
      operationId: appAuthorizerAwsAuroraPgsqlAwsAuroraPgsqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_aurora_pgsql
                  example: aws_aurora_pgsql
                data:
                  $ref: '#/components/schemas/AwsAuroraPgsqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAuroraPgsqlUserAuth'
  /services/aws_mariadb/actions/tls:
    get:
      tags:
        - services.aws_mariadb
      summary: 'List of TLS options'
      operationId: appAuthorizerAwsMariadbAwsMariadbAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/aws_mariadb:
    post:
      tags:
        - services.aws_mariadb
      summary: 'Create service'
      operationId: appAuthorizerAwsMariadbAwsMariadbAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_mariadb
                  example: aws_mariadb
                data:
                  $ref: '#/components/schemas/AwsMariadbDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsMariadbUserAuth'
  /services/aws_mssql:
    post:
      tags:
        - services.aws_mssql
      summary: 'Create service'
      operationId: appAuthorizerAwsMssqlAwsMssqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_mssql
                  example: aws_mssql
                data:
                  $ref: '#/components/schemas/AwsMssqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsMssqlUserAuth'
  /services/aws_mysql/actions/tls:
    get:
      tags:
        - services.aws_mysql
      summary: 'List of TLS options'
      operationId: appAuthorizerAwsMysqlAwsMysqlAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/aws_mysql:
    post:
      tags:
        - services.aws_mysql
      summary: 'Create service'
      operationId: appAuthorizerAwsMysqlAwsMysqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_mysql
                  example: aws_mysql
                data:
                  $ref: '#/components/schemas/AwsMysqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsMysqlUserAuth'
  /services/aws_pgsql/actions/tls:
    get:
      tags:
        - services.aws_pgsql
      summary: 'List of SSL options'
      operationId: appAuthorizerAwsPgsqlAwsPgsqlAuthorizerActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/aws_pgsql:
    post:
      tags:
        - services.aws_pgsql
      summary: 'Create service'
      operationId: appAuthorizerAwsPgsqlAwsPgsqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: aws_pgsql
                  example: aws_pgsql
                data:
                  $ref: '#/components/schemas/AwsPgsqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsPgsqlUserAuth'
  /services/black_diamond/oauth-request-url:
    post:
      tags:
        - services.blackDiamond
      summary: 'Builds redirect URL'
      operationId: appAuthorizerBlackDiamondBlackDiamondAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  properties: { client_id: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/cockroach_db/actions/ssl:
    get:
      tags:
        - services.cockroach_db
      summary: 'List of SSL options'
      operationId: appAuthorizerCockroachDBCockroachDBAuthorizerActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/core_web_vitals:
    post:
      tags:
        - services.coreWebVitals
      summary: 'Create service'
      operationId: appAuthorizerCoreWebVitalsCoreWebVitalsAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: core_web_vitals
                  example: core_web_vitals
                data:
                  $ref: '#/components/schemas/CoreWebVitalsDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreWebVitalsUserAuth'
  /services/databricks:
    post:
      tags:
        - services.databricks
      summary: 'Create service'
      operationId: appAuthorizerDatabricksDatabricksAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: databricks
                  example: databricks
                data:
                  $ref: '#/components/schemas/DatabricksDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabricksUserAuth'
  /services/facebook_cassandra/oauth-request-url:
    post:
      tags:
        - services.facebookCassandra
      summary: 'Builds redirect URL'
      operationId: appAuthorizerFacebookCassandraFacebookCassandraAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  properties: { redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/facebook_custom/oauth-request-url:
    post:
      tags:
        - services.facebookCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerFacebookCustomFacebookCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/facebook_custom/oauth-process-callback:
    post:
      tags:
        - services.facebookCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerFacebookCustomFacebookCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/FacebookCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacebookCustomUserAuth'
  /services/facebook_page_access_token:
    post:
      tags:
        - services.facebookPageAccessToken
      summary: 'Authorize a service'
      operationId: appAuthorizerFacebookPageAccessTokenFacebookPageAccessTokenAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: facebook_page_access_token
                  example: facebook_page_access_token
                data:
                  $ref: '#/components/schemas/FacebookPagesAccessTokenDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacebookPageAccessTokenUserAuth'
  /services/facebook_static:
    post:
      tags:
        - services.facebookStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerFacebookStaticFacebookStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: facebook_static
                  example: facebook_static
                data:
                  $ref: '#/components/schemas/FacebookStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacebookStaticUserAuth'
  /services/ftp:
    post:
      tags:
        - services.ftp
      summary: 'Create service'
      operationId: appAuthorizerFtpFtpAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: ftp
                  example: ftp
                data:
                  $ref: '#/components/schemas/FtpDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtpUserAuth'
  /services/google_ads_custom/oauth-request-url:
    post:
      tags:
        - services.googleAdsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleAdsCustomGoogleAdsCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, developerToken, redirectUri, clientCustomerId]
                  properties: { clientId: { type: string }, developerToken: { type: string }, redirectUri: { type: string }, clientCustomerId: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_ads_custom/oauth-process-callback:
    post:
      tags:
        - services.googleAdsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleAdsCustomGoogleAdsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleAnalytics4CustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAdsCustomUserAuth'
  /services/google_ads_static:
    post:
      tags:
        - services.googleAdsStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleAdsStaticGoogleAdsStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_ads_static
                  example: google_ads_static
                data:
                  $ref: '#/components/schemas/GoogleAdsStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAdsStaticUserAuth'
  /services/google_analytics4_custom/oauth-request-url:
    post:
      tags:
        - services.googleAnalytics4Custom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleAnalytics4CustomGoogleAnalytics4CustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, clientSecret, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_analytics4_custom/oauth-process-callback:
    post:
      tags:
        - services.googleAnalytics4Custom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleAnalytics4CustomGoogleAnalytics4CustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleAnalytics4CustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAnalytics4CustomUserAuth'
  /services/google_analytics4_static:
    post:
      tags:
        - services.googleAnalytics4Static
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleAnalytics4StaticGoogleAnalytics4StaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_analytics4_static
                  example: google_analytics4_static
                data:
                  $ref: '#/components/schemas/GoogleAnalytics4StaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAnalytics4StaticUserAuth'
  /services/google_analytics_custom/oauth-request-url:
    post:
      tags:
        - services.googleAnalyticsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleAnalyticsCustomGoogleAnalyticsCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_analytics_custom/oauth-process-callback:
    post:
      tags:
        - services.googleAnalyticsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleAnalyticsCustomGoogleAnalyticsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleAnalyticsCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAnalyticsCustomUserAuth'
  /services/google_analytics_static:
    post:
      tags:
        - services.googleAnalyticsStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleAnalyticsStaticGoogleAnalyticsStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_analytics_static
                  example: google_analytics_static
                data:
                  $ref: '#/components/schemas/GoogleAnalyticsStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAnalyticsStaticUserAuth'
  /services/google_big_query_custom/oauth-request-url:
    post:
      tags:
        - services.googleBigQueryCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleBigQueryCustomGoogleBigQueryCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_big_query_custom/oauth-process-callback:
    post:
      tags:
        - services.googleBigQueryCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleBigQueryCustomGoogleBigQueryCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleBigQueryCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleBigQueryCustomUserAuth'
  /services/google_big_query_static:
    post:
      tags:
        - services.googleBigQueryStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleBigQueryStaticGoogleBigQueryStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_big_query_static
                  example: google_big_query_static
                data:
                  $ref: '#/components/schemas/GoogleBigQueryStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleBigQueryStaticUserAuth'
  /services/google_display_video_custom/oauth-request-url:
    post:
      tags:
        - services.GoogleDisplayVideoCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleDisplayVideoCustomGoogleDisplayVideoCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_display_video_custom/oauth-process-callback:
    post:
      tags:
        - services.GoogleDisplayVideoCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleDisplayVideoCustomGoogleDisplayVideoCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleDisplayVideoCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDisplayVideoCustomUserAuth'
  /services/google_mssql:
    post:
      tags:
        - services.google_mssql
      summary: 'Create service'
      operationId: appAuthorizerGoogleMssqlGoogleMssqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_mssql
                  example: google_mssql
                data:
                  $ref: '#/components/schemas/GoogleMssqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMssqlUserAuth'
  /services/google_my_business_static:
    post:
      tags:
        - services.googleMyBusinessStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleMyBusinessStaticGoogleMyBusinessStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_my_business_static
                  example: google_my_business_static
                data:
                  $ref: '#/components/schemas/GoogleMyBusinessStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMyBusinessStaticUserAuth'
  /services/google_mysql/actions/tls:
    get:
      tags:
        - services.google_mysql
      summary: 'List of TLS options'
      operationId: appAuthorizerGoogleMysqlGoogleMysqlAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/google_mysql:
    post:
      tags:
        - services.google_mysql
      summary: 'Create service'
      operationId: appAuthorizerGoogleMysqlGoogleMysqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_mysql
                  example: google_mysql
                data:
                  $ref: '#/components/schemas/GoogleMysqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMysqlUserAuth'
  /services/google_pgsql/actions/tls:
    get:
      tags:
        - services.google_pgsql
      summary: 'List of SSL options'
      operationId: appAuthorizerGooglePgsqlGooglePgsqlAuthorizerActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/google_pgsql:
    post:
      tags:
        - services.google_pgsql
      summary: 'Create service'
      operationId: appAuthorizerGooglePgsqlGooglePgsqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_pgsql
                  example: google_pgsql
                data:
                  $ref: '#/components/schemas/GooglePgsqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GooglePgsqlUserAuth'
  /services/google_play_custom/oauth-request-url:
    post:
      tags:
        - services.GooglePlayCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGooglePlayCustomGooglePlayCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, clientSecret, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_play_custom/oauth-process-callback:
    post:
      tags:
        - services.GooglePlayCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGooglePlayCustomGooglePlayCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GooglePlayCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GooglePlayCustomUserAuth'
  /services/google_search_console_custom/oauth-request-url:
    post:
      tags:
        - services.GoogleSearchConsoleCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleSearchConsoleCustomGoogleSearchConsoleCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_search_console_custom/oauth-process-callback:
    post:
      tags:
        - services.GoogleSearchConsoleCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleSearchConsoleCustomGoogleSearchConsoleCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleSearchConsoleCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSearchConsoleCustomUserAuth'
  /services/google_search_console_static:
    post:
      tags:
        - services.googleSearchConsoleStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleSearchConsoleStaticGoogleSearchConsoleStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_search_console_static
                  example: google_search_console_static
                data:
                  $ref: '#/components/schemas/GoogleSearchConsoleStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSearchConsoleStaticUserAuth'
  /services/google_sheets/oauth-request-url:
    post:
      tags:
        - services.googleSheets
      summary: 'Get url for service authentication'
      operationId: appAuthorizerGoogleSheetsGoogleSheetsAuthorizerOAuthRequestURL
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: {  }
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_sheets/oauth-process-callback:
    post:
      tags:
        - services.googleSheets
      summary: 'Create service'
      operationId: appAuthorizerGoogleSheetsGoogleSheetsAuthorizerOAuthProcessCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                config:
                  type: array
                  items: { properties: { label: { type: string, default: 'Google Sheets', example: 'Google Sheets' }, serviceId: { type: string, default: google_sheets, example: google_sheets } }, type: object }
              type: object
      responses:
        '200':
          description: 'Processes the callback and fetches the refresh token'
          content:
            application/json:
              schema:
                type: object
  /services/google_sheets_custom/oauth-request-url:
    post:
      tags:
        - services.googleSheetsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerGoogleSheetsCustomGoogleSheetsCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, clientSecret, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/google_sheets_custom/oauth-process-callback:
    post:
      tags:
        - services.googleSheetsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerGoogleSheetsCustomGoogleSheetsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/GoogleSheetsCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSheetsCustomUserAuth'
  /services/google_sheets_static:
    post:
      tags:
        - services.GoogleSheetsStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerGoogleSheetsStaticGoogleSheetsStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: google_sheets_static
                  example: google_sheets_static
                data:
                  $ref: '#/components/schemas/GoogleSheetsStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSheetsStaticUserAuth'
  /services/hubspot_custom/oauth-request-url:
    post:
      tags:
        - services.hubspotCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerHubspotCustomHubspotCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } }, optional_scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/hubspot_custom/oauth-process-callback:
    post:
      tags:
        - services.hubspotCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerHubspotCustomHubspotCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/HubspotCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubspotCustomUserAuth'
  /services/instagram_custom/oauth-request-url:
    post:
      tags:
        - services.instagramCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerInstagramCustomInstagramCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/instagram_custom/oauth-process-callback:
    post:
      tags:
        - services.instagramCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerInstagramCustomInstagramCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/FacebookCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstagramCustomUserAuth'
  /services/intercom/oauth-request-url:
    post:
      tags:
        - services.intercom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerIntercomIntercomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [domain]
                  properties: { domain: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/intercom/actions/region:
    get:
      tags:
        - services.intercom
      summary: 'List of region options'
      operationId: appAuthorizerIntercomIntercomAuthorizerActionRegion
      responses:
        '200':
          description: 'List of region options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/linkedin_custom/oauth-request-url:
    post:
      tags:
        - services.linkedinCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerLinkedinCustomLinkedinCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/linkedin_custom/oauth-process-callback:
    post:
      tags:
        - services.linkedinCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerLinkedinCustomLinkedinCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/LinkedinCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedinCustomUserAuth'
  /services/linkedin_static:
    post:
      tags:
        - services.linkedinStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerLinkedinStaticLinkedinStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: linkedin_static
                  example: linkedin_static
                data:
                  $ref: '#/components/schemas/LinkedinStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedinStaticUserAuth'
  /services/mariadb/actions/tls:
    get:
      tags:
        - services.mariadb
      summary: 'List of TLS options'
      operationId: appAuthorizerMariadbMariadbAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/mariadb:
    post:
      tags:
        - services.mariadb
      summary: 'Create service'
      operationId: appAuthorizerMariadbMariadbAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: mariadb
                  example: mariadb
                data:
                  $ref: '#/components/schemas/MariadbDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MariadbUserAuth'
  /services/mercado_libre/oauth-request-url:
    post:
      tags:
        - services.mercadoLibre
      summary: 'Builds redirect URL'
      operationId: appAuthorizerMercadoLibreMercadoLibreAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  properties: { country: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/microsoft_ads_custom/oauth-request-url:
    post:
      tags:
        - services.MicrosoftAdsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerMicrosoftAdsCustomMicrosoftAdsCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  properties: { clientId: { type: string }, redirectUri: { type: string }, tenantId: { type: string }, developerToken: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/microsoft_ads_custom/oauth-process-callback:
    post:
      tags:
        - services.MicrosoftAdsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerMicrosoftAdsCustomMicrosoftAdsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/MicrosoftAdsCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftAdsCustomUserAuth'
  /services/microsoft_ads_static:
    post:
      tags:
        - services.microsoftAdsStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerMicrosoftAdsStaticMicrosoftAdsStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: microsoft_ads_static
                  example: microsoft_ads_static
                data:
                  $ref: '#/components/schemas/MicrosoftAdsStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftAdsStaticUserAuth'
  /services/microsoft_dynamics365/oauth-request-url:
    post:
      tags:
        - services.microsoftDynamics365
      summary: 'Get url for service authentication'
      operationId: appAuthorizerMicrosoftDynamics365MicrosoftDynamics365AuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { host: { type: string, example: orgdb40e000.crm.dynamics.com } }, type: object }
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/microsoft_dynamics365/oauth-process-callback:
    post:
      tags:
        - services.microsoftDynamics365
      summary: 'Create service'
      operationId: appAuthorizerMicrosoftDynamics365MicrosoftDynamics365AuthorizerOAuthProcessCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                config:
                  type: array
                  items: { properties: { host: { type: string, example: orgdb40e000.crm.dynamics.com }, label: { type: string, default: 'Microsoft Dynamics 365', example: 'Microsoft Dynamics 365' }, serviceId: { type: string, default: microsoft_dynamics365, example: microsoft_dynamics365 } }, type: object }
              type: object
      responses:
        '200':
          description: 'Processes the callback and fetches the refresh token'
          content:
            application/json:
              schema:
                type: object
  /services/microsoft_share_point/oauth-request-url:
    post:
      tags:
        - services.MicrosoftSharePoint
      summary: 'Builds redirect URL'
      operationId: appAuthorizerMicrosoftSharePointMicrosoftSharePointAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/MicrosoftSharePointDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/mongo:
    post:
      tags:
        - services.mongo
      summary: 'Create service'
      operationId: appAuthorizerMongoMongoAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: mongo
                  example: mongo
                data:
                  $ref: '#/components/schemas/MongoDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoUserAuth'
  /services/mongo_atlas:
    post:
      tags:
        - services.mongoAtlas
      summary: 'Create service'
      operationId: appAuthorizerMongoAtlasMongoAtlasAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: mongo_atlas
                  example: mongo_atlas
                data:
                  $ref: '#/components/schemas/MongoDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoAtlasUserAuth'
  /services/mssql:
    post:
      tags:
        - services.mssql
      summary: 'Create service'
      operationId: appAuthorizerMssqlMssqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: mssql
                  example: mssql
                data:
                  $ref: '#/components/schemas/MssqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MssqlUserAuth'
  /services/myob/oauth-request-url:
    post:
      tags:
        - services.myob
      summary: 'Get url for service authentication'
      operationId: appAuthorizerMyobMyobAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: {  }
                state:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/mysql/actions/tls:
    get:
      tags:
        - services.mysql
      summary: 'List of TLS options'
      operationId: appAuthorizerMysqlMysqlAuthorizerActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/mysql:
    post:
      tags:
        - services.mysql
      summary: 'Create service'
      operationId: appAuthorizerMysqlMysqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: mysql
                  example: mysql
                data:
                  $ref: '#/components/schemas/MysqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MysqlUserAuth'
  /services/pgsql/actions/tls:
    get:
      tags:
        - services.pgsql
      summary: 'List of SSL options'
      operationId: appAuthorizerPgsqlPgsqlAuthorizerActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /services/pgsql:
    post:
      tags:
        - services.pgsql
      summary: 'Create service'
      operationId: appAuthorizerPgsqlPgsqlAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: pgsql
                  example: pgsql
                data:
                  $ref: '#/components/schemas/PgsqlDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PgsqlUserAuth'
  /services/pinterest_custom/oauth-request-url:
    post:
      tags:
        - services.pinterestCustom
      summary: 'Get url for service authentication'
      operationId: appAuthorizerPinterestCustomPinterestCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/pinterest_static:
    post:
      tags:
        - services.pinterestStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerPinterestStaticPinterestStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: pinterest_static
                  example: pinterest_static
                data:
                  $ref: '#/components/schemas/PinterestStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinterestStaticUserAuth'
  /services/quickbooks_custom/oauth-request-url:
    post:
      tags:
        - services.QuickbooksCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerQuickbooksCustomQuickbooksCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/quickbooks_custom/oauth-process-callback:
    post:
      tags:
        - services.QuickbooksCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerQuickbooksCustomQuickbooksCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/QuickbooksCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickbooksCustomUserAuth'
  /services/quickbooks_static:
    post:
      tags:
        - services.quickbooksStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerQuickbooksStaticQuickbooksStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: quickbooks_static
                  example: quickbooks_static
                data:
                  $ref: '#/components/schemas/QuickbooksStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickbooksStaticUserAuth'
  /services/redshift:
    post:
      tags:
        - services.redshift
      summary: 'Create service'
      operationId: appAuthorizerRedshiftRedshiftAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: redshift
                  example: redshift
                data:
                  $ref: '#/components/schemas/RedshiftDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedshiftUserAuth'
  /services/s3:
    post:
      tags:
        - services.s3
      summary: 'Create service'
      operationId: appAuthorizerS3S3AuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: s3
                  example: s3
                data:
                  $ref: '#/components/schemas/S3DtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3UserAuth'
  /services/salesforce_custom_domain/oauth-request-url:
    post:
      tags:
        - services.salesforceCustomDomain
      summary: 'Builds redirect URL'
      operationId: appAuthorizerSalesforceCustomDomainSalesforceCustomDomainAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { subdomain: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/sftp:
    post:
      tags:
        - services.sftp
      summary: 'Create service'
      operationId: appAuthorizerSftpSftpAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: sftp
                  example: sftp
                data:
                  $ref: '#/components/schemas/SftpDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SftpUserAuth'
  /services/shoptet:
    post:
      tags:
        - services.googleAnalytics4Static
      summary: 'Authorize a service'
      operationId: appAuthorizerShoptetShoptetAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: shoptet
                  example: shoptet
                data:
                  $ref: '#/components/schemas/ShoptetDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAnalytics4StaticUserAuth'
  /services/snapchat_custom/oauth-request-url:
    post:
      tags:
        - services.SnapchatCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerSnapchatCustomSnapchatCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/snapchat_custom/oauth-process-callback:
    post:
      tags:
        - services.SnapchatCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerSnapchatCustomSnapchatCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/SnapchatCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapchatCustomUserAuth'
  /services/snapchat_static:
    post:
      tags:
        - services.snapchatStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerSnapchatStaticSnapchatStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: snapchat_static
                  example: snapchat_static
                data:
                  $ref: '#/components/schemas/SnapchatStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapchatStaticUserAuth'
  /services/tik_tok_business_account_custom/oauth-request-url:
    post:
      tags:
        - services.TikTokBusinessAccountCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/tik_tok_business_account_custom/oauth-process-callback:
    post:
      tags:
        - services.TikTokBusinessAccountCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/TikTokBusinessAccountCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TikTokBusinessAccountCustomUserAuth'
  /services/tik_tok_custom/oauth-request-url:
    post:
      tags:
        - services.TikTokCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerTikTokCustomTikTokCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/tik_tok_custom/oauth-process-callback:
    post:
      tags:
        - services.TikTokCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerTikTokCustomTikTokCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/TikTokCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TikTokCustomUserAuth'
  /services/tik_tok_static:
    post:
      tags:
        - services.tikTokStatic
      summary: 'Authorize a service'
      operationId: appAuthorizerTikTokStaticTikTokStaticAuthorizerNew
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: tik_tok_static
                  example: tik_tok_static
                data:
                  $ref: '#/components/schemas/TikTokStaticDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TikTokStaticUserAuth'
  /services/trino:
    post:
      tags:
        - services.trino
      summary: 'Create service'
      operationId: appAuthorizerTrinoTrinoAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: trino
                  example: trino
                data:
                  $ref: '#/components/schemas/TrinoDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrinoUserAuth'
  /services/twitter_custom/oauth-request-url:
    post:
      tags:
        - services.twitterCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerTwitterCustomTwitterCustomAuthorizerGetAuthorizationUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  type: array
                  items: { properties: { clientId: { type: string }, redirectUri: { type: string } }, type: object }
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/twitter_custom/oauth-process-callback:
    post:
      tags:
        - services.twitterCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerTwitterCustomTwitterCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/TwitterCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwitterCustomUserAuth'
  /services/vertica:
    post:
      tags:
        - services.vertica
      summary: 'Create service'
      operationId: appAuthorizerVerticaVerticaAuthorizerCreateService
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                service:
                  type: string
                  default: vertica
                  example: vertica
                data:
                  $ref: '#/components/schemas/VerticaDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerticaUserAuth'
  /services/youtube_analytics_custom/oauth-request-url:
    post:
      tags:
        - services.youtubeAnalyticsCustom
      summary: 'Builds redirect URL'
      operationId: appAuthorizerYoutubeAnalyticsCustomYoutubeAnalyticsCustomAuthorizerNewOAuthUrl
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  required: [clientId, clientSecret, redirectUri]
                  properties: { clientId: { type: string }, redirectUri: { type: string }, scopes: { type: array, items: { type: string } } }
                  type: object
                state:
                  type: string
                  deprecated: true
                serviceId:
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns the redirect URL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthRequestUrlResponse'
  /services/youtube_analytics_custom/oauth-process-callback:
    post:
      tags:
        - services.youtubeAnalyticsCustom
      summary: 'Processes callback URL'
      operationId: appAuthorizerYoutubeAnalyticsCustomYoutubeAnalyticsCustomAuthorizerNewOAuthCallback
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                callbackUrl:
                  type: string
                  default: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                  example: 'https://my.app.com/callback?code=aaaaBBBBccc1234'
                config:
                  $ref: '#/components/schemas/YoutubeAnalyticsCustomDtoAuthorizer'
              type: object
      responses:
        '200':
          description: 'New service'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YoutubeAnalyticsCustomUserAuth'
  /services/zoho/actions/country:
    get:
      tags:
        - services.zoho
      summary: 'List of countries'
      operationId: appAuthorizerZohoZohoAuthorizerActionCountry
      responses:
        '200':
          description: 'List of countries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/adtraction/actions/dateRange:
    get:
      tags:
        - connectors.adtraction
      summary: 'Method for listing date range'
      operationId: appConnectorAdtractionAdtractionConnectorActionDateRange
      responses:
        '200':
          description: 'List of Adtraction date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/adtraction/actions/authorization:
    get:
      tags:
        - connectors.adtraction
      summary: 'List of authorization objects'
      operationId: appConnectorAdtractionAdtractionConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/adtraction/preview:
    post:
      tags:
        - connectors.adtraction
      summary: 'Data preview'
      operationId: appConnectorAdtractionAdtractionConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdtractionConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/adtraction/create-source:
    post:
      tags:
        - connectors.adtraction
      summary: 'Create Adtraction source'
      operationId: appConnectorAdtractionAdtractionConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdtractionConnectorForm'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/alloy_db/actions/generateSQLQueries:
    get:
      tags:
        - connectors.alloyDb
      summary: 'Get generated SQL queries'
      operationId: appConnectorAlloyDbAlloyDbConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/alloy_db/actions/authorization:
    get:
      tags:
        - connectors.alloyDb
      summary: 'List of authorization objects'
      operationId: appConnectorAlloyDbAlloyDbConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/alloy_db/actions/listTables:
    post:
      tags:
        - connectors.alloyDb
      summary: 'List of database tables'
      operationId: appConnectorAlloyDbAlloyDbConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/alloy_db/actions/listColumns:
    post:
      tags:
        - connectors.alloyDb
      summary: 'List of table columns'
      operationId: appConnectorAlloyDbAlloyDbConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/alloy_db/actions/sql:
    post:
      tags:
        - connectors.alloyDb
      summary: 'Get generated SQL'
      operationId: appConnectorAlloyDbAlloyDbConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/alloy_db/preview:
    post:
      tags:
        - connectors.alloyDb
      summary: 'Data preview'
      operationId: appConnectorAlloyDbAlloyDbConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/alloy_db/create-source:
    post:
      tags:
        - connectors.alloyDb
      summary: 'Create Alloy DB source'
      operationId: appConnectorAlloyDbAlloyDbConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/amazon_dsp/actions/accountId:
    post:
      tags:
        - connectors.amazonDsp
      summary: 'List of Amazon Dsp account ids'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionAccountId
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                profileId:
                  type: string
                  example: '123456'
              type: object
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/actions/dateRange:
    get:
      tags:
        - connectors.amazonDsp
      summary: 'Method for listing date range'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionDateRange
      responses:
        '200':
          description: 'List of AmazonDsp date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/actions/metrics:
    post:
      tags:
        - connectors.amazonDsp
      summary: 'List of Amazon Dsp common fields'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionMetrics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                reportType:
                  type: string
                  example: account
              type: object
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/actions/dimensions:
    get:
      tags:
        - connectors.amazonDsp
      summary: 'List of Amazon Dsp common fields'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionDimensions
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/actions/reportType:
    get:
      tags:
        - connectors.amazonDsp
      summary: 'List of Amazon Dsp common fields'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionReportType
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/actions/timeUnit:
    get:
      tags:
        - connectors.amazonDsp
      summary: 'List of Amazon Dsp common fields'
      operationId: appConnectorAmazonDspAmazonDspConnectorActionTimeUnit
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/amazon_dsp/preview:
    post:
      tags:
        - connectors.amazonDsp
      summary: 'Data preview'
      operationId: appConnectorAmazonDspAmazonDspConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonDspDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/azureSql/actions/generateSQLQueries:
    get:
      tags:
        - connectors.azureSql
      summary: 'Get generated SQL queries'
      operationId: appConnectorAzureSqlAzureSqlConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/azureSql/actions/listTables:
    post:
      tags:
        - connectors.azureSql
      summary: 'List of database tables'
      operationId: appConnectorAzureSqlAzureSqlConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/azureSql/actions/listColumns:
    post:
      tags:
        - connectors.azureSql
      summary: 'List of table columns'
      operationId: appConnectorAzureSqlAzureSqlConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/azureSql/actions/sql:
    post:
      tags:
        - connectors.azureSql
      summary: 'Get generated SQL'
      operationId: appConnectorAzureSqlAzureSqlConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/core_web_vitals/actions/authorization:
    get:
      tags:
        - connectors.coreWebVitals
      summary: 'List of authorization objects'
      operationId: appConnectorCoreWebVitalsCoreWebVitalsConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/core_web_vitals/preview:
    post:
      tags:
        - connectors.coreWebVitals
      summary: 'Data preview'
      operationId: appConnectorCoreWebVitalsCoreWebVitalsConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreWebVitalsDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/coreWebVitals/create-source:
    post:
      tags:
        - connectors.coreWebVitals
      summary: 'Create CoreWebVital source'
      operationId: appConnectorCoreWebVitalsCoreWebVitalsConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreWebVitalsDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/databricks/actions/generateSQLQueries:
    get:
      tags:
        - connectors.databricks
      summary: 'Get generated SQL queries'
      operationId: appConnectorDatabricksDatabricksConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/databricks/actions/authorization:
    get:
      tags:
        - connectors.databricks
      summary: 'List of authorization objects'
      operationId: appConnectorDatabricksDatabricksConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/databricks/actions/listTables:
    post:
      tags:
        - connectors.databricks
      summary: 'List of database tables'
      operationId: appConnectorDatabricksDatabricksConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/databricks/actions/listColumns:
    post:
      tags:
        - connectors.databricks
      summary: 'List of table columns'
      operationId: appConnectorDatabricksDatabricksConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/databricks/actions/sql:
    post:
      tags:
        - connectors.databricks
      summary: 'Get generated SQL'
      operationId: appConnectorDatabricksDatabricksConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/databricks/preview:
    post:
      tags:
        - connectors.databricks
      summary: 'Data preview'
      operationId: appConnectorDatabricksDatabricksConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabricksDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/databricks/create-source:
    post:
      tags:
        - connectors.databricks
      summary: 'Create Databricks source'
      operationId: appConnectorDatabricksDatabricksConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabricksDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/facebook_ads/actions/dateRange:
    get:
      tags:
        - connectors.facebookAds
      summary: 'Method for listing date range'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionDateRange
      responses:
        '200':
          description: 'List of Facebook Ads date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/authorization:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of authorization objects'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/facebook_ads/actions/account:
    post:
      tags:
        - connectors.facebookAds
      summary: 'List of all accounts'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/campaign:
    post:
      tags:
        - connectors.facebookAds
      summary: 'List of all campaigns'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                accountId:
                  type: string
                  example: act_00000000
              type: object
      responses:
        '200':
          description: 'List of campaigns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/level:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of all reporting levels'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionLevel
      responses:
        '200':
          description: 'List of reporting level objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/dataLabel:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of all data labels'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionDataLabel
      responses:
        '200':
          description: 'List of data label objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/metric:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of all metrics'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionMetric
      responses:
        '200':
          description: 'List of metric objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/timeBreakdown:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of all time breakdowns'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionTimeBreakdown
      responses:
        '200':
          description: 'List of time breakdown objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/optionalBreakdown:
    get:
      tags:
        - connectors.facebookAds
      summary: 'List of all optional breakdowns'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionOptionalBreakdown
      responses:
        '200':
          description: 'List of optional breakdown objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/actions/adSet:
    post:
      tags:
        - connectors.facebookAds
      summary: 'List of Ad sets'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorActionAdSet
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                accountId:
                  type: string
                  example: act_00000000
                campaignId:
                  type: string
                  example: '0000000000000'
              type: object
      responses:
        '200':
          description: 'List of Ad sets'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/facebook_ads/preview:
    post:
      tags:
        - connectors.facebookAds
      summary: 'Data preview'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookAdsConnectorForm'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/facebook_ads/create-source:
    post:
      tags:
        - connectors.facebookAds
      summary: 'Create FacebookAds source'
      operationId: appConnectorFacebookAdsFacebookAdsConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookAdsConnectorForm'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/google_big_query/actions/authorization:
    get:
      tags:
        - connectors.googleBigQuery
      summary: 'List of authorization objects'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/google_big_query/actions/project:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'List of database project'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionProject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database projects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /connectors/google_big_query/actions/dataset:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'List of database datasets'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionDataset
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                projectId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database datasets'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /connectors/google_big_query/actions/listTables:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'List of database tables'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                projectId:
                  type: string
                  example: '0'
                datasetId:
                  type: string
                  example: dataset_id
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/google_big_query/actions/listColumns:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'List of table columns'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                projectId:
                  type: string
                  example: '0'
                datasetId:
                  type: string
                  example: dataset_id
                tableId:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/google_big_query/actions/sessionRead:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'List of sessionRead options'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionSessionRead
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                projectId:
                  type: number
                  example: '0'
                datasetId:
                  type: string
                  example: dataset_id
                tableId:
                  type: string
                  example: table_id
              type: object
      responses:
        '200':
          description: 'List of sessionRead options'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/google_big_query/actions/sql:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'Get generated SQL'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                tableId:
                  type: string
                  example: table_name
                datasetId:
                  type: string
                  example: dataset_id
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_big_query/preview:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'Data preview'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleBigQueryDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/google_big_query/create-source:
    post:
      tags:
        - connectors.googleBigQuery
      summary: 'Create Google Big Query source'
      operationId: appConnectorGoogleBigQueryGoogleBigQueryConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleBigQueryDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /destinations/google_display_video/actions/query:
    get:
      tags:
        - destinations.googleDisplayVideo
      summary: 'List of Google Display & Video queries'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionQuery
      responses:
        '200':
          description: 'List of DV 360 Queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_display_video/actions/authorization:
    get:
      tags:
        - connectors.googleDisplayVideo
      summary: 'List of authorization objects'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_display_video/actions/dateRange:
    get:
      tags:
        - destinations.googleDisplayVideo
      summary: 'List of Google Display & Video date ranges'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionDateRange
      responses:
        '200':
          description: 'List of available date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_display_video/actions/metrics:
    get:
      tags:
        - connectors.googleDisplayVideo
      summary: 'List of Google Display & Video metrics'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionMetrics
      responses:
        '200':
          description: 'List of available metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_display_video/actions/partner:
    get:
      tags:
        - connectors.googleDisplayVideo
      summary: 'List of Google Display & Video partners'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionPartner
      responses:
        '200':
          description: 'List of available partners'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_display_video/actions/advertiser:
    get:
      tags:
        - connectors.googleDisplayVideo
      summary: 'List of Google Display & Video advertisers'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionAdvertiser
      responses:
        '200':
          description: 'List of available advertisers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/google_display_video/actions/dimensions:
    get:
      tags:
        - connectors.googleDisplayVideo
      summary: 'List of Google Display & Video dimensions'
      operationId: appConnectorGoogleDisplayVideoGoogleDisplayVideoConnectorActionDimensions
      responses:
        '200':
          description: 'List of available dimensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/intercom/actions/dateRange:
    get:
      tags:
        - connectors.intercom
      summary: 'Method for listing date range'
      operationId: appConnectorIntercomIntercomConnectorActionDateRange
      responses:
        '200':
          description: 'List of Intercom date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/intercom/actions/authorization:
    get:
      tags:
        - connectors.intercom
      summary: 'List of authorization objects'
      operationId: appConnectorIntercomIntercomConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/intercom/preview:
    post:
      tags:
        - connectors.intercom
      summary: 'Data preview'
      operationId: appConnectorIntercomIntercomConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntercomDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/intercom/create-source:
    post:
      tags:
        - connectors.intercom
      summary: 'Create Intercom source'
      operationId: appConnectorIntercomIntercomConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntercomDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/intercom_export/actions/dateRange:
    get:
      tags:
        - connectors.intercomExport
      summary: 'Method for listing date range'
      operationId: appConnectorIntercomExportIntercomExportConnectorActionDateRange
      responses:
        '200':
          description: 'List of Intercom date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/intercom_export/preview:
    post:
      tags:
        - connectors.intercomExport
      summary: 'Data preview'
      operationId: appConnectorIntercomExportIntercomExportConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntercomExportDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /destinations/intercom_export/actions/file:
    get:
      tags:
        - destinations.intercomExport
      summary: 'List of files'
      operationId: appConnectorIntercomExportIntercomExportConnectorActionFile
      responses:
        '200':
          description: 'List of files'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/klaviyo_v3/actions/dateRange:
    get:
      tags:
        - connectors.klaviyo_v3
      summary: 'Method for listing date range'
      operationId: appConnectorKlaviyoV3KlaviyoV3ConnectorActionDateRange
      responses:
        '200':
          description: 'List of KlaviyoV3 date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/klaviyo_v3/actions/authorization:
    get:
      tags:
        - connectors.klaviyo_v3
      summary: 'List of authorization objects'
      operationId: appConnectorKlaviyoV3KlaviyoV3ConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/klaviyo_v3/preview:
    post:
      tags:
        - connectors.klaviyo_v3
      summary: 'Data preview'
      operationId: appConnectorKlaviyoV3KlaviyoV3ConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KlaviyoV3Dto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/klaviyo_v3/create-source:
    post:
      tags:
        - connectors.klaviyo_v3
      summary: 'Create KlaviyoV3 source'
      operationId: appConnectorKlaviyoV3KlaviyoV3ConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KlaviyoV3Dto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/mercado_libre/actions/attributes:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Seller Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionSeller
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre seller Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/displayAdvertiser/:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionDisplayAdvertiser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/brandAdvertiser/:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionBrandAdvertiser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/productAdvertiser/:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionProductAdvertiser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/displayCampaign:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionDisplayCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                advertiserId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/brandCampaign:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionBrandCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                advertiserId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mercado_libre/actions/productCampaign:
    post:
      tags:
        - connectors.mercadoLibre
      summary: 'List all Advertiser Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionProductCampaign
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                advertiserId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Mercado Libre advertiser Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mercado_libre/actions/siteId:
    get:
      tags:
        - destinations.mercadoLibre
      summary: 'Mercado Libre Site Ids'
      operationId: appConnectorMercadoLibreMercadoLibreConnectorActionSiteId
      responses:
        '200':
          description: 'Mercado Libre Site Ids'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mssql/actions/generateSQLQueries:
    get:
      tags:
        - connectors.mssql
      summary: 'Get generated SQL queries'
      operationId: appConnectorMssqlMssqlConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mssql/actions/authorization:
    get:
      tags:
        - connectors.mssql
      summary: 'List of authorization objects'
      operationId: appConnectorMssqlMssqlConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/mssql/actions/listTables:
    post:
      tags:
        - connectors.mssql
      summary: 'List of database tables'
      operationId: appConnectorMssqlMssqlConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mssql/actions/listColumns:
    post:
      tags:
        - connectors.mssql
      summary: 'List of table columns'
      operationId: appConnectorMssqlMssqlConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mssql/actions/sql:
    post:
      tags:
        - connectors.mssql
      summary: 'Get generated SQL'
      operationId: appConnectorMssqlMssqlConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mssql/preview:
    post:
      tags:
        - connectors.mssql
      summary: 'Data preview'
      operationId: appConnectorMssqlMssqlConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MssqlDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/mssql/create-source:
    post:
      tags:
        - connectors.mssql
      summary: 'Create Mssql source'
      operationId: appConnectorMssqlMssqlConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MssqlDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/mysql/actions/authorization:
    get:
      tags:
        - connectors.mysql
      summary: 'List of authorization objects'
      operationId: appConnectorMysqlMysqlConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/mysql/actions/listTables:
    post:
      tags:
        - connectors.mysql
      summary: 'List of database tables'
      operationId: appConnectorMysqlMysqlConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mysql/actions/listColumns:
    post:
      tags:
        - connectors.mysql
      summary: 'List of table columns'
      operationId: appConnectorMysqlMysqlConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mysql/actions/sql:
    post:
      tags:
        - connectors.mysql
      summary: 'Get generated SQL'
      operationId: appConnectorMysqlMysqlConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mysql/actions/generateSQLQueries:
    get:
      tags:
        - connectors.mysql
      summary: 'Get generated SQL queries'
      operationId: appConnectorMysqlMysqlConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mysql/preview:
    post:
      tags:
        - connectors.mysql
      summary: 'Data preview'
      operationId: appConnectorMysqlMysqlConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MysqlDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/mysql/create-source:
    post:
      tags:
        - connectors.mysql
      summary: 'Create Mysql source'
      operationId: appConnectorMysqlMysqlConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MysqlDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/mysql_binlog/actions/log-start-time:
    get:
      tags:
        - connectors.mysqlBinlog
      summary: 'List of start times'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorActionLogStartTime
      responses:
        '200':
          description: 'List of start times'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/mysql_binlog/actions/authorization:
    get:
      tags:
        - connectors.mysqlBinlog
      summary: 'List of authorization objects'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/mysql_binlog/actions/list-tables:
    get:
      tags:
        - connectors.mysqlBinlog
      summary: 'List of database tables'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorActionListTables
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mysql_binlog/actions/list-columns:
    get:
      tags:
        - connectors.mysqlBinlog
      summary: 'List of table columns'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorActionListColumns
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/mysql_binlog/preview:
    post:
      tags:
        - connectors.mysqlBinlog
      summary: 'Data preview'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MysqlBinlogDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/mysql_binlog/create-source:
    post:
      tags:
        - connectors.mysqlBinlog
      summary: 'Create Mysql Binlog source'
      operationId: appConnectorMysqlBinlogMysqlBinlogConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MysqlBinlogDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/netsuite/actions/authorization:
    get:
      tags:
        - connectors.netsuite
      summary: 'List of authorization objects'
      operationId: appConnectorNetsuiteNetsuiteConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/netsuite/actions/object:
    post:
      tags:
        - connectors.netsuite
      summary: 'Get Netsuite objects'
      operationId: appConnectorNetsuiteNetsuiteConnectorActionObject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Netsuite reporting objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/netsuite/actions/attributes:
    post:
      tags:
        - connectors.netsuite
      summary: 'List all attributes for the given object'
      operationId: appConnectorNetsuiteNetsuiteConnectorActionAttributes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                object:
                  type: string
                  example: account
              type: object
      responses:
        '200':
          description: 'List of Netsuite attributes for a given object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/netsuite/preview:
    post:
      tags:
        - connectors.netsuite
      summary: 'Data preview'
      operationId: appConnectorNetsuiteNetsuiteConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetsuiteDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/netsuite/create-source:
    post:
      tags:
        - connectors.netsuite
      summary: 'Create Netsuite source'
      operationId: appConnectorNetsuiteNetsuiteConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetsuiteDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/nmbrs/actions/domain:
    post:
      tags:
        - connectors.nmbrs
      summary: 'List of domains'
      operationId: appConnectorNmbrsNmbrsConnectorActionDomain
      responses:
        '200':
          description: 'List of domains'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/nmbrs/actions/company:
    post:
      tags:
        - connectors.nmbrs
      summary: 'List of companies'
      operationId: appConnectorNmbrsNmbrsConnectorActionCompany
      responses:
        '200':
          description: 'List of companies'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/nmbrs/actions/authorization:
    get:
      tags:
        - connectors.nmbrs
      summary: 'List of authorization objects'
      operationId: appConnectorNmbrsNmbrsConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/nmbrs/preview:
    post:
      tags:
        - connectors.nmbrs
      summary: 'Data preview'
      operationId: appConnectorNmbrsNmbrsConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NmbrsDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/nmbrs/create-source:
    post:
      tags:
        - connectors.nmbrs
      summary: 'Create Nmbrs source'
      operationId: appConnectorNmbrsNmbrsConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NmbrsDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/nmbrs/actions/dateRange:
    get:
      tags:
        - connectors.nmbrs
      summary: 'List of dates'
      operationId: appConnectorNmbrsNmbrsConnectorActionDateRange
      responses:
        '200':
          description: 'List of dates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/odoo/actions/authorization:
    get:
      tags:
        - connectors.odoo
      summary: 'List of authorization objects'
      operationId: appConnectorOdooOdooConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/odoo/actions/list-models:
    get:
      tags:
        - connectors.odoo
      summary: 'List of models'
      operationId: appConnectorOdooOdooConnectorActionListModels
      responses:
        '200':
          description: 'List of models'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/odoo/actions/list-columns:
    get:
      tags:
        - connectors.odoo
      summary: 'List of columns'
      operationId: appConnectorOdooOdooConnectorActionListColumns
      responses:
        '200':
          description: 'List of columns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pgsql/actions/generateSQLQueries:
    get:
      tags:
        - connectors.pgsql
      summary: 'Get generated SQL queries'
      operationId: appConnectorPgsqlPgsqlConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pgsql/actions/authorization:
    get:
      tags:
        - connectors.pgsql
      summary: 'List of authorization objects'
      operationId: appConnectorPgsqlPgsqlConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/pgsql/actions/listTables:
    post:
      tags:
        - connectors.pgsql
      summary: 'List of database tables'
      operationId: appConnectorPgsqlPgsqlConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/pgsql/actions/listColumns:
    post:
      tags:
        - connectors.pgsql
      summary: 'List of table columns'
      operationId: appConnectorPgsqlPgsqlConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/pgsql/actions/sql:
    post:
      tags:
        - connectors.pgsql
      summary: 'Get generated SQL'
      operationId: appConnectorPgsqlPgsqlConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/pgsql/preview:
    post:
      tags:
        - connectors.pgsql
      summary: 'Data preview'
      operationId: appConnectorPgsqlPgsqlConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/pgsql/create-source:
    post:
      tags:
        - connectors.pgsql
      summary: 'Create Pgsql source'
      operationId: appConnectorPgsqlPgsqlConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/pgsql_wal/actions/authorization:
    get:
      tags:
        - connectors.pgsqlWal
      summary: 'List of authorization objects'
      operationId: appConnectorPgsqlWalPgsqlWalConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/pgsql_wal/actions/list-tables:
    get:
      tags:
        - connectors.pgsqlWal
      summary: 'List of database tables'
      operationId: appConnectorPgsqlWalPgsqlWalConnectorActionListTables
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/pgsql_wal/actions/list-columns:
    get:
      tags:
        - connectors.pgsqlWal
      summary: 'List of table columns'
      operationId: appConnectorPgsqlWalPgsqlWalConnectorActionListColumns
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/pgsql_wal/preview:
    post:
      tags:
        - connectors.pgsqlWal
      summary: 'Data preview'
      operationId: appConnectorPgsqlWalPgsqlWalConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlWalDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/pgsql_wal/create-source:
    post:
      tags:
        - connectors.pgsqlWal
      summary: 'Create Pgsql Binlog source'
      operationId: appConnectorPgsqlWalPgsqlWalConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgsqlWalDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/redshift/actions/generateSQLQueries:
    get:
      tags:
        - connectors.redshift
      summary: 'Get generated SQL queries'
      operationId: appConnectorRedshiftRedshiftConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/redshift/actions/authorization:
    get:
      tags:
        - connectors.redshift
      summary: 'List of authorization objects'
      operationId: appConnectorRedshiftRedshiftConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/redshift/actions/listTables:
    post:
      tags:
        - connectors.redshift
      summary: 'List of database tables'
      operationId: appConnectorRedshiftRedshiftConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/redshift/actions/listColumns:
    post:
      tags:
        - connectors.redshift
      summary: 'List of table columns'
      operationId: appConnectorRedshiftRedshiftConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/redshift/actions/sql:
    post:
      tags:
        - connectors.redshift
      summary: 'Get generated SQL'
      operationId: appConnectorRedshiftRedshiftConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/redshift/preview:
    post:
      tags:
        - connectors.redshift
      summary: 'Data preview'
      operationId: appConnectorRedshiftRedshiftConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedshiftDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/redshift/create-source:
    post:
      tags:
        - connectors.redshift
      summary: 'Create Redshift source'
      operationId: appConnectorRedshiftRedshiftConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedshiftDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/sage_intacct/actions/authorization:
    get:
      tags:
        - connectors.sageIntacct
      summary: 'List of authorization objects'
      operationId: appConnectorSageIntacctSageIntacctConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/sage_intacct/preview:
    post:
      tags:
        - connectors.sageIntacct
      summary: 'Data preview'
      operationId: appConnectorSageIntacctSageIntacctConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SageIntacctDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/sage_intacct/create-source:
    post:
      tags:
        - connectors.sageIntacct
      summary: 'Create Sage Intacct source'
      operationId: appConnectorSageIntacctSageIntacctConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SageIntacctDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/sage_intacct/actions/object:
    get:
      tags:
        - connectors.sageIntacct
      summary: 'List of objects'
      operationId: appConnectorSageIntacctSageIntacctConnectorActionObject
      responses:
        '200':
          description: 'List of objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/sage_intacct/actions/property:
    get:
      tags:
        - connectors.sageIntacct
      summary: 'List of properties'
      operationId: appConnectorSageIntacctSageIntacctConnectorActionProperty
      responses:
        '200':
          description: 'List of properties'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/sage_intacct/actions/dateRange:
    get:
      tags:
        - connectors.sageIntacct
      summary: 'List of dates'
      operationId: appConnectorSageIntacctSageIntacctConnectorActionDateRange
      responses:
        '200':
          description: 'List of dates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/shopify/actions/shop:
    post:
      tags:
        - connectors.shopify
      summary: 'List all Shopify shops'
      operationId: appConnectorShopifyShopifyConnectorActionShop
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of shops'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/shopify/actions/dateRange:
    get:
      tags:
        - connectors.shopify
      summary: 'Method for listing date range'
      operationId: appConnectorShopifyShopifyConnectorActionDateRange
      responses:
        '200':
          description: 'List of Shopify date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/shopify/actions/authorization:
    get:
      tags:
        - connectors.shopify
      summary: 'List of authorization objects'
      operationId: appConnectorShopifyShopifyConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/shopify/templates:
    get:
      tags:
        - connectors.shopify
      summary: 'List all Shopify dataset templates'
      operationId: appConnectorShopifyShopifyConnectorActionTemplates
      responses:
        '200':
          description: 'List all Shopify dataset templates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/shopify/templates/{id}':
    get:
      tags:
        - connectors.shopify
      summary: 'List details of dataset template'
      operationId: appConnectorShopifyShopifyConnectorActionTemplate
      parameters:
        -
          name: id
          in: path
          description: 'The id of the template to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'List details of dataset template'
          content:
            application/json:
              schema:
                type: object
  /connectors/shopify/preview:
    post:
      tags:
        - connectors.shopify
      summary: 'Data preview'
      operationId: appConnectorShopifyShopifyConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopifyDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/shopify/create-source:
    post:
      tags:
        - connectors.shopify
      summary: 'Create Shopify source'
      operationId: appConnectorShopifyShopifyConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopifyDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/snowflake/actions/authorization:
    get:
      tags:
        - connectors.snowflake
      summary: 'List of authorization objects'
      operationId: appConnectorSnowflakeSnowflakeConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/snowflake/actions/listTables:
    post:
      tags:
        - connectors.snowflake
      summary: 'List of database tables'
      operationId: appConnectorSnowflakeSnowflakeConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/snowflake/actions/listColumns:
    post:
      tags:
        - connectors.snowflake
      summary: 'List of table columns'
      operationId: appConnectorSnowflakeSnowflakeConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/snowflake/actions/sql:
    post:
      tags:
        - connectors.snowflake
      summary: 'Get generated SQL'
      operationId: appConnectorSnowflakeSnowflakeConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/snowflake/preview:
    post:
      tags:
        - connectors.snowflake
      summary: 'Data preview'
      operationId: appConnectorSnowflakeSnowflakeConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnowflakeDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/snowflake/create-source:
    post:
      tags:
        - connectors.snowflake
      summary: 'Create Snowflake source'
      operationId: appConnectorSnowflakeSnowflakeConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnowflakeDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connectors/trino/actions/generateSQLQueries:
    get:
      tags:
        - connectors.trino
      summary: 'Get generated SQL queries'
      operationId: appConnectorTrinoTrinoConnectorActionGenerateSQLQueries
      responses:
        '200':
          description: 'Get generated SQL queries'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/trino/actions/authorization:
    get:
      tags:
        - connectors.trino
      summary: 'List of authorization objects'
      operationId: appConnectorTrinoTrinoConnectorActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /connectors/trino/actions/listTables:
    post:
      tags:
        - connectors.trino
      summary: 'List of database tables'
      operationId: appConnectorTrinoTrinoConnectorActionListTables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of database tables'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/trino/actions/listColumns:
    post:
      tags:
        - connectors.trino
      summary: 'List of table columns'
      operationId: appConnectorTrinoTrinoConnectorActionListColumns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'List of table columns'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { title: { type: string }, value: { type: string } }
                  type: object
  /connectors/trino/actions/sql:
    post:
      tags:
        - connectors.trino
      summary: 'Get generated SQL'
      operationId: appConnectorTrinoTrinoConnectorActionSQL
      requestBody:
        content:
          application/json:
            schema:
              properties:
                columns:
                  type: array
                  items: { type: string }
                  example: [column_1, column_2]
                table:
                  type: string
                  example: table_name
              type: object
      responses:
        '200':
          description: 'Get generated SQL'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/trino/preview:
    post:
      tags:
        - connectors.trino
      summary: 'Data preview'
      operationId: appConnectorTrinoTrinoConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrinoDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /connectors/trino/create-source:
    post:
      tags:
        - connectors.trino
      summary: 'Create Trino source'
      operationId: appConnectorTrinoTrinoConnectorCreateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrinoDto'
      responses:
        '200':
          description: 'Created source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /connector/webex/actions/meetingsSites:
    get:
      tags:
        - connectors.webex
      summary: 'List of Webex meetings sites'
      operationId: appConnectorWebexWebexConnectorActionMeetingSite
      responses:
        '200':
          description: 'List of Webex meetings sites'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connector/webex/actions/meetings:
    get:
      tags:
        - connectors.webex
      summary: 'List of Webex meetings'
      operationId: appConnectorWebexWebexConnectorActionMeetings
      responses:
        '200':
          description: 'List of Webex meetings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connector/webex/actions/meetingsWithPolls:
    get:
      tags:
        - connectors.webex
      summary: 'List of Webex meetings'
      operationId: appConnectorWebexWebexConnectorActionMeetingsWithPolls
      responses:
        '200':
          description: 'List of Webex meetings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/dateRange:
    get:
      tags:
        - connectors.zemanta
      summary: 'Method for listing date range'
      operationId: appConnectorZemantaZemantaConnectorActionDateRange
      responses:
        '200':
          description: 'List of Zemanta date ranges'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/metrics:
    get:
      tags:
        - connectors.zemanta
      summary: 'List of Zemanta common fields'
      operationId: appConnectorZemantaZemantaConnectorActionMetrics
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/entities:
    get:
      tags:
        - connectors.zemanta
      summary: 'List of Zemanta common fields'
      operationId: appConnectorZemantaZemantaConnectorActionEntities
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/options:
    get:
      tags:
        - connectors.zemanta
      summary: 'List of Zemanta common fields'
      operationId: appConnectorZemantaZemantaConnectorActionOptions
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/filters:
    get:
      tags:
        - connectors.zemanta
      summary: 'List of Zemanta common fields'
      operationId: appConnectorZemantaZemantaConnectorActionFilters
      responses:
        '200':
          description: 'List of available fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/actions/account:
    get:
      tags:
        - connectors.zemanta
      summary: 'List of Zemanta accounts'
      operationId: appConnectorZemantaZemantaConnectorActionAccount
      responses:
        '200':
          description: 'List of available advertisers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /connectors/zemanta/preview:
    post:
      tags:
        - connectors.zemanta
      summary: 'Data preview'
      operationId: appConnectorZemantaZemantaConnectorPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZemantaDto'
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /invite-member:
    post:
      tags:
        - accounts
      operationId: accountControllerInviteMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMemberRequest'
      responses:
        '204':
          description: 'Create user/member'
  '/customers/{id}/invited-members':
    get:
      tags:
        - accounts
      operationId: accountControllerGetCustomerInvitedMembers
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get list of invited members'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRequest'
  '/invite-member/{base64Email}':
    delete:
      tags:
        - accounts
      operationId: accountControllerDeleteInvitedMember
      parameters:
        -
          name: base64Email
          in: path
          required: true
          schema:
            description: 'base64 encoded email address'
            type: string
      responses:
        '204':
          description: 'Cancels member invitation'
  '/invite-member-by-id/{invitedRequestId}':
    delete:
      tags:
        - accounts
      operationId: accountControllerDeleteInvitedMemberById
      parameters:
        -
          name: invitedRequestId
          in: path
          required: true
          schema:
            description: 'ID of member invitation request'
            type: string
      responses:
        '204':
          description: 'Cancels member invitation'
  '/customers/{id}/members':
    get:
      tags:
        - accounts
      operationId: accountControllerGetCustomerMembers
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get customer members'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
  '/customers/{id}/members/{memberId}':
    delete:
      tags:
        - accounts
      operationId: accountControllerDeleteCustomerMember
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
  /auth:
    post:
      tags:
        - auth
      description: auth
      operationId: authControllerAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDto'
  /auth-mfa:
    post:
      tags:
        - auth
      operationId: authControllerAuthMFA
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthMFARequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDto'
  /refresh:
    get:
      tags:
        - auth
      operationId: authControllerRefresh
      parameters:
        -
          name: X-Realm-Id
          in: header
          description: 'Realm ID'
          required: true
          schema:
            type: string
        -
          name: X-Refresh-Token
          in: header
          description: 'Refresh token'
          required: true
          schema:
            type: string
        -
          name: X-Provider
          in: header
          description: Provider
          required: true
          schema:
            type: string
        -
          name: Authorization
          in: header
          description: 'Access token (optional)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDto'
  /revoke:
    get:
      tags:
        - auth
      operationId: authControllerRevoke
      responses:
        '204':
          description: ''
  /certificates:
    get:
      tags:
        - certificates
      operationId: certificateControllerList
      responses:
        '200':
          description: 'Get list of certificates'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
    post:
      tags:
        - certificates
      operationId: certificateControllerCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificateRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
  '/certificates/{id}':
    get:
      tags:
        - certificates
      operationId: certificateControllerDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get certificate detail'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
    delete:
      tags:
        - certificates
      operationId: certificateControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
  /connectors:
    get:
      tags:
        - connectors
      operationId: connectorControllerList
      responses:
        '200':
          description: 'Lists all available connectors'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorListResponse'
  '/connectors/{connectorName}/templates':
    get:
      tags:
        - connectors
      operationId: connectorControllerTemplates
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Lists all available templates for connector'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTemplateResponse'
  '/connectors/{connectorName}/templates/{name}':
    get:
      tags:
        - connectors
      operationId: connectorControllerTemplate
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get template of connector'
          content:
            application/json:
              schema:
                type: object
  '/connectors/{connectorName}/create-source':
    post:
      tags:
        - connectors
      description: 'Creates the empty source with desired structure.'
      operationId: connectorControllerCreateSource
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Description of the new source'
          content:
            application/json:
              schema:
                type: object
  '/connectors/{connectorName}/preview':
    post:
      tags:
        - connectors
      description: 'Loads the data and returns them for the data preview purpose'
      operationId: connectorControllerPreview
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Data preview'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/connectors/{connectorName}/actions/{action}':
    get:
      tags:
        - connectors
      operationId: connectorControllerGetAction
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
        -
          name: action
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Authorization for connector'
          content:
            application/json:
              schema:
                type: array
                items: {  }
    post:
      tags:
        - connectors
      operationId: connectorControllerPostAction
      parameters:
        -
          name: connectorName
          in: path
          required: true
          schema:
            type: string
        -
          name: action
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Action of connector'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  /destinations:
    get:
      tags:
        - destinations
      operationId: destinationControllerList
      responses:
        '200':
          description: 'Lists all destinations'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/destinations/{id}':
    get:
      tags:
        - destinations
      operationId: destinationControllerDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get destination detail'
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - destinations
      operationId: destinationControllerUpdate
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 'according to storageType value, the concrete params are required'
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: "Updates the destinations and it's related documents"
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - destinations
      operationId: destinationControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deletes destination and all its related documents'
  '/destinations/{id}/clone':
    get:
      tags:
        - destinations
      operationId: destinationControllerClone
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Creates new destination with the same settings'
          content:
            application/json:
              schema:
                type: object
  /flows:
    get:
      tags:
        - flow
      operationId: flowControllerList
      responses:
        '200':
          description: 'List all customer flows'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flow'
    post:
      tags:
        - flow
      operationId: flowControllerCreateFlow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Creates new flow'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
  /flows/preview:
    post:
      tags:
        - flow
      operationId: flowControllerPreview
      parameters:
        -
          name: limit
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Get flow data preview from DPI'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/flows/{id}':
    get:
      tags:
        - flow
      operationId: flowControllerDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get flow detail'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
    put:
      tags:
        - flow
      operationId: flowControllerUpdateFlow
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Updates existing flow'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
    delete:
      tags:
        - flow
      operationId: flowControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deletes flow and all associated documents'
  '/flows/{id}/clone':
    get:
      tags:
        - flow
      operationId: flowControllerClone
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Clones the existing flow'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
  '/flows/{id}/api':
    get:
      tags:
        - flow
      operationId: flowControllerApiDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the detail of api endpoint associated to the flow'
          content:
            application/json:
              schema:
                type: object
  '/flows/{id}/api/log':
    get:
      tags:
        - flow
      operationId: flowControllerApiLog
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get latest log entries related to api endpoint'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/flows/{id}/api/debug':
    get:
      tags:
        - flow
      operationId: flowControllerApiDebug
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Checks whether the flow api endpoint is operable and logs the results'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDebugResponse'
  '/flows/{id}/write':
    get:
      tags:
        - flow
      operationId: flowControllerWriteDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the detail of write action associated to the flow'
          content:
            application/json:
              schema:
                type: object
  '/flows/{id}/write/log':
    get:
      tags:
        - flow
      operationId: flowControllerWriteLog
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get latest log entries related to flow write actions'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/flows/{id}/write/debug':
    get:
      tags:
        - flow
      operationId: flowControllerWriteDebug
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Checks whether the write action is operable and logs the results'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriterDebugResponse'
  '/flows/{id}/write/enqueue':
    post:
      tags:
        - flow
      operationId: flowControllerEnqueueWriteAction
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunWriteActionRequest'
      responses:
        '202':
          description: 'Enqueues the write action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionEnqueuedDto'
  '/flows/{id}/write/status':
    get:
      tags:
        - flow
      operationId: flowControllerStatus
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the current flow write action status'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCurrentState'
    put:
      tags:
        - flow
      operationId: flowControllerUpdateWriteActionStatus
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Updates the write action status'
          content:
            application/json:
              schema:
                type: object
  '/flows/{id}/status':
    get:
      tags:
        - flow
      operationId: flowControllerFlowStatus
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the current flow status'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCurrentState'
  '/flows/{id}/write/schedule':
    get:
      tags:
        - flow
      operationId: flowControllerWriteActionSchedule
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the schedule of write action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
    put:
      tags:
        - flow
      operationId: flowControllerUpdateWriteActionSchedule
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleRequest'
      responses:
        '200':
          description: 'Updates the schedule settings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
    delete:
      tags:
        - flow
      operationId: flowControllerDeleteWriteActionSchedule
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Removes the flow write action schedule'
  '/flows/{id}/write/settings':
    put:
      tags:
        - flow
      operationId: flowControllerUpdateWriteActionSettings
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteActionSettingsRequest'
      responses:
        '200':
          description: 'Updates the write action settings'
          content:
            application/json:
              schema:
                type: object
  '/flows/by-source/{sourceId}':
    get:
      tags:
        - flow
      operationId: flowControllerGetFlowsBySource
      parameters:
        -
          name: sourceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get all flows that contain the given source'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flow'
  /services:
    get:
      tags:
        - service
      operationId: serviceControllerList
      responses:
        '200':
          description: 'List all services'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceListResponse'
    post:
      tags:
        - service
      operationId: serviceControllerCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
      responses:
        '200':
          description: 'Creates new service'
          content:
            application/json:
              schema:
                type: object
  '/services/{id}':
    get:
      tags:
        - service
      operationId: serviceControllerDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Get service detail'
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - service
      operationId: serviceControllerUpdate
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: "Updates the source and it's related documents"
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - service
      operationId: serviceControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'Delete single service. Fails if service is being used'
  '/services/{id}/debug':
    get:
      tags:
        - service
      operationId: serviceControllerDebug
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Checks whether service is operable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizerDebugResponse'
  '/services/{serviceName}/oauth-request-url':
    post:
      tags:
        - service
      operationId: serviceControllerOAuthRequestURL
      parameters:
        -
          name: serviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 'Parameters for OAuth URL'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthURLRequest'
      responses:
        '200':
          description: 'Returns the url'
          content:
            application/json:
              schema:
                type: object
  '/services/{serviceName}/oauth-process-callback':
    post:
      tags:
        - service
      operationId: serviceControllerOAuthProcessCallback
      parameters:
        -
          name: serviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthProcessCallbackRequest'
      responses:
        '200':
          description: 'Processes the callback and fetches the refresh token'
          content:
            application/json:
              schema:
                type: object
  /sources:
    get:
      tags:
        - source
      operationId: sourceControllerList
      responses:
        '200':
          description: 'An example resource'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
  '/sources/{id}':
    get:
      tags:
        - source
      operationId: sourceControllerDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get source detail'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDTO'
    put:
      tags:
        - source
      operationId: sourceControllerUpdate
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Updates the source basic information'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
    delete:
      tags:
        - source
      operationId: sourceControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deletes source and all other related documents'
  '/sources/{id}/metadata':
    get:
      tags:
        - source
      operationId: sourceControllerMetadata
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get source params used when the source was created'
          content:
            application/json:
              schema:
                type: object
  '/sources/{id}/preview':
    get:
      tags:
        - source
      operationId: sourceControllerPreview
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Preview the source data'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/sources/{id}/extraction':
    get:
      tags:
        - source
      operationId: sourceControllerExtractionDetail
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the detail of extraction associated to the source'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionAction'
    put:
      tags:
        - source
      operationId: sourceControllerUpdateExtraction
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Updates extraction action settings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionAction'
  '/sources/{id}/extraction/schedule':
    get:
      tags:
        - source
      operationId: sourceControllerExtractionSchedule
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the schedule of extraction action'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
    put:
      tags:
        - source
      operationId: sourceControllerUpdateExtractionSchedule
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleRequest'
      responses:
        '200':
          description: 'Updates the schedule settings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
  '/sources/{id}/action/log':
    get:
      tags:
        - source
      operationId: sourceControllerActionLog
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get latest log entries related to source action'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  '/sources/{id}/request':
    get:
      tags:
        - source
      operationId: sourceControllerSourceRequest
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the request metadata used for source extraction'
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - source
      operationId: sourceControllerUpdateSourceRequest
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Updates request settings'
          content:
            application/json:
              schema:
                type: object
  '/sources/{id}/extraction/debug':
    get:
      tags:
        - source
      operationId: sourceControllerExtractionDebug
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Checks whether the extraction is operable and logs the results'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionDebugResponse'
  '/sources/{id}/extraction/enqueue':
    post:
      tags:
        - source
      operationId: sourceControllerEnqueueExtraction
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunExtractionRequest'
      responses:
        '202':
          description: 'Enqueues the source action to be processed'
  '/sources/{id}/status':
    get:
      tags:
        - source
      operationId: sourceControllerSourceStatus
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get the source current status'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCurrentState'
  '/sources/{id}/extraction/deactivate':
    post:
      tags:
        - source
      operationId: sourceControllerDeactivateSource
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionAction'
      responses:
        '200':
          description: 'Updates extraction action settings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionAction'
  '/sources/{id}/detect':
    get:
      tags:
        - source
      operationId: sourceControllerDetect
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Detector service endpoint'
          content:
            application/json:
              schema:
                type: array
                items: {  }
  /tokens:
    get:
      tags:
        - token
      operationId: tokenControllerList
      responses:
        '200':
          description: 'Lists all customer tokens'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
    post:
      tags:
        - token
      operationId: tokenControllerCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: 'Creates new token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
  '/tokens/{id}':
    delete:
      tags:
        - token
      operationId: tokenControllerDelete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Deletes the token'
  /.well-known/jwks.json:
    get:
      tags:
        - wellKnown
      operationId: wellKnownControllerKeys
      responses:
        '200':
          description: keys
          content:
            application/json:
              schema:
                properties:
                  keys: { type: array, items: { $ref: '#/components/schemas/JWKS' } }
                type: object
  /destinations/alloy_db/actions/authorization:
    get:
      tags:
        - destinations.alloyDb
      summary: 'List of authorization objects'
      operationId: appDestinationAlloyDbAlloyDbDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/alloy_db/actions/writeModes:
    post:
      tags:
        - destinations.alloyDb
      summary: 'List of write modes'
      operationId: appDestinationAlloyDbAlloyDbDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/alloy_db/actions/ssl:
    get:
      tags:
        - destinations.alloyDb
      summary: 'List of SSL options'
      operationId: appDestinationAlloyDbAlloyDbDestinationActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/alloy_db:
    post:
      tags:
        - destinations.alloyDb
      summary: 'Create destination'
      operationId: appDestinationAlloyDbAlloyDbDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlloyDbDestination'
  /destinations/aws_aurora/actions/authorization:
    get:
      tags:
        - destinations.awsAurora
      summary: 'List of authorization objects'
      operationId: appDestinationAwsAuroraAwsAuroraDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_aurora/actions/tls:
    get:
      tags:
        - destinations.awsAurora
      summary: 'List of TLS options'
      operationId: appDestinationAwsAuroraAwsAuroraDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_aurora/actions/writeModes:
    post:
      tags:
        - destinations.awsAurora
      summary: 'List of write modes'
      operationId: appDestinationAwsAuroraAwsAuroraDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_aurora:
    post:
      tags:
        - destinations.awsAurora
      summary: 'Create destination'
      operationId: appDestinationAwsAuroraAwsAuroraDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAuroraDestination'
  /destinations/aws_aurora_pgsql/actions/authorization:
    get:
      tags:
        - destinations.awsAuroraPgsql
      summary: 'List of authorization objects'
      operationId: appDestinationAwsAuroraPgsqlAwsAuroraPgsqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_aurora_pgsql/actions/writeModes:
    post:
      tags:
        - destinations.awsAuroraPgsql
      summary: 'List of write modes'
      operationId: appDestinationAwsAuroraPgsqlAwsAuroraPgsqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_aurora_pgsql:
    post:
      tags:
        - destinations.awsAuroraPgsql
      summary: 'Create destination'
      operationId: appDestinationAwsAuroraPgsqlAwsAuroraPgsqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAuroraPgsqlDestination'
  /destinations/aws_maria/actions/authorization:
    get:
      tags:
        - destinations.awsMaria
      summary: 'List of authorization objects'
      operationId: appDestinationAwsMariaAwsMariaDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_maria/actions/tls:
    get:
      tags:
        - destinations.awsMaria
      summary: 'List of TLS options'
      operationId: appDestinationAwsMariaAwsMariaDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_maria/actions/writeModes:
    post:
      tags:
        - destinations.awsMaria
      summary: 'List of write modes'
      operationId: appDestinationAwsMariaAwsMariaDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_maria:
    post:
      tags:
        - destinations.awsMaria
      summary: 'Create destination'
      operationId: appDestinationAwsMariaAwsMariaDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsMariaDestination'
  /destinations/aws_mysql/actions/authorization:
    get:
      tags:
        - destinations.awsMysql
      summary: 'List of authorization objects'
      operationId: appDestinationAwsMysqlAwsMysqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_mysql/actions/tls:
    get:
      tags:
        - destinations.awsMysql
      summary: 'List of TLS options'
      operationId: appDestinationAwsMysqlAwsMysqlDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_mysql/actions/writeModes:
    post:
      tags:
        - destinations.awsMysql
      summary: 'List of write modes'
      operationId: appDestinationAwsMysqlAwsMysqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_mysql:
    post:
      tags:
        - destinations.awsMysql
      summary: 'Create destination'
      operationId: appDestinationAwsMysqlAwsMysqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsMysqlDestination'
  /destinations/aws_pgsql/actions/authorization:
    get:
      tags:
        - destinations.awsPgsql
      summary: 'List of authorization objects'
      operationId: appDestinationAwsPgsqlAwsPgsqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_pgsql/actions/writeModes:
    post:
      tags:
        - destinations.awsPgsql
      summary: 'List of write modes'
      operationId: appDestinationAwsPgsqlAwsPgsqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_pgsql:
    post:
      tags:
        - destinations.awsPgsql
      summary: 'Create destination'
      operationId: appDestinationAwsPgsqlAwsPgsqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsPgsqlDestination'
  /destinations/aws_sql_server/actions/authorization:
    get:
      tags:
        - destinations.awsSqlServer
      summary: 'List of authorization objects'
      operationId: appDestinationAwsSqlServerAwsSqlServerDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/aws_sql_server/actions/writeModes:
    post:
      tags:
        - destinations.awsSqlServer
      summary: 'List of write modes'
      operationId: appDestinationAwsSqlServerAwsSqlServerDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/aws_sql_server:
    post:
      tags:
        - destinations.awsSqlServer
      summary: 'Create destination'
      operationId: appDestinationAwsSqlServerAwsSqlServerDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsSqlServerDestination'
  /destinations/azure_blob_storage/actions/authorization:
    get:
      tags:
        - destinations.azureBlobStorage
      summary: 'List of authorization objects'
      operationId: appDestinationAzureBlobAzureBlobDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/azure_blob_storage/actions/writeModes:
    post:
      tags:
        - destinations.azureBlobStorage
      summary: 'List of write modes'
      operationId: appDestinationAzureBlobAzureBlobDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/azure_blob_storage/actions/filename_formats:
    get:
      tags:
        - destinations.azureBlobStorage
      summary: 'List of filename patterns'
      operationId: appDestinationAzureBlobAzureBlobDestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/azure_blob_storage:
    post:
      tags:
        - destinations.azureBlobStorage
      summary: 'Create destination'
      operationId: appDestinationAzureBlobAzureBlobDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobStorageDestination'
  /destinations/azure_sql/actions/authorization:
    get:
      tags:
        - destinations.azureSql
      summary: 'List of authorization objects'
      operationId: appDestinationAzureSqlAzureSqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/azure_sql/actions/writeModes:
    post:
      tags:
        - destinations.azureSql
      summary: 'List of write modes'
      operationId: appDestinationAzureSqlAzureSqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/azure_sql:
    post:
      tags:
        - destinations.azureSql
      summary: 'Create destination'
      operationId: appDestinationAzureSqlAzureSqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSqlDestination'
  /destinations/azure_synapse/actions/authorization:
    get:
      tags:
        - destinations.azureSynapse
      summary: 'List of authorization objects'
      operationId: appDestinationAzureSynapseAzureSynapseDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/azure_synapse/actions/writeModes:
    post:
      tags:
        - destinations.azureSynapse
      summary: 'List of write modes'
      operationId: appDestinationAzureSynapseAzureSynapseDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/azure_synapse:
    post:
      tags:
        - destinations.azureSynapse
      summary: 'Create destination'
      operationId: appDestinationAzureSynapseAzureSynapseDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSynapseStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSynapseDestination'
  /destinations/clickhouse/actions/authorization:
    get:
      tags:
        - destinations.clickhouse
      summary: 'List of authorization objects'
      operationId: appDestinationClickhouseClickhouseDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/clickhouse/actions/ssl:
    get:
      tags:
        - destinations.clickhouse
      summary: 'List of SSL options'
      operationId: appDestinationClickhouseClickhouseDestinationActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/clickhouse/actions/tableEngine:
    get:
      tags:
        - destinations.clickhouse
      summary: 'List of table engines'
      operationId: appDestinationClickhouseClickhouseDestinationActionTableEngine
      responses:
        '200':
          description: 'List of table engines'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/clickhouse/actions/writeModes:
    post:
      tags:
        - destinations.clickhouse
      summary: 'List of write modes'
      operationId: appDestinationClickhouseClickhouseDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/clickhouse:
    post:
      tags:
        - destinations.clickhouse
      summary: 'Create destination'
      operationId: appDestinationClickhouseClickhouseDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickhouseStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseDestination'
  /destinations/cockroach_db/actions/authorization:
    get:
      tags:
        - destinations.cockroachDB
      summary: 'List of authorization objects'
      operationId: appDestinationCockroachDBCockroachDBDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/cockroach_db/actions/writeModes:
    post:
      tags:
        - destinations.cockroachDB
      summary: 'List of write modes'
      operationId: appDestinationCockroachDBCockroachDBDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/cockroach_db:
    post:
      tags:
        - destinations.cockroachDB
      summary: 'Create destination'
      operationId: appDestinationCockroachDBCockroachDBDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CockroachDBStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CockroachDBDestination'
  /destinations/databox/actions/authorization:
    get:
      tags:
        - destinations.databox
      summary: 'List of authorization objects'
      operationId: appDestinationDataboxDataboxDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/databox/actions/writeModes:
    post:
      tags:
        - destinations.databox
      summary: 'List of write modes'
      operationId: appDestinationDataboxDataboxDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/databox:
    post:
      tags:
        - destinations.databox
      summary: 'Create destination'
      operationId: appDestinationDataboxDataboxDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataboxStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataboxDestination'
  /destinations/databricks/actions/authorization:
    get:
      tags:
        - destinations.databricks
      summary: 'List of authorization objects'
      operationId: appDestinationDatabricksDatabricksDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/databricks/actions/writeModes:
    post:
      tags:
        - destinations.databricks
      summary: 'List of write modes'
      operationId: appDestinationDatabricksDatabricksDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/databricks:
    post:
      tags:
        - destinations.databricks
      summary: 'Create destination'
      operationId: appDestinationDatabricksDatabricksDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabricksStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabricksDestination'
  /destinations/email/actions/writeModes:
    post:
      tags:
        - destinations.email
      summary: 'List of write modes'
      operationId: appDestinationEmailEmailDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/email/actions/attachmentFormats:
    post:
      tags:
        - destinations.email
      summary: 'List email attachment formats'
      operationId: appDestinationEmailEmailDestinationActionAttachmentFormats
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                attachmentFormat:
                  type: string
                  example: csv
              type: object
      responses:
        '200':
          description: 'List email attachment formats'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/exact_online/actions/authorization:
    get:
      tags:
        - destinations.exactOnline
      summary: 'List of authorization objects'
      operationId: appDestinationExactOnlineExactOnlineDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/exact_online/actions/endpoint:
    get:
      tags:
        - destinations.exactOnline
      summary: 'List of endpoints'
      operationId: appDestinationExactOnlineExactOnlineDestinationActionEndpoint
      responses:
        '200':
          description: 'List of endpoints'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/exact_online/actions/sourceFields:
    post:
      tags:
        - destinations.exactOnline
      summary: 'List of source fields'
      operationId: appDestinationExactOnlineExactOnlineDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/exact_online/actions/destinationFields:
    post:
      tags:
        - destinations.exactOnline
      summary: 'List of destination fields'
      operationId: appDestinationExactOnlineExactOnlineDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/exact_online/actions/writeModes:
    post:
      tags:
        - destinations.exactOnline
      summary: 'List of write modes'
      operationId: appDestinationExactOnlineExactOnlineDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/exact_online:
    post:
      tags:
        - destinations.exactOnline
      summary: 'Create destination'
      operationId: appDestinationExactOnlineExactOnlineDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExactOnlineStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExactOnlineDestination'
  /destinations/firebolt/actions/authorization:
    get:
      tags:
        - destinations.firebolt
      summary: 'List of authorization objects'
      operationId: appDestinationFireboltFireboltDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/firebolt/actions/writeModes:
    post:
      tags:
        - destinations.firebolt
      summary: 'List of write modes'
      operationId: appDestinationFireboltFireboltDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/firebolt:
    post:
      tags:
        - destinations.firebolt
      summary: 'Create destination'
      operationId: appDestinationFireboltFireboltDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FireboltStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireboltDestination'
  /destinations/ftp/actions/authorization:
    get:
      tags:
        - destinations.ftp
      summary: 'List of authorization objects'
      operationId: appDestinationFtpFtpDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/ftp/actions/fileFormats:
    get:
      tags:
        - destinations.ftp
      summary: 'List of file formats'
      operationId: appDestinationFtpFtpDestinationActionFileFormats
      responses:
        '200':
          description: 'List of file formats'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/ftp/actions/filename_formats:
    get:
      tags:
        - destinations.ftp
      summary: 'List of filename patterns'
      operationId: appDestinationFtpFtpDestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/ftp/actions/writeModes:
    post:
      tags:
        - destinations.ftp
      summary: 'List of write modes'
      operationId: appDestinationFtpFtpDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/ftp:
    post:
      tags:
        - destinations.ftp
      summary: 'Create destination'
      operationId: appDestinationFtpFtpDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtpStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtpDestination'
  /destinations/google_ads/actions/sourceFields:
    post:
      tags:
        - destinations.googleAds
      summary: 'List of source fields'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/google_ads/actions/destinationFields:
    post:
      tags:
        - destinations.googleAds
      summary: 'List of destination fields'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/google_ads/actions/object:
    get:
      tags:
        - destinations.googleAds
      summary: 'List of Google Ads object types'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionObject
      responses:
        '200':
          description: 'List of Google Ads object types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_ads/actions/writeModes:
    post:
      tags:
        - destinations.googleAds
      summary: 'List of write modes'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_ads/actions/googleCustomer:
    get:
      tags:
        - destinations.googleAds
      summary: 'List of Google Ads customers'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionGoogleCustomer
      responses:
        '200':
          description: 'List of Google Ads customers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_ads/actions/googleManager:
    get:
      tags:
        - destinations.googleAds
      summary: 'List of Google Ads customers'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionGoogleManager
      responses:
        '200':
          description: 'List of Google Ads customers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_ads/actions/conversionId:
    get:
      tags:
        - destinations.googleAds
      summary: 'List of Google Ads customers'
      operationId: appDestinationGoogleAdsGoogleAdsDestinationActionConversionId
      responses:
        '200':
          description: 'List of Google Ads customers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_big_query/actions/project:
    post:
      tags:
        - destinations.googleBigQuery
      summary: 'List of projects'
      operationId: appDestinationGoogleBigQueryGoogleBigQueryDestinationActionProject
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: integer
                  example: '1'
              type: object
      responses:
        '200':
          description: 'List of projects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /destinations/google_big_query/actions/dataset:
    post:
      tags:
        - destinations.googleBigQuery
      summary: 'List of datasets'
      operationId: appDestinationGoogleBigQueryGoogleBigQueryDestinationActionDataset
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: integer
                  example: '1'
                projectId:
                  type: integer
                  example: '1'
              type: object
      responses:
        '200':
          description: 'List of datasets'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /destinations/google_big_query/actions/authorization:
    get:
      tags:
        - destinations.googleBigQuery
      summary: 'List of authorization objects'
      operationId: appDestinationGoogleBigQueryGoogleBigQueryDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_big_query/actions/writeModes:
    post:
      tags:
        - destinations.googleBigQuery
      summary: 'List of write modes'
      operationId: appDestinationGoogleBigQueryGoogleBigQueryDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_big_query:
    post:
      tags:
        - destinations.googleBigQuery
      summary: 'Create destination'
      operationId: appDestinationGoogleBigQueryGoogleBigQueryDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleBigQueryStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleBigQueryDestination'
  /destinations/google_cloud_storage/actions/authorization:
    get:
      tags:
        - destinations.googleCloudStorage
      summary: 'List of authorization objects'
      operationId: appDestinationGoogleCloudStorageGoogleCloudStorageDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_cloud_storage/actions/writeModes:
    post:
      tags:
        - destinations.googleCloudStorage
      summary: 'List of write modes'
      operationId: appDestinationGoogleCloudStorageGoogleCloudStorageDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_storage/actions/filename_formats:
    get:
      tags:
        - destinations.googleCloudStorage
      summary: 'List of filename patterns'
      operationId: appDestinationGoogleCloudStorageGoogleCloudStorageDestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_storage:
    post:
      tags:
        - destinations.googleCloudStorage
      summary: 'Create destination'
      operationId: appDestinationGoogleCloudStorageGoogleCloudStorageDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudStorageDestination'
  /destinations/google_cloud_mssql/actions/authorization:
    get:
      tags:
        - destinations.googleCloudMssql
      summary: 'List of authorization objects'
      operationId: appDestinationGoogleMssqlGoogleMssqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_cloud_mssql/actions/writeModes:
    post:
      tags:
        - destinations.googleCloudMssql
      summary: 'List of write modes'
      operationId: appDestinationGoogleMssqlGoogleMssqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_mssql:
    post:
      tags:
        - destinations.googleCloudMssql
      summary: 'Create destination'
      operationId: appDestinationGoogleMssqlGoogleMssqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMssqlDestination'
  /destinations/google_cloud_mysql/actions/authorization:
    get:
      tags:
        - destinations.googleCloudMysql
      summary: 'List of authorization objects'
      operationId: appDestinationGoogleMysqlGoogleMysqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_cloud_mysql/actions/tls:
    get:
      tags:
        - destinations.googleCloudMysql
      summary: 'List of TLS options'
      operationId: appDestinationGoogleMysqlGoogleMysqlDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_mysql/actions/writeModes:
    post:
      tags:
        - destinations.googleCloudMysql
      summary: 'List of write modes'
      operationId: appDestinationGoogleMysqlGoogleMysqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_mysql:
    post:
      tags:
        - destinations.googleCloudMysql
      summary: 'Create destination'
      operationId: appDestinationGoogleMysqlGoogleMysqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMysqlDestination'
  /destinations/google_cloud_pgsql/actions/authorization:
    get:
      tags:
        - destinations.googleCloudPgsql
      summary: 'List of authorization objects'
      operationId: appDestinationGooglePgsqlGooglePgsqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_cloud_pgsql/actions/writeModes:
    post:
      tags:
        - destinations.googleCloudPgsql
      summary: 'List of write modes'
      operationId: appDestinationGooglePgsqlGooglePgsqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_cloud_pgsql:
    post:
      tags:
        - destinations.googleCloudPgsql
      summary: 'Create destination'
      operationId: appDestinationGooglePgsqlGooglePgsqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GooglePgsqlDestination'
  /destinations/google_sheets/actions/availableSpreadsheets:
    post:
      tags:
        - destinations.googleSheets
      summary: 'List of spreadsheets'
      operationId: appDestinationGoogleSheetsGoogleSheetsDestinationActionAvailableSpreadsheets
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '1'
              type: object
      responses:
        '200':
          description: 'List of spreadsheets'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_sheets/actions/authorization:
    get:
      tags:
        - destinations.googleSheets
      summary: 'List of authorization objects'
      operationId: appDestinationGoogleSheetsGoogleSheetsDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/google_sheets/actions/writeModes:
    post:
      tags:
        - destinations.googleSheets
      summary: 'List of write modes'
      operationId: appDestinationGoogleSheetsGoogleSheetsDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/google_sheets:
    post:
      tags:
        - destinations.googleSheets
      summary: 'Create destination'
      operationId: appDestinationGoogleSheetsGoogleSheetsDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSheetsStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSheetsDestination'
  /destinations/http_hubspot/actions/authorization:
    get:
      tags:
        - destinations.httpHubspot
      summary: 'List of authorization objects'
      operationId: appDestinationHubspotHubspotDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/http_hubspot/actions/apiObjects:
    get:
      tags:
        - destinations.httpHubspot
      summary: 'List of TLS options'
      operationId: appDestinationHubspotHubspotDestinationActionApiObjects
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/http_hubspot/actions/sourceFields:
    post:
      tags:
        - destinations.httpHubspot
      summary: 'List of source fields'
      operationId: appDestinationHubspotHubspotDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/http_hubspot/actions/destinationFields:
    post:
      tags:
        - destinations.httpHubspot
      summary: 'List of destination fields'
      operationId: appDestinationHubspotHubspotDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/http_hubspot/actions/writeModes:
    post:
      tags:
        - destinations.httpHubspot
      summary: 'List of write modes'
      operationId: appDestinationHubspotHubspotDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/http_hubspot:
    post:
      tags:
        - destinations.httpHubspot
      summary: 'Create destination'
      operationId: appDestinationHubspotHubspotDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpHubspotStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpHubspotDestination'
  /destinations/keboola/actions/authorization:
    get:
      tags:
        - destinations.keboola
      summary: 'List of authorization objects'
      operationId: appDestinationKeboolaKeboolaDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/keboola/actions/writeModes:
    post:
      tags:
        - destinations.keboola
      summary: 'List of write modes'
      operationId: appDestinationKeboolaKeboolaDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/keboola:
    post:
      tags:
        - destinations.keboola
      summary: 'Create destination'
      operationId: appDestinationKeboolaKeboolaDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeboolaStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeboolaDestination'
  /destinations/klaviyo/actions/authorization:
    get:
      tags:
        - destinations.klaviyo
      summary: 'List of authorization objects'
      operationId: appDestinationKlaviyoKlaviyoDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/klaviyo/actions/writeModes:
    post:
      tags:
        - destinations.klaviyo
      summary: 'List of write modes'
      operationId: appDestinationKlaviyoKlaviyoDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/klaviyo:
    post:
      tags:
        - destinations.klaviyo
      summary: 'Create destination'
      operationId: appDestinationKlaviyoKlaviyoDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KlaviyoStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlaviyoDestination'
  /destinations/klaviyo/actions/object:
    get:
      tags:
        - destinations.klaviyo
      summary: 'List of Klaviyo object types'
      operationId: appDestinationKlaviyoKlaviyoDestinationActionObject
      responses:
        '200':
          description: 'List of Klaviyo object types'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/klaviyo/actions/sourceFields:
    post:
      tags:
        - destinations.klaviyo
      summary: 'List of source fields'
      operationId: appDestinationKlaviyoKlaviyoDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/klaviyo/actions/destinationFields:
    post:
      tags:
        - destinations.klaviyo
      summary: 'List of destination fields'
      operationId: appDestinationKlaviyoKlaviyoDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/maria_db/actions/authorization:
    get:
      tags:
        - destinations.mariaDb
      summary: 'List of authorization objects'
      operationId: appDestinationMariaDbMariaDbDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/maria_db/actions/tls:
    get:
      tags:
        - destinations.mariaDb
      summary: 'List of TLS options'
      operationId: appDestinationMariaDbMariaDbDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/maria_db/actions/writeModes:
    post:
      tags:
        - destinations.mariaDb
      summary: 'List of write modes'
      operationId: appDestinationMariaDbMariaDbDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/maria_db:
    post:
      tags:
        - destinations.mariaDb
      summary: 'Create destination'
      operationId: appDestinationMariaDbMariaDbDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MariaDbDestination'
  /destinations/mongo/actions/authorization:
    get:
      tags:
        - destinations.mongo
      summary: 'List of authorization objects'
      operationId: appDestinationMongoMongoDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/mongo/actions/writeModes:
    post:
      tags:
        - destinations.mongo
      summary: 'List of write modes'
      operationId: appDestinationMongoMongoDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mongo:
    post:
      tags:
        - destinations.mongo
      summary: 'Create destination'
      operationId: appDestinationMongoMongoDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDestination'
  /destinations/mongo_atlas/actions/authorization:
    get:
      tags:
        - destinations.mongoAtlas
      summary: 'List of authorization objects'
      operationId: appDestinationMongoAtlasMongoAtlasDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/mongo_atlas/actions/writeModes:
    post:
      tags:
        - destinations.mongoAtlas
      summary: 'List of write modes'
      operationId: appDestinationMongoAtlasMongoAtlasDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mongo_atlas:
    post:
      tags:
        - destinations.mongoAtlas
      summary: 'Create destination'
      operationId: appDestinationMongoAtlasMongoAtlasDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoAtlasDestination'
  /destinations/mssql/actions/authorization:
    get:
      tags:
        - destinations.mssql
      summary: 'List of authorization objects'
      operationId: appDestinationMssqlMssqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/mssql/actions/writeModes:
    post:
      tags:
        - destinations.mssql
      summary: 'List of write modes'
      operationId: appDestinationMssqlMssqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mssql:
    post:
      tags:
        - destinations.mssql
      summary: 'Create destination'
      operationId: appDestinationMssqlMssqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MssqlDestination'
  /destinations/mysql/actions/authorization:
    get:
      tags:
        - destinations.mysql
      summary: 'List of authorization objects'
      operationId: appDestinationMysqlMysqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/mysql/actions/tls:
    get:
      tags:
        - destinations.mysql
      summary: 'List of TLS options'
      operationId: appDestinationMysqlMysqlDestinationActionTls
      responses:
        '200':
          description: 'List of TLS options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mysql/actions/writeModes:
    post:
      tags:
        - destinations.mysql
      summary: 'List of write modes'
      operationId: appDestinationMysqlMysqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/mysql:
    post:
      tags:
        - destinations.mysql
      summary: 'Create destination'
      operationId: appDestinationMysqlMysqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MysqlDestination'
  /destinations/netsuite/actions/authorization:
    get:
      tags:
        - destinations.netsuite
      summary: 'List of authorization objects'
      operationId: appDestinationNetsuiteNetsuiteDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/netsuite/actions/endpoint:
    get:
      tags:
        - destinations.netsuite
      summary: 'List of endpoints'
      operationId: appDestinationNetsuiteNetsuiteDestinationActionEndpoint
      responses:
        '200':
          description: 'List of endpoints'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/netsuite/actions/sourceFields:
    post:
      tags:
        - destinations.netsuite
      summary: 'List of source fields'
      operationId: appDestinationNetsuiteNetsuiteDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/netsuite/actions/destinationFields:
    post:
      tags:
        - destinations.netsuite
      summary: 'List of destination fields'
      operationId: appDestinationNetsuiteNetsuiteDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/netsuite/actions/writeModes:
    post:
      tags:
        - destinations.netsuite
      summary: 'List of write modes'
      operationId: appDestinationNetsuiteNetsuiteDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/netsuite:
    post:
      tags:
        - destinations.netsuite
      summary: 'Create destination'
      operationId: appDestinationNetsuiteNetsuiteDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetsuiteStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetsuiteDestination'
  /destinations/one_drive/actions/authorization:
    get:
      tags:
        - destinations.oneDrive
      summary: 'List of authorization objects'
      operationId: appDestinationOneDriveOneDriveDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/one_drive/actions/writeModes:
    post:
      tags:
        - destinations.oneDrive
      summary: 'List of write modes'
      operationId: appDestinationOneDriveOneDriveDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/one_drive/actions/filename_formats:
    get:
      tags:
        - destinations.oneDrive
      summary: 'List of filename patterns'
      operationId: appDestinationOneDriveOneDriveDestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/one_drive:
    post:
      tags:
        - destinations.oneDrive
      summary: 'Create destination'
      operationId: appDestinationOneDriveOneDriveDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneDriveStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneDriveDestination'
  /destinations/panoply/actions/authorization:
    get:
      tags:
        - destinations.panoply
      summary: 'List of authorization objects'
      operationId: appDestinationPanoplyPanoplyDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/panoply/actions/project:
    post:
      tags:
        - destinations.panoply
      summary: 'List of projects'
      operationId: appDestinationPanoplyPanoplyDestinationActionProject
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: integer
                  example: '1'
              type: object
      responses:
        '200':
          description: 'List of projects'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /destinations/panoply/actions/dataset:
    post:
      tags:
        - destinations.panoply
      summary: 'List of datasets'
      operationId: appDestinationPanoplyPanoplyDestinationActionDataset
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: integer
                  example: '1'
                projectId:
                  type: integer
                  example: '1'
              type: object
      responses:
        '200':
          description: 'List of datasets'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { _id: { type: string }, name: { type: string } }
                  type: object
  /destinations/panoply/actions/writeModes:
    post:
      tags:
        - destinations.panoply
      summary: 'List of write modes'
      operationId: appDestinationPanoplyPanoplyDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/panoply:
    post:
      tags:
        - destinations.panoply
      summary: 'Create destination'
      operationId: appDestinationPanoplyPanoplyDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PanoplyStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PanoplyDestination'
  /destinations/pgsql/actions/authorization:
    get:
      tags:
        - destinations.pgsql
      summary: 'List of authorization objects'
      operationId: appDestinationPgsqlPgsqlDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/pgsql/actions/writeModes:
    post:
      tags:
        - destinations.pgsql
      summary: 'List of write modes'
      operationId: appDestinationPgsqlPgsqlDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/pgsql/actions/ssl:
    get:
      tags:
        - destinations.pgsql
      summary: 'List of SSL options'
      operationId: appDestinationPgsqlPgsqlDestinationActionSsl
      responses:
        '200':
          description: 'List of SSL options'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/pgsql:
    post:
      tags:
        - destinations.pgsql
      summary: 'Create destination'
      operationId: appDestinationPgsqlPgsqlDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PgSQLStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PgsqlDestination'
  /destinations/pipedream/actions/authorization:
    get:
      tags:
        - destinations.pipedream
      summary: 'List of authorization objects'
      operationId: appDestinationPipedreamPipedreamDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/pipedream/actions/sourceFields:
    post:
      tags:
        - destinations.pipedream
      summary: 'List of source fields'
      operationId: appDestinationPipedreamPipedreamDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/pipedream/actions/destinationFields:
    post:
      tags:
        - destinations.pipedream
      summary: 'List of destination fields'
      operationId: appDestinationPipedreamPipedreamDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/pipedream/actions/writeModes:
    post:
      tags:
        - destinations.pipedream
      summary: 'List of write modes'
      operationId: appDestinationPipedreamPipedreamDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/pipedream:
    post:
      tags:
        - destinations.pipedream
      summary: 'Create destination'
      operationId: appDestinationPipedreamPipedreamDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipedreamStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipedreamDestination'
  /destinations/redshift/actions/authorization:
    get:
      tags:
        - destinations.redshift
      summary: 'List of authorization objects'
      operationId: appDestinationRedshiftRedshiftDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/redshift/actions/writeModes:
    post:
      tags:
        - destinations.redshift
      summary: 'List of write modes'
      operationId: appDestinationRedshiftRedshiftDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/redshift:
    post:
      tags:
        - destinations.redshift
      summary: 'Create destination'
      operationId: appDestinationRedshiftRedshiftDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedshiftStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedshiftDestination'
  /destinations/s3/actions/authorization:
    get:
      tags:
        - destinations.s3
      summary: 'List of authorization objects'
      operationId: appDestinationS3S3DestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/s3/actions/fileFormats:
    get:
      tags:
        - destinations.s3
      summary: 'List of file formats'
      operationId: appDestinationS3S3DestinationActionFileFormats
      responses:
        '200':
          description: 'List of file formats'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/s3/actions/filename_formats:
    get:
      tags:
        - destinations.s3
      summary: 'List of filename patterns'
      operationId: appDestinationS3S3DestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/s3/actions/writeModes:
    post:
      tags:
        - destinations.s3
      summary: 'List of write modes'
      operationId: appDestinationS3S3DestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/s3:
    post:
      tags:
        - destinations.s3
      summary: 'Create destination'
      operationId: appDestinationS3S3DestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsS3StorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Destination'
  /destinations/salesforce/actions/authorization:
    get:
      tags:
        - destinations.salesforce
      summary: 'List of authorization objects'
      operationId: appDestinationSalesforceSalesforceDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/salesforce/actions/writeModes:
    post:
      tags:
        - destinations.salesforce
      summary: 'List of write modes'
      operationId: appDestinationSalesforceSalesforceDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/salesforce:
    post:
      tags:
        - destinations.salesforce
      summary: 'Create destination'
      operationId: appDestinationSalesforceSalesforceDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesforceStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesforceDestination'
  /destinations/salesforce/actions/instance:
    post:
      tags:
        - destinations.salesforce
      summary: 'List of all available instances'
      description: 'It is possible to use centralized authentication server (login.salesforce.com) even if custom domain is used'
      operationId: appDestinationSalesforceSalesforceDestinationActionInstance
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of Salesforce instances'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/salesforce/actions/apiVersion:
    post:
      tags:
        - destinations.salesforce
      summary: 'List of available API versions'
      operationId: appDestinationSalesforceSalesforceDestinationActionApiVersion
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
                instance:
                  type: string
                  example: example.com
              type: object
      responses:
        '200':
          description: 'List of Salesforce API Versions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/salesforce/actions/object:
    get:
      tags:
        - destinations.salesforce
      summary: 'Gets all objects'
      operationId: appDestinationSalesforceSalesforceDestinationActionObject
      responses:
        '200':
          description: 'List of Salesforce objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/salesforce/actions/sourceFields:
    post:
      tags:
        - destinations.salesforce
      summary: 'List of source fields'
      operationId: appDestinationSalesforceSalesforceDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/salesforce/actions/destinationFields:
    post:
      tags:
        - destinations.salesforce
      summary: 'List of destination fields'
      operationId: appDestinationSalesforceSalesforceDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/sftp/actions/authorization:
    get:
      tags:
        - destinations.sftp
      summary: 'List of authorization objects'
      operationId: appDestinationSftpSftpDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/sftp/actions/fileFormats:
    get:
      tags:
        - destinations.sftp
      summary: 'List of file formats'
      operationId: appDestinationSftpSftpDestinationActionFileFormats
      responses:
        '200':
          description: 'List of file formats'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/sftp/actions/filename_formats:
    get:
      tags:
        - destinations.sftp
      summary: 'List of filename patterns'
      operationId: appDestinationSftpSftpDestinationActionFilenamePatterns
      responses:
        '200':
          description: 'List of filename patterns'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/sftp/actions/writeModes:
    post:
      tags:
        - destinations.sftp
      summary: 'List of write modes'
      operationId: appDestinationSftpSftpDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/sftp:
    post:
      tags:
        - destinations.sftp
      summary: 'Create destination'
      operationId: appDestinationSftpSftpDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SftpStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SftpDestination'
  /destinations/snowflake/actions/authorization:
    get:
      tags:
        - destinations.snowflake
      summary: 'List of authorization objects'
      operationId: appDestinationSnowflakeSnowflakeDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/snowflake/actions/writeModes:
    post:
      tags:
        - destinations.snowflake
      summary: 'List of write modes'
      operationId: appDestinationSnowflakeSnowflakeDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/snowflake/actions/schema:
    post:
      tags:
        - destinations.snowflake
      summary: 'Default schema from destination defined by destination'
      operationId: appDestinationSnowflakeSnowflakeDestinationActionSchema
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: someObjectId
              type: object
      responses:
        '200':
          description: 'Get the default schema for the destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/snowflake:
    post:
      tags:
        - destinations.snowflake
      summary: 'Create destination'
      operationId: appDestinationSnowflakeSnowflakeDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnowflakeStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnowflakeDestination'
  /destinations/vertica/actions/authorization:
    get:
      tags:
        - destinations.vertica
      summary: 'List of authorization objects'
      operationId: appDestinationVerticaVerticaDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/vertica/actions/writeModes:
    post:
      tags:
        - destinations.vertica
      summary: 'List of write modes'
      operationId: appDestinationVerticaVerticaDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/vertica:
    post:
      tags:
        - destinations.vertica
      summary: 'Create destination'
      operationId: appDestinationVerticaVerticaDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerticaStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerticaDestination'
  /destinations/http_zoho/actions/authorization:
    get:
      tags:
        - destinations.httpZoho
      summary: 'List of authorization objects'
      operationId: appDestinationZohoZohoDestinationActionAuthorization
      responses:
        '200':
          description: 'List of authorization objects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionAuthorizationResponse'
  /destinations/http_zoho/actions/modules:
    post:
      tags:
        - destinations.httpZoho
      summary: 'List of modules'
      operationId: appDestinationZohoZohoDestinationActionModules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                oAuthId:
                  type: string
                  example: '0'
              type: object
      responses:
        '200':
          description: 'List of modules'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/http_zoho/actions/sourceFields:
    post:
      tags:
        - destinations.httpZoho
      summary: 'List of source fields'
      operationId: appDestinationZohoZohoDestinationActionSourceFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowPreviewRequest'
      responses:
        '200':
          description: 'List of source fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFieldResponse'
  /destinations/http_zoho/actions/destinationFields:
    post:
      tags:
        - destinations.httpZoho
      summary: 'List of destination fields'
      operationId: appDestinationZohoZohoDestinationActionDestinationFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destinationId:
                  type: string
                  example: '0'
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of destination fields'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFieldResponse'
  /destinations/http_zoho/actions/writeModes:
    post:
      tags:
        - destinations.httpZoho
      summary: 'List of write modes'
      operationId: appDestinationZohoZohoDestinationActionWriteModes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                writeMode:
                  type: string
                  example: insert
              type: object
      responses:
        '200':
          description: 'List of write modes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValueResponse'
  /destinations/http_zoho:
    post:
      tags:
        - destinations.httpZoho
      summary: 'Create destination'
      operationId: appDestinationZohoZohoDestinationCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpZohoStorageRequest'
      responses:
        '200':
          description: 'New destination'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpZohoDestination'
components:
  schemas:
    AdtractionConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    AmazonAdsConnectorForm:
      required:
        - oAuthId
        - label
        - profileId
        - reportType
        - adProduct
        - column
        - dateRange
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            profileId:
              type: string
            adProduct:
              description: 'Amazon Ads Report Category (Ad Product)'
              type: string
            reportType:
              type: string
            groupBy:
              type: array
              items:
                type: string
              example:
                - campaign
                - adGroup
            timeUnit:
              type: string
            tactic:
              type: string
            column:
              type: array
              items:
                type: string
              example:
                - page_impressions
                - page_impressions_unique
          type: object
    AmazonAdsDataExtractorConnectorForm:
      required:
        - token
        - label
        - flow
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            flow:
              description: 'Dataddo Flow endpoint'
              type: string
            token:
              description: 'Dataddo token'
              type: string
          type: object
    BlackDiamondBatchConnectorForm:
      required:
        - oAuthId
        - label
        - object
        - metrics
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            object:
              type: string
            metrics:
              type: array
              items:
                type: string
              example:
                - page_impressions
                - page_impressions_unique
          type: object
    BlackDiamondExtractorConnectorForm:
      required:
        - token
        - label
        - flow
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            flow:
              description: 'Dataddo Flow endpoint'
              type: string
            token:
              description: 'Dataddo token'
              type: string
          type: object
    ConnectorForm:
      required:
        - connectorId
        - templateId
        - storageStrategy
      properties:
        ensureDataTypes:
          description: 'Enforcing data types'
          type: object
          example:
            field1: string
            field2: integer
            field3: date
            field4: float
        allowEmpty:
          type: boolean
          default: true
        nullableFields:
          type: boolean
          default: true
        connectorId:
          type: string
          example: json
        templateId:
          type: string
          example: index
        strategy:
          description: 'Use storageStrategy instead.'
          type: string
          example: clean
          deprecated: true
        storageStrategy:
          type: string
          example: clean
      type: object
    EverflowConnectorForm:
      required:
        - oAuthId
        - label
        - metric
        - reportType
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            reportType:
              type: string
              example: 'Aggregated Data Report'
            column:
              type: array
              items:
                type: string
              example:
                - country
                - browser
            timeColumn:
              type: string
            timezoneId:
              type: string
            currency:
              type: string
            metric:
              type: array
              items:
                type: string
              example:
                - total_click
                - ctr
          type: object
    FacebookAdsConnectorForm:
      required:
        - oAuthId
        - label
        - accountId
        - dateRange
        - timeBreakup
        - level
        - metric
        - dataLabel
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            useDataddoHash:
              description: 'Include Dataddo hash (to be used for upsert)'
              type: boolean
            accountId:
              type: string
            campaignId:
              type: string
            adSetId:
              type: string
              nullable: true
            timeBreakup:
              type: string
              default: all_days
            level:
              type: string
              example: campaign
            metric:
              type: array
              items:
                type: string
              example:
                - clicks
                - actions.like
            breakdown:
              type: array
              items:
                type: string
              example:
                - publisher_platform
            dataLabel:
              type: array
              items:
                type: string
              example:
                - campaign_id
                - campaign_name
          type: object
    FacebookGraphConnectorForm:
      required:
        - label
        - url
        - method
        - transformation
        - oAuthId
        - attributes
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            url:
              type: string
              example: 'https://www.dataddo.com'
            method:
              type: string
              example: GET
            headers:
              description: 'HTTP Headers of the request'
              type: array
              items: {  }
              example:
                Accept: application/json
            body:
              type: string
            transformation:
              type: string
            emitter:
              type: string
            ensureDataTypes:
              description: 'Enforcing data types'
              type: object
              example:
                field1: string
                field2: integer
                field3: date
                field4: float
            parameters:
              description: 'Custom parameters supplied'
              type: array
              items:
                type: string
              example:
                parameter: value
            attributes:
              description: 'Final selections of the attributes to be included in the source'
              type: array
              items:
                type: string
              example:
                - field1
                - field2
                - fields3
            cursor:
              type: string
          type: object
    FacebookLeadsConnectorForm:
      required:
        - oAuthId
        - label
        - pageId
        - formId
        - attribute
        - limit
        - dateRange
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            pageId:
              type: string
            formId:
              type: string
            attribute:
              type: array
              items:
                type: string
              example:
                - lead_id
            limit:
              type: integer
              example: 500
          type: object
    FacebookPageConnectorForm:
      required:
        - oAuthId
        - label
        - pageId
        - dateRange
        - metric
        - dataLabel
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            pageId:
              type: string
            metric:
              type: array
              items:
                type: string
              example:
                - page_impressions
                - page_impressions_unique
            dataLabel:
              type: array
              items:
                type: string
              example:
                - page_id
                - page_name
          type: object
    FacebookPostConnectorForm:
      required:
        - oAuthId
        - label
        - pageId
        - metric
        - dataLabel
        - limit
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            pageId:
              type: string
            metric:
              type: array
              items:
                type: string
              example:
                - post_impressions
                - post_impressions_unique
            dataLabel:
              type: array
              items:
                type: string
              example:
                - page_id
                - page_name
                - post_id
                - post_name
                - created_time
            limit:
              type: integer
              default: 100
          type: object
    FacebookVideoConnectorForm:
      required:
        - oAuthId
        - label
        - pageId
        - metric
        - dataLabel
        - limit
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            pageId:
              type: string
            metric:
              type: array
              items:
                type: string
              example:
                - total_video_views
                - total_video_views_unique
            dataLabel:
              type: array
              items:
                type: string
              example:
                - page_id
                - page_name
                - post_id
                - post_name
                - created_time
            limit:
              type: integer
              default: 100
          type: object
    GoogleAdsConnectorForm:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            useDataddoHash:
              description: 'Include Dataddo hash (to be used for upsert)'
              type: boolean
            googleCustomerId:
              description: 'Google Customer Id'
              type: string
              example: '0'
            customerClientId:
              description: 'Google Customer Client Id'
              type: string
              example: '0'
            attribute:
              type: array
              items:
                type: string
              example:
                - campaign.id
                - campaign.name
            segment:
              type: array
              items:
                type: string
              example:
                - date
            metric:
              type: array
              items:
                type: string
              example:
                - clicks
                - cost_micros
                - all_conversions
            reportType:
              type: string
              example: campaign
            whereFilter:
              type: string
          type: object
    GoogleAnalytics4ConnectorForm:
      required:
        - oAuthId
        - label
        - propertyId
        - metric
        - dimension
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            useDataddoHash:
              description: 'Include Dataddo hash (to be used for upsert)'
              type: boolean
            accountId:
              type: string
            propertyId:
              type: string
            subPropertyId:
              type: string
            propertyIds:
              type: array
              items:
                type: string
            metric:
              type: array
              items:
                type: string
              example:
                - newUsers
                - sessions
            dimension:
              type: array
              items:
                type: string
              example:
                - date
                - sessionSourceMedium
            limit:
              type: integer
              default: 10000
            dimensionFilter:
              type: string
              example:
                - "{\n        \"filter\": {\n            \"fieldName\": \"screenPageViews\",\n            \"numericFilter\": {\n                \"operation\": \"GREATER_THAN_OR_EQUAL\",\n                \"value\": {\n                    \"int64Value\": 200\n                }\n            }\n        }\n    }"
            metricFilter:
              type: string
              example:
                - "{\n        \"filter\": {\n            \"fieldName\": \"screenPageViews\",\n            \"numericFilter\": {\n                \"operation\": \"GREATER_THAN_OR_EQUAL\",\n                \"value\": {\n                    \"int64Value\": 200\n                }\n            }\n        }\n    }"
          type: object
    GoogleAnalyticsConnectorForm:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            useDataddoHash:
              description: 'Include Dataddo hash (to be used for upsert)'
              type: boolean
            viewId:
              type: string
            dataLabel:
              type: array
              items:
                type: string
              example:
                - accountId
                - profileId
            metric:
              type: array
              items:
                type: string
              example:
                - 'ga:pageviews'
                - 'ga:sessions'
            dimension:
              type: array
              items:
                type: string
              example:
                - 'ga:source'
                - 'ga:medium'
            limit:
              type: integer
              default: 1
            filter:
              type: string
              example: 'ga:medium%3D%3Dreferral'
            sort:
              type: array
              items:
                type: string
              example:
                - 'ga:pageviews'
          type: object
    GoogleCampaignManagerConnectorForm:
      required:
        - reportType
        - metrics
        - dimensions
        - limit
        - oAuthId
        - type
        - profileId
        - dateRangeExpression
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            profileId:
              type: string
            reportType:
              type: string
            dateRangeExpression:
              type: string
              example: '{{1d1}}'
          type: object
    GorgiasConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    HubspotConnectorForm:
      required:
        - oAuthId
        - label
        - object
        - property
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            url:
              type: string
              example: 'https://www.dataddo.com'
            method:
              type: string
              example: GET
            headers:
              description: 'HTTP Headers of the request'
              type: array
              items: {  }
              example:
                Accept: application/json
            body:
              type: string
            transformation:
              type: string
            emitter:
              type: string
            ensureDataTypes:
              description: 'Enforcing data types'
              type: object
              example:
                field1: string
                field2: integer
                field3: date
                field4: float
            parameters:
              description: 'Custom parameters supplied'
              type: array
              items:
                type: string
              example:
                parameter: value
            attributes:
              description: 'Final selections of the attributes to be included in the source'
              type: array
              items:
                type: string
              example:
                - field1
                - field2
                - fields3
            object:
              type: string
              example: Contacts
            property:
              type: array
              items:
                type: string
              example:
                - 'Created by User ID'
                - 'First Conversion Date'
          type: object
    InstagramMediaConnectorForm:
      required:
        - label
        - oAuthId
        - accountId
        - attribute
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            accountId:
              type: string
              example: '123456'
            attribute:
              type: array
              items:
                type: string
              example:
                - media_id
                - likes_count
                - impressions
          type: object
    InstagramUserConnectorForm:
      required:
        - label
        - oAuthId
        - accountId
        - attribute
        - dateRange
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            accountId:
              type: string
              example: '123456'
            attribute:
              type: array
              items:
                type: string
              example:
                - date
                - followers_count
                - impressions
          type: object
    MailchimpConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    PinterestConnectorForm:
      required:
        - 'oAuthId, label, adAccountIds, column, reportLevel, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, dataLabel'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            reportLevel:
              type: string
              example: Account
            adAccountIds:
              type: array
              items:
                type: integer
            column:
              type: array
              items:
                type: string
              example:
                - 'Total Conversions'
                - CTR
            dataLabel:
              type: array
              items:
                type: string
              example:
                - 'Ad Account ID'
                - 'Campaign Name'
            engagementWindowDays:
              type: string
              example: '1'
            viewWindowDays:
              type: string
              example: '1'
            conversionReportTime:
              type: string
              example: TIME_OF_AD_ACTION
            granularity:
              type: string
              example: DAY
            clickWindowDays:
              type: string
              example: '60'
          type: object
    SalesforceConnectorForm:
      required:
        - oAuthId
        - label
        - instance
        - object
        - apiVersion
        - attribute
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            instance:
              type: string
              example: example.my.salesforce.com
            object:
              type: string
              example: Account
            apiVersion:
              type: string
              example: '31.0'
            filter:
              type: string
              example: 'CreatedDate = YESTERDAY'
            attribute:
              description: 'List of selected fields'
              type: array
              items:
                type: string
              example:
                - Id
                - LastName
          type: object
    SimilarwebConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    SnapchatConnectorForm:
      required:
        - oAuthId
        - metrics
        - labels
        - organizationId
        - accountId
        - breakdown
        - action_report_time
        - swipe_up_attribution_window
        - view_attribution_window
        - label
        - dateRange
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            organizationId:
              description: 'Snapchat Organization identifier'
              type: string
              example: '12345'
            accountId:
              description: 'Snapchat Ad Account identifier'
              type: string
              example: '12345'
            metrics:
              type: array
              items:
                type: string
              example:
                - Impressions
                - Spend
            labels:
              type: array
              items:
                type: string
              example:
                - 'Stats ID'
                - 'Report ID'
            breakdown:
              type: string
              example: campaign
            action_report_time:
              type: string
              example: conversion
            swipe_up_attribution_window:
              type: string
              example: 1_DAY
            view_attribution_window:
              type: string
              example: 1_DAY
          type: object
    SnapchatLookupConnectorForm:
      required:
        - label
        - oAuthId
        - accountId
        - organizationId
        - level
        - attribute
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            organizationId:
              type: string
              example: abc123
            accountId:
              type: string
              example: abc123
            level:
              type: string
              example: CAMPAIGN
            attribute:
              description: 'Snapchat attributes'
              type: array
              items:
                type: string
              example:
                - ad_id
                - ad_name
          type: object
    TemplateConnectorForm:
      required:
        - label
        - url
        - method
        - transformation
        - oAuthId
        - attributes
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            url:
              type: string
              example: 'https://www.dataddo.com'
            method:
              type: string
              example: GET
            headers:
              description: 'HTTP Headers of the request'
              type: array
              items: {  }
              example:
                Accept: application/json
            body:
              type: string
            transformation:
              type: string
            emitter:
              type: string
            parameters:
              description: 'Custom parameters supplied'
              type: array
              items:
                type: string
              example:
                parameter: value
            attributes:
              description: 'Final selections of the attributes to be included in the source'
              type: array
              items:
                type: string
              example:
                - field1
                - field2
                - fields3
          type: object
    TikTokConnectorForm:
      required:
        - oAuthId
        - label
        - advertiserId
        - dateRange
        - reportType
        - dataLevel
        - metric
        - dataLabel
        - idDimension
        - timeDimension
        - audienceDimension
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            ensureDataTypes:
              description: 'Enforcing data types'
              type: object
              example:
                field1: string
                field2: integer
                field3: date
                field4: float
            advertiserId:
              description: 'TikTok advertiser ID'
              type: string
              example: '0'
            metric:
              type: array
              items:
                type: string
              example:
                - Impressions
                - Spend
            dataLabel:
              description: 'Data labels to be included in the result'
              type: array
              items:
                type: string
              example:
                - 'Time Dimension'
                - 'Advertiser ID'
            idDimension:
              description: 'ID dimension to be included in the result'
              type: string
              example: ad_id
            timeDimension:
              description: 'Time dimension to be included in the result'
              type: string
              example: stat_time_day
            audienceDimension:
              description: 'Audience dimension to be included in the result'
              type: string
              example: gender
            reportType:
              type: string
              example: BASIC
            dataLevel:
              type: string
              example: AUCTION_AD
          type: object
    TwitterAdsConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    YoutubeAnalyticsConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    YoutubeVideoConnectorForm:
      required:
        - oAuthId
        - label
        - attribute
        - channelId
        - playlistId
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ConnectorForm'
        -
          properties:
            label:
              description: 'Label of the source'
              type: string
              example: 'My Source Label'
            oAuthId:
              type: string
              example: '1234'
              nullable: true
            dateRange:
              description: 'Data range expression'
              type: string
              example: '{{1d1}}'
            channelId:
              description: 'Your channel id'
              type: string
            playlistId:
              description: 'Your playlist id'
              type: string
            attribute:
              description: 'YT attributes'
              type: array
              items:
                type: string
              example:
                - VideoID
                - ChannelID
                - CommentCount
          type: object
    ZendeskConnectorForm:
      allOf:
        -
          $ref: '#/components/schemas/TemplateConnectorForm'
    Action:
      properties:
        id:
          description: 'Primary key of document. The value is null when document is not persisted.'
          type: string
        status:
          type: string
        status_detail:
          type: string
        duration:
          description: Duration
          type: string
          nullable: true
        object_id:
          description: 'Object ID'
          nullable: true
        object_type:
          description: 'Object type'
          type: string
        type:
          description: 'Action type'
          type: string
        customer_id:
          description: 'Customer ID'
          type: string
        last_execution:
          description: 'Last execution timestamp'
          type: integer
          nullable: true
        next_execution:
          description: "Next execution timestamp.\nMakes sense only for actions with schedule, otherwise it is null.\nIt is computed and updated based on the schedule change or when action is executed."
          type: integer
          nullable: true
        error_count:
          description: 'Error iteration count'
          type: integer
        is_being_processed:
          description: 'Is the action currently being processed?'
          type: boolean
        on_error_retry_timeout:
          description: "After how many seconds the action should be retried if it is failed.\nDefault is 0 meaning run retry on next Dispatcher's tick.\n\nExample: set to 60*60*2 to retry action not earlier than 2hrs after failure"
          type: integer
        schedule:
          description: 'Action Schedule settings'
      type: object
    ExtractionAction:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Action'
        -
          properties:
            storage:
              description: 'Use storageStrategy instead.'
              type: string
              deprecated: true
            storage_strategy:
              type: string
            type: {  }
          type: object
    WriteAction:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Action'
        -
          properties:
            write_mode:
              type: string
            stream:
              type: boolean
            skipBulk:
              type: boolean
            unique_columns:
              type: array
              items: {  }
            setup_instructions:
              type: string
          type: object
    Api:
      properties:
        id:
          description: 'Primary key of document. The value is null when document is not persisted.'
          type: string
        customer_id:
          description: 'Customer identifier'
          type: string
        app:
          description: 'Dashboard app type'
          type: string
          nullable: true
        last:
          description: 'Last execution'
          nullable: true
      type: object
    Flow:
      description: 'Class Flow'
      properties:
        id:
          description: 'Primary key of document. The value is null when document is not persisted.'
          type: string
        label:
          description: Label
        user_id:
          description: 'User customerId instead.'
          deprecated: true
        customer_id:
          description: Customer
        source:
          description: 'The list of sources that are involved in the flow'
          type: array
          items:
            $ref: '#/components/schemas/FlowSource'
        tag:
          type: array
          items:
            type: string
        operation:
          description: 'The list of operations to be run in DPI on the data'
          type: array
          items:
            $ref: '#/components/schemas/FlowOperation'
        rules:
          description: 'The list of data quality rules'
          type: array
          items:
            $ref: '#/components/schemas/FlowDataQualityRule'
        api:
          oneOf:
            -
              $ref: '#/components/schemas/Api'
          nullable: true
          description: 'Attached API object'
        write_action:
          oneOf:
            -
              $ref: '#/components/schemas/WriteAction'
          nullable: true
          description: 'Attached Action object'
      type: object
    FlowDataQualityRule:
      properties:
        columnId:
          type: string
        rule:
          type: string
        action:
          type: string
      type: object
    FlowOperation:
      properties:
        name:
          description: 'The operation name (left_join, right_join, sort, ...)'
          type: string
        output:
          description: 'Name of the output. By this name it may be used in following operation as a source.'
          type: string
        union:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationUnion'
          nullable: true
        left_join:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationLeftJoin'
          nullable: true
        inner_join:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationInnerJoin'
          nullable: true
        view:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationView'
          nullable: true
        filter:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationFilter'
          nullable: true
        limit:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationLimit'
          nullable: true
        format:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationFormat'
          nullable: true
        sort:
          oneOf:
            -
              $ref: '#/components/schemas/FlowOperationSort'
          nullable: true
      type: object
    FlowOperationColumn:
      properties:
        source:
          type: string
        column:
          type: string
        as:
          type: string
      type: object
    FlowOperationFilter:
      properties:
        source:
          description: 'Source ID'
          type: string
        filters:
          description: 'List of filters to be applied'
          type: array
          items:
            $ref: '#/components/schemas/FlowOperationFilterRule'
      type: object
    FlowOperationFilterRule:
      properties:
        column:
          description: 'Column ID'
          type: string
        comparator:
          description: 'Comparator string (eg: ==, !=, >, <. >=, <=, in)'
          type: string
        value:
          description: 'Value to compare with'
          type: string
      type: object
    FlowOperationFormat:
      properties:
        source:
          description: 'Source ID'
          type: string
        formats:
          description: 'List of formatters to be applied'
          type: array
          items:
            $ref: '#/components/schemas/FlowOperationFormatRules'
      type: object
    FlowOperationFormatRules:
      properties:
        column:
          description: 'Column ID'
          type: string
        column_wildcard:
          description: 'If used will be used instead of column (eg. *, all_dates)'
          type: string
        function:
          description: 'Formatting function to be used (eg: timestamp_to_string)'
          type: string
        format:
          description: 'Style format to which the real value will be formatted to'
          type: string
      type: object
    FlowOperationInnerJoin:
      allOf:
        -
          $ref: '#/components/schemas/FlowOperationJoin'
    FlowOperationJoin:
      properties:
        source:
          description: 'First Source ID'
          type: string
        target:
          description: 'Second Source ID'
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/FlowOperationJoinCondition'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/FlowOperationColumn'
      type: object
    FlowOperationJoinCondition:
      properties:
        source_column:
          type: string
        target_column:
          type: string
      type: object
    FlowOperationLeftJoin:
      allOf:
        -
          $ref: '#/components/schemas/FlowOperationJoin'
    FlowOperationLimit:
      properties:
        source:
          description: 'Source ID'
          type: string
        index:
          description: 'Offset identifier'
          type: integer
        length:
          type: integer
      type: object
    FlowOperationSort:
      properties:
        source:
          description: 'Source ID'
          type: string
        rules:
          description: 'List of filters to be applied'
          type: array
          items:
            $ref: '#/components/schemas/FlowOperationSortRules'
      type: object
    FlowOperationSortRules:
      properties:
        column:
          description: 'Column ID'
          type: string
        direction:
          description: 'Direction (eg. Asc, Desc)'
          type: string
      type: object
    FlowOperationUnion:
      properties:
        source:
          description: 'Source #1 ID'
          type: string
        target:
          description: 'Source #2 ID'
          type: string
      type: object
    FlowOperationView:
      properties:
        source:
          description: 'Source ID'
          type: string
        strategy:
          description: 'Strategy name (eg. keep/discard)'
          type: string
        columns:
          description: 'Column IDs'
          type: array
          items:
            type: string
      type: object
    FlowSource:
      description: 'Class FlowSource'
      properties:
        source_id:
          description: 'Source identifier'
      type: object
    Schedule:
      properties:
        timezone:
          description: 'Timezone cron identifier'
          type: string
        minute:
          description: 'Minute cron identifier'
        hour:
          description: 'Hour cron identifier'
        day_of_month:
          description: 'Day of month cron identifier'
        month:
          description: 'Month cron identifier'
        day_of_week:
          description: 'Day of week cron identifier'
        sync_frequency:
          description: 'Sync frequency (day/week/month/custom)'
      type: object
    Source:
      description: 'Class Source'
      properties:
        id:
          description: 'Primary key of document. The value is null when document is not persisted.'
          type: string
        label:
          description: Label
          type: string
        description:
          description: Description
          type: string
        type:
          description: 'Source type'
          type: string
        customer_id:
          description: 'Source owner'
          type: string
        created:
          description: 'Source creation date'
          type: integer
          nullable: true
      type: object
    ActionEnqueuedDto:
      properties:
        executionId:
          type: string
        actionId:
          type: string
        startedAt:
          type: string
          format: date-time
        actionType: {  }
        connector:
          type: string
      type: object
    AuthMFARequest:
      properties:
        session:
          type: string
        email:
          type: string
        code:
          type: string
      type: object
    AuthRequest:
      properties:
        password:
          type: string
        email:
          type: string
      type: object
    ConnectorRequestDto:
      properties:
        method:
          type: string
        url:
          type: string
        headers:
          description: ''
          type: array
          items:
            type: string
        transformation:
          type: string
        body:
          type: string
        ensureDataTypes:
          description: ''
          type: array
          items:
            type: string
        emitter:
          type: string
          nullable: true
        emitOnly:
          type: boolean
        format:
          type: string
        timeout:
          type: integer
        sleepTimeMillisecond:
          type: integer
        oAuthId:
          type: integer
          nullable: true
      type: object
    HttpConnectorDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        request:
          description: ''
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ConnectorRequestDto'
      type: object
    CreateCertificateRequest:
      properties:
        label:
          type: string
        type:
          type: string
        fileContent:
          type: string
        fileName:
          type: string
      type: object
    CreateMemberRequest:
      properties:
        email:
          type: string
      type: object
    FlowPreviewRequest:
      properties:
        sources:
          description: 'List of sources to be used'
          type: array
          items:
            type: string
          nullable: true
        operations:
          description: 'List of DPI operations to be applied to sources defined above'
          type: array
          items:
            $ref: '#/components/schemas/OperationRequest'
      type: object
    FilterRequest:
      properties:
        source:
          type: string
        rules:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/FilterRuleRequest'
      type: object
    FilterRuleRequest:
      properties:
        column:
          type: string
        comparator:
          type: string
        value:
          type: string
      type: object
    FormatRequest:
      properties:
        source:
          type: string
        rules:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/FormatRuleRequest'
      type: object
    FormatRuleRequest:
      properties:
        column:
          type: string
        column_wildcard:
          type: string
        function:
          type: string
        format:
          type: string
      type: object
    InnerJoinRequest:
      allOf:
        -
          $ref: '#/components/schemas/JoinRequest'
    JoinColumnRequest:
      properties:
        source:
          type: string
        column:
          type: string
        as:
          type: string
      type: object
    JoinConditionRequest:
      properties:
        source_column:
          type: string
        target_column:
          type: string
      type: object
    JoinRequest:
      properties:
        source:
          type: string
        target:
          type: string
        conditions:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/JoinConditionRequest'
        columns:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/JoinColumnRequest'
      type: object
    LeftJoinRequest:
      allOf:
        -
          $ref: '#/components/schemas/JoinRequest'
    LimitRequest:
      properties:
        source:
          type: string
        index:
          type: integer
        length:
          type: integer
      type: object
    OperationRequest:
      properties:
        name:
          type: string
        output:
          type: string
        union:
          oneOf:
            -
              $ref: '#/components/schemas/UnionRequest'
          nullable: true
        left_join:
          oneOf:
            -
              $ref: '#/components/schemas/LeftJoinRequest'
          nullable: true
        inner_join:
          oneOf:
            -
              $ref: '#/components/schemas/InnerJoinRequest'
          nullable: true
        view:
          oneOf:
            -
              $ref: '#/components/schemas/ViewRequest'
          nullable: true
        limit:
          oneOf:
            -
              $ref: '#/components/schemas/LimitRequest'
          nullable: true
        sort:
          oneOf:
            -
              $ref: '#/components/schemas/SortRequest'
          nullable: true
        filter:
          oneOf:
            -
              $ref: '#/components/schemas/FilterRequest'
          nullable: true
        format:
          oneOf:
            -
              $ref: '#/components/schemas/FormatRequest'
          nullable: true
      type: object
    SortRequest:
      properties:
        source:
          type: string
        rules:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/SortRuleRequest'
      type: object
    SortRuleRequest:
      properties:
        column:
          type: string
        direction:
          type: string
      type: object
    UnionRequest:
      properties:
        source:
          type: string
        target:
          type: string
      type: object
    ViewRequest:
      properties:
        source:
          type: string
        strategy:
          type: string
        columns:
          description: ''
          type: array
          items:
            type: string
      type: object
    WriteActionSettingsRequest:
      properties:
        write_mode:
          type: string
        unique_columns:
          description: ''
          type: array
          items:
            type: string
      type: object
    CreateServiceRequest:
      properties:
        service:
          type: string
          deprecated: true
        serviceName:
          type: string
        data:
          description: ''
          type: object
          example: '{"domain": "your-domain"}'
          deprecated: true
        config:
          description: ''
          type: object
          example: '{"domain": "your-domain"}'
      type: object
    OAuthProcessCallbackRequest:
      properties:
        callbackUrl:
          type: string
      type: object
    OAuthURLRequest:
      properties:
        state:
          type: string
          deprecated: true
        serviceId:
          type: string
        config:
          description: ''
          properties: {  }
          type: object
          example: '{"domain": "your-domain"}'
        redirectUri:
          type: string
      type: object
    OAuthRequestUrlResponse:
      properties:
        url:
          type: string
      type: object
    RunExtractionRequest:
      properties:
        url:
          type: string
          nullable: true
        limit:
          type: string
          nullable: true
        dateFrom:
          description: 'A "Y-m-d" formatted value'
          type: string
          nullable: true
        dateTo:
          description: 'A "Y-m-d" formatted value'
          type: string
          nullable: true
        dateRangeExpression:
          description: 'A "{{1d1}}" formatted value'
          type: string
          nullable: true
        storageStrategy:
          type: string
          nullable: true
      type: object
    RunWriteActionRequest:
      properties:
        skipRulesValidation:
          type: boolean
      type: object
    SourceColumnDTO:
      properties:
        column_id:
          type: string
        label:
          type: string
        hash:
          type: string
        size:
          type: integer
        type:
          type: string
      type: object
    SourceDTO:
      properties:
        source:
          $ref: '#/components/schemas/Source'
        storage:
          $ref: '#/components/schemas/StorageSourceMeta'
        engine:
          $ref: '#/components/schemas/SourceEngineDTO'
        column:
          type: array
          items:
            $ref: '#/components/schemas/SourceColumnDTO'
        id:
          type: string
        customer_id:
          type: string
        label:
          type: string
        description:
          type: string
        type:
          type: string
        created:
          description: Timestamp
          type: integer
        template_id:
          type: string
        connector_id:
          type: string
      type: object
    SourceEngineDTO:
      properties:
        name:
          type: string
        region:
          type: string
        encryptionKey:
          type: string
      type: object
    SourceMetadataDTO:
      properties:
        lastBinLogFile:
          type: string
        lastPosition:
          type: integer
        lastProcessedTimestamp:
          type: integer
      type: object
    AwsS3StorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            path:
              type: string
              nullable: true
          type: object
    AzureBlobStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            path:
              type: string
              nullable: true
          type: object
    AzureSQLStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    AzureSynapseStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    ClickhouseStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    CockroachDBStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    DataboxStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    DatabricksStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    ExactOnlineStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            endpoint:
              type: string
          type: object
    FireboltStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    FtpStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            path:
              type: string
          type: object
    GoogleBigQueryStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            projectId:
              type: string
            datasetId:
              type: string
          type: object
    GoogleCloudStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            bucket:
              type: string
            path:
              type: string
              nullable: true
          type: object
    GoogleSheetsStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    HttpHubspotStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            apiObject:
              type: string
            apiObjectCustomName:
              type: string
          type: object
    HttpStorageRequest:
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
    HttpZohoStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            module:
              type: string
          type: object
    KeboolaStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    KlaviyoStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            object:
              type: string
          type: object
    MSSQLStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    MongoStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    MySQLStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    NetsuiteStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            endpoint:
              type: string
          type: object
    OneDriveStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            path:
              type: string
              nullable: true
            driveId:
              type: string
              nullable: true
            tenant:
              type: string
              nullable: true
          type: object
    PanoplyStorageRequest:
      allOf:
        -
          $ref: '#/components/schemas/GoogleBigQueryStorageRequest'
    PgSQLStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    PipedreamStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    RedshiftStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    SalesforceStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpStorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
            instance:
              type: string
            apiVersion:
              type: string
            object:
              type: string
          type: object
    SftpStorageRequest:
      allOf:
        -
          $ref: '#/components/schemas/FtpStorageRequest'
    SnowflakeStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    StorageRequest:
      properties:
        label:
          type: string
        type:
          type: string
          deprecated: true
      type: object
    VerticaStorageRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/StorageRequest'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    CreateTokenRequest:
      properties:
        name:
          type: string
      type: object
    UpdateScheduleRequest:
      properties:
        sync_frequency:
          type: string
        timezone:
          description: 'Timezone schedule definition'
          type: string
          example: America/Sao_Paulo
        minute:
          description: 'Hour schedule definition'
          type: string
          nullable: true
        hour:
          description: 'Hour schedule definition'
          type: string
          nullable: true
        dayOfMonth:
          description: 'Day of month schedule definition'
          type: string
          nullable: true
        month:
          description: 'Month schedule definition'
          type: string
          nullable: true
        dayOfWeek:
          description: 'Day of week schedule definition'
          type: string
          nullable: true
      type: object
    AlloyDbDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    AmazonAdsCustomDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/RegionTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    AmazonSellingPartnerCustomDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/RegionTrait'
        -
          $ref: '#/components/schemas/StoreNameTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    SourceFieldResponse:
      type: array
      items:
        properties:
          label:
            type: string
          value:
            type: string
          type:
            type: string
        type: object
    AwsAuroraDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AwsAuroraTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    AwsAuroraTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
      type: object
    AwsAuroraPgsqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    AwsMariadbDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AwsMariadbTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    AwsMariadbTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
      type: object
    AwsMssqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          properties:
            label:
              type: string
          type: object
    AwsMysqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AwsMysqlTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    AwsMysqlTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
      type: object
    AwsPgsqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    CoreWebVitalsDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
          type: object
    DatabricksDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DatabricksTrait'
        -
          properties:
            label:
              type: string
            dsn:
              type: string
          type: object
    DatabricksTrait:
      properties:
        catalog:
          type: string
        database:
          type: string
      type: object
    FacebookCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    FacebookPagesAccessTokenDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
          type: object
    FacebookStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
          type: object
    FtpAdditionalSettingTrait:
      properties:
        disableExplicitTLS:
          type: boolean
        dialTimeout:
          type: integer
        shutTimeout:
          type: integer
        disableEPSV:
          type: boolean
        disableUTF8:
          type: boolean
        disableMLSD:
          type: boolean
        MDTMWrite:
          type: boolean
      type: object
    FtpDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FtpTrait'
        -
          $ref: '#/components/schemas/FtpAdditionalSettingTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    FtpTrait:
      properties:
        host:
          type: string
        username:
          type: string
        port:
          type: integer
        timeout:
          type: integer
      type: object
    GoogleAdsStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            developerToken:
              type: string
            clientCustomerId:
              type: string
          type: object
    GoogleAnalytics4CustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleAnalytics4StaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleAnalyticsCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleAnalyticsStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleBigQueryCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleBigQueryStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleDisplayVideoCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleMssqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    GoogleMyBusinessStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleMysqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/GoogleMysqlTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    GoogleMysqlTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
      type: object
    GooglePgsqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    GooglePlayCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleSearchConsoleCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleSearchConsoleStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentClientIdSecretTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
          type: object
    GoogleSheetsCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    GoogleSheetsStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    HubspotCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    LinkedinCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    LinkedinStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    MariadbDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/MariadbTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    MariadbTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
      type: object
    MicrosoftAdsCustomDtoAuthorizer:
      properties:
        label:
          type: string
        tenantId:
          type: string
        developerToken:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    MicrosoftAdsStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            developerToken:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            tenant:
              type: string
          type: object
    MicrosoftSharePointDtoAuthorizer:
      properties:
        tenant:
          type: string
      type: object
    MongoDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/MongoTraitAuthorizer'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          properties:
            label:
              type: string
          type: object
    MongoTraitAuthorizer:
      properties:
        dsn:
          type: string
        database:
          type: string
      type: object
    MssqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    MysqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/MysqlTrait'
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    MysqlTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        database:
          type: string
        sshConfig:
          oneOf:
            -
              $ref: '#/components/schemas/DocumentSshConfigTrait'
          nullable: true
        ssl:
          type: string
          nullable: true
        tls:
          type: string
        extraParams:
          description: string>
          type: object
          additionalProperties:
            type: string
      type: object
    PasswordRequiredTrait:
      properties:
        password:
          type: string
      type: object
    PgsqlDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    PinterestStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    QuickbooksCustomDtoAuthorizer:
      properties:
        label:
          type: string
        tenant:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    QuickbooksStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            tenant:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    RedshiftDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    S3DtoAuthorizer:
      properties:
        label:
          type: string
      type: object
    SftpDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SftpTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
            certificatePassword:
              type: string
              nullable: true
          type: object
    SftpTrait:
      properties:
        host:
          type: string
        username:
          type: string
        port:
          type: integer
        timeout:
          type: integer
        certificateId:
          type: string
          nullable: true
      type: object
    ShoptetDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
          type: object
    SnapchatCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    SnapchatStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    SshTrait:
      properties:
        useSSH:
          type: boolean
        certificateId:
          type: string
          nullable: true
        sshHost:
          type: string
          nullable: true
        sshPort:
          type: integer
          nullable: true
        sshRemoteHost:
          type: string
          nullable: true
        sshRemotePort:
          type: integer
          nullable: true
        sshUsername:
          type: string
          nullable: true
        sshPassword:
          type: string
          nullable: true
      type: object
    TikTokBusinessAccountCustomDtoAuthorizer:
      properties:
        label:
          type: string
        businessId:
          type: string
      type: object
    TikTokCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    TikTokStaticDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            label:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    TrinoDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/TrinoTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    TrinoTrait:
      properties:
        host:
          type: string
        port:
          type: integer
        user:
          type: string
        schema:
          type: string
        catalog:
          type: string
      type: object
    TwitterCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    VerticaDtoAuthorizer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SshTrait'
        -
          $ref: '#/components/schemas/PasswordRequiredTrait'
        -
          properties:
            label:
              type: string
          type: object
    YoutubeAnalyticsCustomDtoAuthorizer:
      properties:
        label:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        redirectUri:
          type: string
      type: object
    AmazonDspDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        dateRange:
          type: string
          example: 1d1
        profileId:
          type: array
          items: {  }
        metrics:
          type: array
          items: {  }
        dimensions:
          type: array
          items: {  }
        reportType:
          type: string
        timeUnit:
          type: string
        accountId:
          type: string
      type: object
    ActionAuthorizationResponse:
      type: array
      items:
        properties:
          id:
            type: integer
          service:
            type: string
          email:
            type: string
        type: object
    LabelValueResponse:
      type: array
      items:
        properties:
          label:
            type: string
          value:
            type: string
        type: object
    CoreWebVitalsDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    DatabricksDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
      type: object
    GoogleBigQueryDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            projectId:
              type: integer
            datasetId:
              type: string
            tableId:
              type: string
            statement:
              type: string
            sessionRead:
              type: boolean
            columns:
              type: array
              items: {  }
            rowRestriction:
              type: string
          type: object
    IntercomDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            dateRange:
              type: string
              example: 1d1
          type: object
    IntercomExportDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            file:
              description: ''
              type: string
            dateRange:
              type: string
              example: 1d1
          type: object
    KlaviyoV3Dto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            dateRange:
              type: string
              example: 1d1
            campaignType:
              type: string
              example: email
          type: object
    MssqlDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
      type: object
    MysqlDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
        defaultInt:
          type: integer
        defaultFloat:
          type: integer
        defaultString:
          type: string
        defaultDate:
          type: string
      type: object
    MysqlBinlogDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        table:
          type: string
        logStartTime:
          type: string
        statement:
          type: string
        defaultInt:
          type: integer
        defaultFloat:
          type: integer
        defaultString:
          type: string
        defaultDate:
          type: string
      type: object
    NetsuiteDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        attributes:
          type: array
          items: {  }
        object:
          type: string
        where:
          type: string
        groupBy:
          type: string
        orderBy:
          type: string
        limit:
          type: integer
        query:
          type: string
        dateRange:
          type: string
          example: 1d1
      type: object
    NmbrsDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            company:
              type: string
            dataset:
              type: string
            dateRange:
              type: string
              example: 1d1
          type: object
    PgsqlDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
      type: object
    PgsqlWalDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        table:
          type: string
        statement:
          type: string
      type: object
    RedshiftDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
        storageId:
          type: string
      type: object
    SageIntacctDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            dateRange:
              type: string
              example: 1d1
          type: object
    ShopifyDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/HttpConnectorDto'
        -
          properties:
            o_auth_id:
              type: integer
            shop:
              type: string
            attributes:
              type: array
              items: {  }
          type: object
    SnowflakeDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
      type: object
    TrinoDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        statement:
          type: string
      type: object
    ZemantaDto:
      properties:
        connector_id:
          type: string
        template_id:
          type: string
        label:
          type: string
        storage_strategy:
          type: string
          default: incremental
        allow_empty:
          type: boolean
          default: false
        o_auth_id:
          type: integer
        dateRange:
          type: string
          example: 1d1
        metrics:
          type: array
          items: {  }
        entities:
          type: array
          items: {  }
        options:
          type: array
          items: {  }
        filters:
          type: string
        account:
          type: string
      type: object
    ServiceListResponse:
      properties:
        id:
          type: integer
        service:
          type: string
        label:
          type: string
        last_action:
          type: integer
        status:
          type: boolean
        status_detail:
          type: string
        customer_id:
          type: string
        service_type:
          type: string
      type: object
    DestinationFieldResponse:
      type: array
      items:
        properties:
          label:
            type: string
          value:
            type: string
          type:
            type: string
          unique:
            type: boolean
          required:
            type: boolean
        type: object
    Certificate:
      properties:
        id:
          type: string
          nullable: true
        customer_id:
          type: string
        created_at:
          type: integer
          nullable: true
        updated_at:
          type: integer
          nullable: true
        label:
          type: string
        extension:
          type: string
      type: object
    DiscriminatorTypeFieldTrait: {  }
    DocumentIdAutoIncTrait:
      properties:
        id:
          type: integer
          nullable: true
      type: object
    PathTrait:
      properties:
        path:
          type: string
          nullable: true
      type: object
    Destination:
      properties:
        id:
          type: string
          nullable: true
        customer_id:
          type: string
        created_at:
          type: integer
          nullable: true
        updated_at:
          type: integer
          nullable: true
        lastUse:
          type: string
          format: date-time
          nullable: true
        label:
          type: string
        description:
          type: string
        status:
          type: boolean
        statusDetail:
          type: string
      type: object
    AlloyDbDestination:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlDestination'
    AwsAuroraDestination:
      allOf:
        -
          $ref: '#/components/schemas/MysqlDestination'
    AwsAuroraPgsqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlDestination'
    AwsMariaDestination:
      allOf:
        -
          $ref: '#/components/schemas/MysqlDestination'
    AwsMysqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/MysqlDestination'
    AwsPgsqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlDestination'
    AwsSqlServerDestination:
      allOf:
        -
          $ref: '#/components/schemas/MssqlDestination'
    AzureBlobStorageDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    AzureSqlDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    AzureSynapseDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    ClickhouseDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    CockroachDBDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    DataboxDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    DatabricksDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    ExactOnlineDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            division_id:
              type: string
              nullable: true
            endpoint:
              type: string
          type: object
    FireboltDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    FtpDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    GoogleBigQueryDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            project_id:
              type: string
            dataset_id:
              type: string
          type: object
    GoogleCloudStorageDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
            bucket:
              type: string
          type: object
    GoogleMssqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/MssqlDestination'
    GoogleMysqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/MysqlDestination'
    GooglePgsqlDestination:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlDestination'
    GoogleSheetsDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    HttpHubspotDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            apiObject:
              type: string
            apiObjectCustomName:
              type: string
          type: object
    HttpZohoDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            module:
              type: string
          type: object
    KeboolaDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    KlaviyoDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            instance:
              type: string
            object:
              type: string
            objectId:
              type: string
          type: object
    MariaDbDestination:
      allOf:
        -
          $ref: '#/components/schemas/MysqlDestination'
    MongoDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    MongoAtlasDestination:
      allOf:
        -
          $ref: '#/components/schemas/MongoDestination'
    MssqlDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    MysqlDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    NetsuiteDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            endpoint:
              type: string
          type: object
    OneDriveDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
            drive_id:
              type: string
              nullable: true
            tenant:
              type: string
              nullable: true
          type: object
    PanoplyDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            project_id:
              type: string
            dataset_id:
              type: string
          type: object
    PgsqlDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    PipedreamDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    RedshiftDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    S3Destination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    SalesforceDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
            instance:
              type: string
            api_version:
              type: string
            object:
              type: string
          type: object
    SftpDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/PathTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    SnowflakeDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    VerticaDestination:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Destination'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            o_auth_id:
              type: integer
          type: object
    UserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DocumentIdAutoIncTrait'
        -
          properties:
            customer_id:
              type: string
            created_at:
              type: integer
              nullable: true
            updated_at:
              type: integer
              nullable: true
            label:
              type: string
            objectId:
              type: string
            status:
              type: boolean
            status_detail:
              type: string
            service_type:
              type: string
            last_use:
              type: string
              format: date-time
              nullable: true
            identifier:
              type: string
            hash:
              type: string
          type: object
    AlloyDbUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    AmazonAdsCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/AmazonOAuthCustomUserAuth'
    AmazonOAuthCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/RegionTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    AmazonSellingPartnerCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/AmazonOAuthCustomUserAuth'
        -
          $ref: '#/components/schemas/StoreNameTrait'
    AwsAuroraUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MysqlUserAuth'
    AwsAuroraPgsqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlUserAuth'
    AwsMariadbUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MysqlUserAuth'
    AwsMssqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MssqlUserAuth'
    AwsMysqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MysqlUserAuth'
    AwsPgsqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlUserAuth'
    DocumentClientIdSecretTrait:
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
      type: object
    RegionTrait:
      properties:
        region:
          type: string
      type: object
    DocumentSshConfigTrait:
      properties:
        password:
          type: string
          nullable: true
          deprecated: false
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        certificateId:
          type: string
          nullable: true
        remoteHost:
          type: string
          nullable: true
        remotePort:
          type: integer
          nullable: true
      type: object
    DocumentStaticKeyTrait:
      properties:
        staticKey:
          type: string
      type: object
    StoreNameTrait:
      properties:
        storeName:
          type: string
      type: object
    CoreWebVitalsUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
    DatabricksUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DatabricksTrait'
    FacebookCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    FacebookPageAccessTokenUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
    FacebookStaticUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
    FtpUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/FtpTrait'
    GoogleAdsCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            developerToken:
              type: string
            clientCustomerId:
              type: string
          type: object
    GoogleAdsStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            developerToken:
              type: string
            clientCustomerId:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleAnalytics4CustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleAnalytics4StaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleAnalyticsCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleAnalyticsStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleBigQueryCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleBigQueryStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleDisplayVideoCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleMssqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MssqlUserAuth'
    GoogleMyBusinessStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleMysqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MysqlUserAuth'
    GoogleOAuthCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GooglePgsqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/PgsqlUserAuth'
    GooglePlayCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleSearchConsoleCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleSearchConsoleStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    GoogleSheetsCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    GoogleSheetsStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    HubspotCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    InstagramCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    LinkedinCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    LinkedinStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    MariadbUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MysqlUserAuth'
    MicrosoftAdsCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            tenantId:
              type: string
            developerToken:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    MicrosoftAdsStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            developerToken:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            tenant:
              type: string
          type: object
    MongoUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/MongoTraitAuthorizer'
    MongoAtlasUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/MongoUserAuth'
    MssqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    MysqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/MysqlTrait'
    PgsqlUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    PinterestStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    QuickbooksCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            tenant:
              type: string
          type: object
    QuickbooksStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
            tenant:
              type: string
          type: object
    RedshiftUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    S3UserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    SftpUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/SftpTrait'
    SnapchatCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    SnapchatStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    TikTokBusinessAccountCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            businessId:
              type: string
          type: object
    TikTokCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    TikTokStaticUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/DocumentStaticKeyTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    TrinoUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          $ref: '#/components/schemas/TrinoTrait'
    TwitterCustomUserAuth:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
        -
          properties:
            clientId:
              type: string
            clientSecret:
              type: string
            redirectUri:
              type: string
          type: object
    VerticaUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/UserAuth'
        -
          $ref: '#/components/schemas/DiscriminatorTypeFieldTrait'
    YoutubeAnalyticsCustomUserAuth:
      allOf:
        -
          $ref: '#/components/schemas/GoogleOAuthCustomUserAuth'
    EmailTrait:
      properties:
        email:
          type: string
      type: object
    IdIntTrait:
      properties:
        id:
          type: integer
          nullable: true
      type: object
    TimestampTrait:
      properties:
        createdAt:
          type: string
          format: date-time
      type: object
    TokenTrait:
      properties:
        token:
          type: string
      type: object
    Member:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/IdIntTrait'
        -
          $ref: '#/components/schemas/TimestampTrait'
        -
          properties:
            email:
              type: string
            firstName:
              type: string
              nullable: true
            lastName:
              type: string
              nullable: true
            hubspotContactId:
              type: string
              nullable: true
            jobTitle:
              type: string
              nullable: true
            department:
              type: string
              nullable: true
            isMfa:
              type: boolean
            lastLogin:
              type: string
              format: date-time
              nullable: true
            invalidLoginCount:
              type: integer
          type: object
    MemberRequest:
      allOf:
        -
          $ref: '#/components/schemas/IdIntTrait'
        -
          $ref: '#/components/schemas/TimestampTrait'
        -
          $ref: '#/components/schemas/EmailTrait'
        -
          $ref: '#/components/schemas/TokenTrait'
    Token:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/IdIntTrait'
        -
          $ref: '#/components/schemas/TimestampTrait'
        -
          properties:
            customer_id:
              type: string
            token:
              type: string
            name:
              type: string
            lastUse:
              type: string
              format: date-time
              nullable: true
          type: object
    ActionStatusEnum:
      type: string
      enum:
        - live
        - broken
        - retrying
        - running
        - inactive
    JWKS:
      type: array
      items:
        properties:
          alg:
            type: string
          kty:
            type: string
          use:
            type: string
          key_ops:
            type: string
          kid:
            type: string
          crv:
            type: string
          x:
            type: string
          'y':
            type: string
        type: object
    SecurityDto:
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        provider: {  }
        realm_id:
          type: integer
        expires_in:
          type: integer
      type: object
    ActionCurrentState:
      properties:
        actionId:
          type: string
        status:
          $ref: '#/components/schemas/ActionStatusEnum'
        lastRunStarted:
          type: string
          format: date-time
          nullable: true
        lastRunFinished:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
      type: object
    ConnectorListResponse:
      properties:
        id:
          type: string
        label:
          type: string
        tags:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        group:
          type: string
          nullable: true
        customers:
          type: array
          items:
            type: integer
          nullable: true
        createdAt:
          type: string
        icon:
          type: string
        iconUrl:
          type: string
          nullable: true
        services:
          type: array
          items: {  }
        priority:
          type: integer
      type: object
    ConnectorTemplateResponse:
      properties:
        connectorId:
          type: string
        sourceName:
          type: string
        categories:
          type: array
          items: {  }
        templates:
          type: array
          items:
            properties:
              name:
                type: string
              description:
                type: string
              type:
                type: string
              templateId:
                type: string
              categoryId:
                type: array
                items: {  }
              attributes:
                type: array
                items: {  }
                nullable: true
            type: object
        iconUrl:
          type: string
          nullable: true
      type: object
    Response:
      properties:
        status:
          type: string
        status_code:
          type: integer
        log:
          type: array
          items: {  }
      type: object
    SuccessResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Response'
        -
          properties:
            data:
              type: array
              items: {  }
            key:
              type: array
              items: {  }
            type:
              type: array
              items: {  }
            row_count:
              type: integer
            duration:
              type: number
              format: float
            matrix:
              type: object
              nullable: true
          type: object
    StorageSourceMeta:
      properties:
        id:
          description: ''
          type: string
        updatedAt:
          description: 'When the source was updated for the last time'
          type: string
        engine:
          $ref: '#/components/schemas/SourceEngineDTO'
        metadata:
          $ref: '#/components/schemas/SourceMetadataDTO'
        columns:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/SourceColumnDTO'
      type: object
    APIDebugResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DebugResponse'
        -
          properties:
            logs:
              type: array
              items: {  }
          type: object
    AuthorizerDebugResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DebugResponse'
        -
          properties:
            logs:
              type: array
              items: {  }
          type: object
    DebugResponse:
      properties:
        status:
          type: string
        message:
          type: string
        started:
          type: number
          format: float
          nullable: true
        ended:
          type: number
          format: float
          nullable: true
        duration:
          type: string
          nullable: true
        memory_mb:
          type: integer
          nullable: true
      type: object
    ExtractionDebugResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DebugResponse'
        -
          properties:
            logs:
              type: array
              items: {  }
            row_count:
              type: integer
            blob:
              type: string
              nullable: true
          type: object
    WriterDebugResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DebugResponse'
        -
          properties:
            connectionResult:
              nullable: true
              oneOf:
                -
                  $ref: '#/components/schemas/ConnectionResult'
          type: object
    ConnectionResult:
      properties:
        config:
          type: array
          items: {  }
        result:
          type: array
          items: {  }
      type: object
  parameters: {  }
