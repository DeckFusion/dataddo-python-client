# coding: utf-8

"""
    Dataddo Headless BETA API

    Dataddo Headless BETA API

    The version of the OpenAPI document: 1.0.0-beta.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_authorizer_vertica_vertica_authorizer_create_service_request import AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest

class TestAppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest(unittest.TestCase):
    """AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest:
        """Test AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest`
        """
        model = AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest()
        if include_optional:
            return AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest(
                service = 'vertica',
                data = openapi_client.models.vertica_dto_authorizer.VerticaDtoAuthorizer()
            )
        else:
            return AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest(
        )
        """

    def testAppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest(self):
        """Test AppAuthorizerVerticaVerticaAuthorizerCreateServiceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
