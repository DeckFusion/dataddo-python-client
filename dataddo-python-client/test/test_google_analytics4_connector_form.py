# coding: utf-8

"""
    Dataddo Headless BETA API

    Dataddo Headless BETA API

    The version of the OpenAPI document: 1.0.0-beta.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_analytics4_connector_form import GoogleAnalytics4ConnectorForm

class TestGoogleAnalytics4ConnectorForm(unittest.TestCase):
    """GoogleAnalytics4ConnectorForm unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAnalytics4ConnectorForm:
        """Test GoogleAnalytics4ConnectorForm
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAnalytics4ConnectorForm`
        """
        model = GoogleAnalytics4ConnectorForm()
        if include_optional:
            return GoogleAnalytics4ConnectorForm(
                ensure_data_types = {"field1":"string","field2":"integer","field3":"date","field4":"float"},
                allow_empty = True,
                nullable_fields = True,
                connector_id = 'json',
                template_id = 'index',
                strategy = 'clean',
                storage_strategy = 'clean',
                label = 'My Source Label',
                o_auth_id = '1234',
                date_range = '{{1d1}}',
                use_dataddo_hash = True,
                account_id = '',
                property_id = '',
                sub_property_id = '',
                property_ids = [
                    ''
                    ],
                metric = ["newUsers","sessions"],
                dimension = ["date","sessionSourceMedium"],
                limit = 56,
                dimension_filter = '["{\n        \"filter\": {\n            \"fieldName\": \"screenPageViews\",\n            \"numericFilter\": {\n                \"operation\": \"GREATER_THAN_OR_EQUAL\",\n                \"value\": {\n                    \"int64Value\": 200\n                }\n            }\n        }\n    }"]',
                metric_filter = '["{\n        \"filter\": {\n            \"fieldName\": \"screenPageViews\",\n            \"numericFilter\": {\n                \"operation\": \"GREATER_THAN_OR_EQUAL\",\n                \"value\": {\n                    \"int64Value\": 200\n                }\n            }\n        }\n    }"]'
            )
        else:
            return GoogleAnalytics4ConnectorForm(
                connector_id = 'json',
                template_id = 'index',
                storage_strategy = 'clean',
                label = 'My Source Label',
                o_auth_id = '1234',
                property_id = '',
                metric = ["newUsers","sessions"],
                dimension = ["date","sessionSourceMedium"],
        )
        """

    def testGoogleAnalytics4ConnectorForm(self):
        """Test GoogleAnalytics4ConnectorForm"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
