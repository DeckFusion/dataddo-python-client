# coding: utf-8

"""
    Dataddo Headless BETA API

    Dataddo Headless BETA API

    The version of the OpenAPI document: 1.0.0-beta.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_authorizer_tik_tok_business_account_custom_tik_tok_business_account_custom_authorizer_new_o_auth_callback_request import AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest

class TestAppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest(unittest.TestCase):
    """AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest:
        """Test AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest`
        """
        model = AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest()
        if include_optional:
            return AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest(
                callback_url = 'https://my.app.com/callback?code=aaaaBBBBccc1234',
                config = openapi_client.models.tik_tok_business_account_custom_dto_authorizer.TikTokBusinessAccountCustomDtoAuthorizer(
                    label = '', 
                    business_id = '', )
            )
        else:
            return AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest(
        )
        """

    def testAppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest(self):
        """Test AppAuthorizerTikTokBusinessAccountCustomTikTokBusinessAccountCustomAuthorizerNewOAuthCallbackRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
